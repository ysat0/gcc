#!/bin/sh

# Copyright (C) 2002, 2003, 2009 Free Software Foundation, Inc.
#
# This file is part of the GNU ISO C++ Library.  This library is free
# software; you can redistribute it and/or modify it under the
# terms of the GNU General Public License as published by the
# Free Software Foundation; either version 3, or (at your option)
# any later version.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along
# with this library; see the file COPYING3.  If not see
# <http://www.gnu.org/licenses/>.


if test ${#} -lt 2 || test $1 = '--help'; then
  echo "Usage:  extract_symvers  shared_lib output_file" 1>&2
  exit 1
fi

lib=$1
output=$2

# Sun ld doesn't record symbol versions in .dynsym entries and they cannot
# easily be extracted from readelf --versions output, so use pvs instead.
if type pvs 2>&1 | grep 'not found' > /dev/null; then
    :
else
    pvs="pvs -dsvo"
fi

# GNU binutils, somewhere after version 2.11.2, requires -W/--wide to avoid
# default line truncation.  -W is not supported and truncation did not occur
# by default before that point.
readelf="readelf --symbols"
if readelf --help | grep -- --wide > /dev/null; then
    readelf="$readelf --wide"
fi

# This avoids weird sorting problems later.
LC_ALL=C
export LC_ALL
LANG=C
export LANG

tmp=extract.$$

# Prefer pvs if found.  Need to use nawk on Solaris 2 since Solaris 8/9 awk
# (oawk) cannot handle sub.
if [ -n ${pvs} ]; then
    ${pvs} ${lib} | \
    nawk '# Remove colon separator from version field, trailing semicolon.
	 {
	   sub (/:$/, "", $3);
	   sub (/;$/, "");
	 }
	 # Record base version.  The [BASE] field was only added in Solaris 11,
	 # so simply use the first record instead.
	 NR == 1 {
	   basever = $3;
	   next;
	 }
	 # Ignore version dependencies.
	 $4 ~ /\{.*\}/ {
	   next;
	 }
	 NF == 4 {
	   if ($3 == $4 || $3 == basever)
	     # Emit versions or symbols bound to base versions as objects.
	     printf "OBJECT:0:%s\n", $4;
	   else
	     # Everything else without a size field is a function.
	     printf "FUNC:%s@@%s\n", $4, $3;
	   next;
	 }
	 # Emit objects.
	 NF == 5 {
	   # Strip parens from object size.
	   sub (/^\(/, "", $5);
	   sub (/\)$/, "", $5);
	   printf "OBJECT:%s:%s@@%s\n", $5, $4, $3;
	   next;
	 }' | sort | uniq > $tmp 2>&1
else
    ${readelf} ${lib} |\
    sed -e 's/ \[<other>: [A-Fa-f0-9]*\] //' -e '/\.dynsym/,/^$/p;d' |\
    egrep -v ' (LOCAL|UND) ' |\
    awk '{ if ($4 == "FUNC" || $4 == "NOTYPE")
             printf "%s:%s\n", $4, $8;
           else if ($4 == "OBJECT" || $4 == "TLS")
             printf "%s:%s:%s\n", $4, $3, $8;
         }' | sort | uniq > $tmp 2>&1
#          else printf "Huh?  What is %s?\n", $8;
fi


# I think we'll be doing some more with this file, but for now, dump.
mv $tmp $output

exit 0
