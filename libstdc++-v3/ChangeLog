2006-04-10  Matthias Klose  <doko@debian.org>

	* testsuite/lib/libstdc++.exp (libstdc++_init): Recognize multilib
	directory names containing underscores.

2006-04-10  Paolo Carlini  <pcarlini@suse.de>

	DR 538, [Ready]
	* include/bits/stl_algo.h (__unique_copy(,,, input_iterator_tag,
	output_iterator_tag), and predicated counterpart): Revert to the
	algorithm pre-DR 241, i.e., value_type of InputIterator is now
	required to be Assignable too.
	* testsuite/25_algorithms/unique_copy/3.cc: Remove.
	* docs/html/ext/howto.html: Add an entry for DR 538.

2006-03-29  Benjamin Kosnik  <bkoz@redhat.com>

	* testsuite/data/sgetn.txt:  Correct copyright holder.
	* testsuite/data/wistream_extractor_other-1.tst: Same.
	* testsuite/data/wistream_extractor_other-2.tst: Same.
	* testsuite/data/istream_extractor_other-1.txt: Same.
	* testsuite/data/filebuf_virtuals-1.txt: Same.
	* testsuite/data/wostream_inserter_other-1.tst: Same.
	* testsuite/data/wostream_inserter_other-2.tst: Same.
	* testsuite/data/ostream_inserter_other-1.tst: Same.
	* testsuite/data/ostream_inserter_other-2.tst: Same.
	* testsuite/data/wistream_extractor_other-1.txt: Same.
	* testsuite/data/istream_extractor_other-1.tst: Same.
	* testsuite/data/istream_extractor_other-2.tst: Same.
	* testsuite/data/filebuf_virtuals-1.tst: Same.
	* testsuite/27_io/basic_filebuf/sgetn/char/1-in.cc: Adjust test
	conditions.
	* testsuite/27_io/basic_filebuf/sgetn/char/1-io.cc: Same.
	* testsuite/27_io/basic_filebuf/sgetn/char/2-in.cc: Same.
	* testsuite/27_io/basic_filebuf/sgetn/char/2-io.cc: Same.

2006-03-28  Paolo Carlini  <pcarlini@suse.de>

	* include/ext/vstring.h (operator[]): Allow s[s.size()] in
	debug mode, but not pedantic mode.

2006-03-24  Mark Mitchell  <mark@codesourcery.com>
            Joseph S. Myers  <joseph@codesourcery.com>

	PR libstdc++/20448
	PR libstdc++/20451
	* scripts/testsuite_flags.in (--cxxflags): Don't define LOCALEDIR.
	* testsuite/lib/libstdc++.exp (libstdc++_init): Always define
	LOCALEDIR to ".".
	(v3-build_support): Build MO files.

2006-03-22  Paolo Carlini  <pcarlini@suse.de>

	PR libstdc++/26777
	* include/bits/fstream.tcc (basic_filebuf<>::_M_seek): Check
	the return value of _M_file.seekoff.
	* testsuite/27_io/basic_filebuf/seekoff/char/26777.cc: New.

2006-03-21  Paolo Carlini  <pcarlini@suse.de>

	PR libstdc++/25482
	* include/bits/stl_algobase.h (__copy_aux(_CharT*, _CharT*,
	ostreambuf_iterator<_CharT>), __copy_aux(const _CharT*, const _CharT*,
	ostreambuf_iterator<_CharT>), __copy_aux(istreambuf_iterator<_CharT>,
	istreambuf_iterator<_CharT>, _CharT*), copy(istreambuf_iterator<_CharT>,
	istreambuf_iterator<_CharT>, ostreambuf_iterator<_CharT>)): Declare.
	* include/bits/stl_algo.h (find(istreambuf_iterator<_CharT>,
	istreambuf_iterator<_CharT>, _CharT)): Likewise.
	* include/bits/streambuf_iterator.h (copy(istreambuf_iterator<_CharT>,
	istreambuf_iterator<_CharT>, ostreambuf_iterator<_CharT>),
	__copy_aux(_CharT*, _CharT*, ostreambuf_iterator<_CharT>),
	__copy_aux(const _CharT*, const _CharT*, ostreambuf_iterator<_CharT>),
	__copy_aux(istreambuf_iterator<_CharT>, istreambuf_iterator<_CharT>,
	_CharT*), find(istreambuf_iterator<_CharT>, istreambuf_iterator<_CharT>,
	_CharT)): Define.
	(class istreambuf_iterator<>, class ostreambuf_iterator<>): Declare
	friends.
	* include/std/std_streambuf.h (class basic_streambuf<>): Likewise.
	* include/bits/cpp_type_traits.h (struct __is_char<>): Add.
	* testsuite/25_algorithms/copy/streambuf_iterators/char/1.cc: New.
	* testsuite/25_algorithms/copy/streambuf_iterators/char/2.cc: New.
	* testsuite/25_algorithms/copy/streambuf_iterators/char/3.cc: New.
	* testsuite/25_algorithms/copy/streambuf_iterators/char/4.cc: New.
	* testsuite/25_algorithms/copy/streambuf_iterators/wchar_t/1.cc: New.
	* testsuite/25_algorithms/copy/streambuf_iterators/wchar_t/2.cc: New.
	* testsuite/25_algorithms/copy/streambuf_iterators/wchar_t/3.cc: New.
	* testsuite/25_algorithms/copy/streambuf_iterators/wchar_t/4.cc: New.
	* testsuite/25_algorithms/find/istreambuf_iterators/char/1.cc: New.
	* testsuite/25_algorithms/find/istreambuf_iterators/char/2.cc: New.
	* testsuite/25_algorithms/find/istreambuf_iterators/wchar_t/1.cc: New.
	* testsuite/25_algorithms/find/istreambuf_iterators/wchar_t/2.cc: New.
	* testsuite/performance/25_algorithms/copy_streambuf_iterators.cc: New.
	* testsuite/performance/25_algorithms/find_istreambuf_iterators.cc: New.

006-03-13  Paolo Carlini  <pcarlini@suse.de>

	* include/bits/postypes.h (fpos<>::operator==, operator!=): Remove,
	exploit conversion to streamoff.
	* testsuite/27_io/fpos/mbstate_t/5.cc: New.

2006-03-12  Howard Hinnant  <hhinnant@apple.com>

	* testsuite/27_io/basic_filebuf/underflow/char/10097.cc:
	Fix race condition.
	* testsuite/27_io/objects/char/9661-1.cc: Likewise.
	* testsuite/27_io/objects/wchar_t/9661-1.cc: Likewise.

2006-03-10  Paolo Carlini  <pcarlini@suse.de>

	* include/tr1/cmath: Add atan2 and pow bits; add using declarations.	
	* include/tr1/math.h: Add using declarations.
	* include/tr1/complex: Add using declarations.
	* testsuite/tr1/8_c_compatibility/cmath/functions.cc: Fully
	qualify calls.
	* testsuite/tr1/8_c_compatibility/cmath/overloads.cc: Likewise;
	add atan2 and pow bits.
	* testsuite/tr1/8_c_compatibility/complex/overloads_float.cc: Likewise.
	* testsuite/tr1/8_c_compatibility/complex/overloads_int.cc: Likewise;
	adjust polar bits.

	* acinclude.m4 ([GLIBCXX_CHECK_C99_TR1]): Add checks for double_t
	and float_t typedefs.
	* include/tr1/cmath: Add double_t and float_t.
	* testsuite/tr1/8_c_compatibility/cmath/types.cc: New.

	* include/tr1/ctgmath: New.
	* include/tr1/tgmath.h: Likewise.
	* include/Makefile.am: Add.
	* testsuite/tr1/headers.cc: Update.

	* include/Makefile.in: Regenerate.
	* configure: Likewise.

	* docs/html/ext/tr1.html: Update.

2006-03-08  Paolo Carlini  <pcarlini@suse.de>

	Implement the resolution of DR 455, [DR].
	* src/ios_init.cc (ios_base::Init::Init()): Do it.
	* testsuite/27_io/objects/char/dr455.cc: New.
	* testsuite/27_io/objects/wchar_t/dr455.cc: Likewise.
	* docs/html/ext/howto.html: Add an entry for DR 455.

2006-03-07  Paolo Carlini  <pcarlini@suse.de>

	* include/tr1/cmath: Add C99 overloads.
	* include/tr1/common.h (struct __promote_3): Add.
	* testsuite/tr1/8_c_compatibility/cmath/overloads.cc: New.

	* testsuite/tr1/8_c_compatibility/cmath/functions.cc: Tweak.
	* testsuite/tr1/8_c_compatibility/complex/overloads_float.cc: Likewise.

2006-03-06  Paolo Carlini  <pcarlini@suse.de>

	PR target/26532
	* config/io/c_io_stdio.h (struct __ios_flags): Remove.
	* include/bits/ios_base.h: Adjust consistently.
	(ios_base::_S_local_word_size): Change to an anonymous enum.
	* src/ios.cc: Do not define static const data of __ios_flags,
	likewise for ios_base::_S_local_word_size.	
	* include/bits/locale_classes.h (locale::_S_categories_size):
	Change to an anonymous enum.
	* src/locale.cc: Don't define.

2006-03-03  Paolo Carlini  <pcarlini@suse.de>

	PR libstdc++/26526
	* config/abi/pre/gnu.ver (__copy_streambufs, 64-bit version): Add
	@GLIBCXX_3.4.8; move existing symbols @GLIBCXX_3.4.8 to 3.4.9.
	* configure.ac (libtool_VERSION): To 6:9:0.
	* testsuite/testsuite_abi.cc (check_version): Add GLIBCXX_3.4.9.
	* configure: Regenerate.

2006-03-02  Paolo Carlini  <pcarlini@suse.de>

	* config/abi/pre/gnu.ver: Adjust __copy_streambufs_eof export
	vs 64-bit arches.

2006-03-01  Paolo Carlini  <pcarlini@suse.de>

	* docs/html/ext/lwg-active.html, lwg-defects.html: Import Revision 41.

2006-02-27  Jakub Jelinek  <jakub@redhat.com>

	PR other/26208
	* libsupc++/eh_personality.cc (PERSONALITY_FUNCTION): Use
	_Unwind_GetIPInfo instead of _Unwind_GetIP.

2006-02-27  Paolo Carlini  <pcarlini@suse.de>

	PR libstdc++/14866
	* testsuite/27_io/ios_base/sync_with_stdio/1.cc: Redirect
	stderr instead.

2006-02-26  Paolo Carlini  <pcarlini@suse.de>

	* include/tr1/cmath: Add templates (8.16.3).	
	* include/tr1/cstdbool: New.
	* include/tr1/stdbool.h: Likewise.
	* include/Makefile.am: Add.
	* testsuite/tr1/8_c_compatibility/cmath/templates.cc: New.
	* testsuite/tr1/headers.cc: Update.
	* acinclude.m4 ([GLIBCXX_CHECK_C99_TR1]): Add <stdbool.h> check.
	* docs/html/ext/tr1.html: Update.
	* include/Makefile.in: Regenerate.
	* config.h.in: Likewise.
	* configure: Likewise.

2006-02-24  Paolo Carlini  <pcarlini@suse.de>

	* include/tr1/array (array<>::swap, assign): Implement.
	* include/tr1/array (operator==, operator!=, operator<,
	operator>, operator>=, operator<=, swap, get): Inline.
	* testsuite/tr1/6_containers/array/requirements/member_swap.cc: New.
	* testsuite/tr1/6_containers/array/requirements/assign.cc: Likewise.
	* testsuite/tr1/6_containers/array/specialized_algorithms/swap.cc:
	Likewise.

2006-02-23  Benjamin Kosnik  <bkoz@redhat.com>

	* testsuite/22_locale/codecvt/in/wchar_t/1.cc (test01): Change int
	to size_t. Use explicit static_cast for casts.
	* testsuite/22_locale/codecvt/in/wchar_t/6.cc (test06): Same.
	* testsuite/22_locale/codecvt/in/wchar_t/5.cc (test05): Same.
	* testsuite/ext/stdio_sync_filebuf/wchar_t/1.cc (test01): Same.
	
2006-02-22  Paolo Carlini  <pcarlini@suse.de>

	* docs/html/ext/pb_assoc/
	basic_tree_assoc_cntnr_const_node_iterator.html:Fix links
	* docs/html/ext/pb_assoc/basic_tree_assoc_cntnr_node_iterator.html:
	Likewise.
	* docs/html/ext/pb_assoc/hash_based_containers.html: Likewise.
	* docs/html/ext/pb_assoc/hash_standard_resize_policy.html: Likewise.
	* docs/html/ext/pb_assoc/interface.html: Likewise..
	* docs/html/ext/pb_assoc/list_updates.html: Likewise.
	* docs/html/ext/pb_assoc/lu_based_containers.html: Likewise.
	* docs/html/ext/pb_assoc/resize_policies.html: Likewise.
	* docs/html/ext/pb_assoc/sample_probe_fn.html: Likewise.
	* docs/html/ext/pb_assoc/sample_range_hashing.html: Likewise.
	* docs/html/ext/pb_assoc/sample_ranged_hash_fn.html: Likewise.
	* docs/html/ext/pb_assoc/sample_ranged_probe_fn.html: Likewise.
	* docs/html/ext/pb_assoc/sample_resize_policy.html: Likewise.
	* docs/html/ext/pb_assoc/tree_assoc_cntnr_const_node_iterator.html:
	Likewise.
	* docs/html/ext/pb_assoc/tree_assoc_cntnr_node_iterator.html: Likewise.

2006-02-22  Paolo Carlini  <pcarlini@suse.de>

	PR libstdc++/26132
	* include/tr1/hashtable (hashtable<>::rehash): Define.
	* testsuite/tr1/6_containers/unordered/hashtable/26132.cc: New.

	* include/tr1/hashtable: Trivial formatting and stylistic fixes.

	* testsuite/tr1/headers.cc: remove <tr1/hashtable>, not a tr1 header,
	only an implementation detail.

2006-02-22  Paolo Carlini  <pcarlini@suse.de>

	* include/debug/list (splice): Remove splice_alloc check, redundant
	after implementing the splice bits of N1599.

2006-02-21  Benjamin Kosnik  <bkoz@redhat.com>

	* include/c_std/cmath.tcc: Use _GLIBCXX_BEGIN_NAMESPACE,
	_GLIBCXX_END_NAMESPACE.

2006-02-21  Benjamin Kosnik  <bkoz@redhat.com>

	* include/bits/c++config: Simplify debug namespaces.
	* include/ext/hash_set: Specialize insert_iterator after norm,
	debug containers have been (optionally) declared. Use nested
	namespaces.	
	* include/ext/hash_map: Same.
	* include/debug/hash_map.h (insert): Add specialization for value
	pointer types.
	* include/debug/hash_set.h (insert): Same.
	* include/debug/hash_multimap.h: Change __gnu_debug_def to __debug.
	* include/debug/set.h: Same.
	* include/debug/bitset: Same.
	* include/debug/multiset.h: Same.
	* include/debug/hash_multiset.h: Same.
	* include/debug/vector: Same.
	* include/debug/map.h: Same.
	* include/debug/deque: Same.
	* include/debug/list: Same.
	* include/debug/multimap.h. Same.
	* include/debug/macros.h: Use __gnu_debug.
	* include/debug/debug.h: Same.
	* include/debug/formatter.h: Same.
	* include/debug/safe_sequence.h: Same.
	* include/debug/functions.h: Same.
	* include/debug/safe_base.h: Same.
	* include/debug/safe_iterator.h: Same.
	* include/debug/safe_iterator.tcc: Same.
	(_M_invalidate): Adjust compare order.
	* include/debug/string: Change std::__gnu_debug to __gnu_debug.
	* include/ext/hashtable.h: Formatting fixes.
	* include/bits/stl_map.h: Formatting fixes.		
	* src/compatibility.cc: Adjust compatibility symbols for old debug
	mode model.	
	* src/debug_list.cc: Tweak.
	* src/debug.cc: Adjust namespaces.
	* docs/html/debug_mode.html: Adjust namespace names.
	* testsuite/25_algorithms/heap/heap.cc: Restore _GLIBCXX_DEBUG
	macro guards, as count values differ when in debug mode.	
	* testsuite/23_containers/vector/26412.cc: Move to...
	* testsuite/23_containers/vector/26412-1.cc: ... here.
	* testsuite/23_containers/vector/26412-2.cc: Add.

	* include/ext/pb_assoc/detail/standard_policies.hpp
	(PB_ASSOC_HASH_NAMESPACE): Remove, use __gnu_cxx::hash_map and
	std::equal_to.

	* configure.ac (libtool_VERSION): To 6:8:0.
	* configure: Regenerate.
	* config/abi/pre/gnu.ver: Revert to exporting __gnu_debug symbols.
	(GLIBCXX_3.4.8): New.
	* testsuite/testsuite_abi.cc: Add GLIBCXX_3.4.8 to known versions.
	
2006-02-21  Paolo Carlini  <pcarlini@suse.de>

	* include/tr1/hashtable: Trivial formatting fixes.

2006-02-20  Paolo Carlini  <pcarlini@suse.de>

	Revert recent commit for libstdc++/26211, now suspended waiting for
	DR 342 (reopened) to reach a new resolution.
	* include/bits/istream.tcc (basic_istream<>::tellg, seekg(pos_type),
	seekg(off_type, ios_base::seekdir)): Remove sentry.
	* testsuite/27_io/basic_istream/seekg/char/26211.cc: Remove.
	* testsuite/27_io/basic_istream/seekg/wchar_t/26211.cc: Likewise.
	* testsuite/27_io/basic_istream/tellg/char/26211.cc: Likewise.
	* testsuite/27_io/basic_istream/tellg/wchar_t/26211.cc: Likewise.
	* testsuite/27_io/basic_istream/seekg/char/8348-1.cc: Revert changes.
	* testsuite/27_io/basic_istream/seekg/wchar_t/8348-1.cc: Likewise.
	* testsuite/27_io/basic_istream/seekg/char/8348-2.cc: Likewise.
	* testsuite/27_io/basic_istream/seekg/wchar_t/8348-1.cc: Likewise.
	* testsuite/27_io/basic_istream/tellg/char/8348.cc: Likewise.
	* testsuite/27_io/basic_istream/tellg/wchar_t/8348.cc: Likewise.

2006-02-19  Paolo Carlini  <pcarlini@suse.de>

	* include/std/std_sstream.h (basic_stringbuf<>::setbuf): Simply
	clear the internal _M_string, adjust _M_sync call.
	* include/bits/sstream.tcc (basic_stringbuf<>::_M_sync): Adjust
	consistently for calls from setbuf.

2006-02-17  Paolo Carlini  <pcarlini@suse.de>
	    Howard Hinnant  <hhinnant@apple.com>

	PR libstdc++/26250
	* include/bits/sstream.tcc (basic_stringbuf<>::overflow): Tweak
	to leave epgtr() just past the new write position, as per the
	relevant bits of 27.7.1.3/8 (not changed by DR 432).
	* testsuite/27_io/basic_stringbuf/overflow/char/26250.cc: New.
	* testsuite/27_io/basic_stringbuf/overflow/wchar_t/26250.cc: Same.

	* docs/html/ext/howto.html: Add entries for DR 169 and DR 432.

	* include/std/std_sstream.h (basic_stringbuf<>::_M_sync): Move out
	of line...
	* include/bits/sstream.tcc: ... here.

2006-02-16  Joseph S. Myers  <joseph@codesourcery.com>

	PR libstdc++/14939
	* config/os/uclibc/ctype_base.h, config/os/uclibc/ctype_inline.h,
	config/os/uclibc/ctype_noninline.h, config/os/uclibc/os_defines.h:
	New.
	* acinclude.m4 (GLIBCXX_CONFIGURE): Test whether using uClibc.
	* configure.host: Use os/uclibc for uClibc.
	* crossconfig.m4 (*-linux*): Use link tests.  Don't hardcode
	presence of math functions.
	* configure: Regenerate.

2006-02-12  Paolo Carlini  <pcarlini@suse.de>

	PR libstdc++/26211
	* include/bits/istream.tcc (basic_istream<>::tellg, seekg(pos_type),
	seekg(off_type, ios_base::seekdir)): Construct a sentry, as per
	27.6.1.3/1.
	* testsuite/27_io/basic_istream/seekg/char/26211.cc: New.
	* testsuite/27_io/basic_istream/seekg/wchar_t/26211.cc: Likewise.
	* testsuite/27_io/basic_istream/tellg/char/26211.cc: Likewise.
	* testsuite/27_io/basic_istream/tellg/wchar_t/26211.cc: Likewise.
	* testsuite/27_io/basic_istream/seekg/char/8348-1.cc: Adjust.
	* testsuite/27_io/basic_istream/seekg/wchar_t/8348-1.cc: Likewise.
	* testsuite/27_io/basic_istream/seekg/char/8348-2.cc: Likewise.
	* testsuite/27_io/basic_istream/seekg/wchar_t/8348-1.cc: Likewise.
	* testsuite/27_io/basic_istream/tellg/char/8348.cc: Likewise.
	* testsuite/27_io/basic_istream/tellg/wchar_t/8348.cc: Likewise.

2006-02-10  Paolo Carlini  <pcarlini@suse.de>

	PR libstdc++/26181
	* include/bits/streambuf.tcc (__copy_streambufs_eof): New, like
	the existing __copy_streambufs but reporting eof in input.
	(__copy_streambufs): Just use the latter.
	* src/streambuf.cc (__copy_streambufs_eof): Adjust specializations
	of __copy_streambufs.
	* include/bits/istream.tcc (operator>>(__streambuf_type*)): Use
	__copy_streambufs_eof instead.
	* include/std/std_streambuf.h: Adjust.
	* src/streambuf-inst.cc: Adjust.
	* config/abi/pre/gnu.ver: Export the new symbols.
	* testsuite/27_io/basic_istream/extractors_other/char/26181.cc: New.
	* testsuite/27_io/basic_istream/extractors_other/wchar_t/26181.cc:
	Likewise.
	* testsuite/27_io/basic_istream/extractors_other/char/1.cc: Adjust.
	* testsuite/27_io/basic_istream/extractors_other/wchar_t/1.cc:
	Likewise.

2006-02-08  Benjamin Kosnik  <bkoz@redhat.com>

	PR libstdc++/26142
	* include/debug/debug.h: Move debug alias inside namespace std,
	same with namespace __gnu_cxx. Add top-level __gnu_debug
	namespace.	
	* include/debug/hash_multimap.h: Nest within __gnu_cxx, not
	std. Also, change nesting namespace name from __gnu_debug_def to
	__gnu_debug.	
	* include/debug/hash_map.h: Same.
	* include/debug/hash_multiset.h: Same.
	* include/debug/hash_set.h: Same.
	* docs/html/debug.html: Same.
	* testsuite/23_containers/vector/26412.cc: New.
	* testsuite/23_containers/vector/invalidation/1.cc:  Correct
	qualifications for debug namespace change.
	* testsuite/23_containers/vector/invalidation/2.cc: Same.
	* testsuite/23_containers/vector/invalidation/3.cc: Same.
	* testsuite/23_containers/vector/invalidation/4.cc: Same.
	* testsuite/23_containers/deque/invalidation/1.cc: Same.
	* testsuite/23_containers/deque/invalidation/2.cc: Same.
	* testsuite/23_containers/deque/invalidation/3.cc: Same.
	* testsuite/23_containers/deque/invalidation/4.cc: Same.
	* testsuite/23_containers/multiset/invalidation/1.cc: Same.
	* testsuite/23_containers/multiset/invalidation/2.cc: Same.
	* testsuite/23_containers/multimap/invalidation/1.cc: Same.
	* testsuite/23_containers/multimap/invalidation/2.cc: Same.
	* testsuite/23_containers/bitset/invalidation/1.cc: Same.
	* testsuite/23_containers/bitset/cons/16020.cc: Same.
	* testsuite/23_containers/bitset/operations/13838.cc: Same.
	* testsuite/23_containers/list/invalidation/1.cc: Same.
	* testsuite/23_containers/list/invalidation/2.cc: Same.
	* testsuite/23_containers/list/invalidation/3.cc: Same.
	* testsuite/23_containers/list/invalidation/4.cc: Same.
	* testsuite/23_containers/set/invalidation/1.cc: Same.
	* testsuite/23_containers/set/invalidation/2.cc: Same.
	* testsuite/23_containers/map/invalidation/1.cc: Same.
	* testsuite/23_containers/map/invalidation/2.cc: Same.
	* testsuite/23_containers/map/modifiers/insert/16813.cc: Same.
	* testsuite/21_strings/basic_string/2.cc: Same.

2006-02-08  Paolo Carlini  <pcarlini@suse.de>

	PR libstdc++/26133  (DR 241, [WP])
	* include/bits/stl_algo.h (__unique_copy(,,, forward_iterator_tag,
	output_iterator_tag), __unique_copy(,,, input_iterator_tag,
	output_iterator_tag), __unique_copy(,,, input_iterator_tag,
	forward_iterator_tag), and predicated counterparts): Add.
	(__unique_copy(,,, output_iterator_tag), __unique_copy(,,,
	forward_iterator_tag), and predicated counterparts): Remove.
	(unique_copy): Adjust, dispatch to the three helpers above.
	* testsuite/25_algorithms/unique_copy/2.cc: New.
	* testsuite/25_algorithms/unique_copy/26133.cc: Likewise.
	* testsuite/25_algorithms/unique_copy/3.cc: Likewise.	
	* docs/html/ext/howto.html: Add an entry for DR 241.

	* testsuite/25_algorithms/unique_copy/1.cc: Minor cosmetic changes.

2006-02-07  Jakub Jelinek  <jakub@redhat.com>
	    Benjamin Kosnik  <bkoz@redhat.com>

	* configure.ac (_GLIBCXX_LONG_DOUBLE_COMPAT): New check.
	If true, set also port_specific_symbol_files and create
	as_symver_specs.
	(GLIBCXX_LDBL_COMPAT): New GLIBCXX_CONDITIONAL.
	* configure: Rebuilt.
	* config.h.in: Rebuilt.
	* config/os/gnu-linux/ldbl-extra.ver: New file.
	* config/abi/pre/gnu.ver: Make sure no __float128 symbols are
	exported.
	* include/bits/c++config (_GLIBCXX_LONG_DOUBLE_COMPAT,
	_GLIBCXX_LDBL_NAMESPACE, _GLIBCXX_BEGIN_LDBL_NAMESPACE,
	_GLIBCXX_END_LDBL_NAMESPACE): Define.
	* include/bits/localefwd.h: Use them to conditionally scope facets.
	* include/bits/locale_facets.h: Surround std::{money,num}_{get,put}
	with _GLIBCXX_BEGIN_LDBL_NAMESPACE and _GLIBCXX_END_LDBL_NAMESPACE.
	Surround std::{money,num}_{get,put}
	with _GLIBCXX_BEGIN_LDBL_NAMESPACE and _GLIBCXX_END_LDBL_NAMESPACE.
	[_GLIBCXX_LONG_DOUBLE_COMPAT] (std::money_get): Add __do_get method.
	[_GLIBCXX_LONG_DOUBLE_COMPAT] (std::money_put): Add __do_put method.
	[_GLIBCXX_LONG_DOUBLE_COMPAT] (std::num_get): Add __do_get method.
	[_GLIBCXX_LONG_DOUBLE_COMPAT] (std::num_put): Add __do_put method.
	* include/bits/locale_facets.tcc: Surround std::{money,num}_{get,put}
	with _GLIBCXX_BEGIN_LDBL_NAMESPACE and _GLIBCXX_END_LDBL_NAMESPACE.
	(std::money_get::__do_get, std::money_put::__do_put,
	std::num_get::__do_get, std::num_put::__do_put): New
	specializations.
	* include/Makefile.am: Conditionally define
	_GLIBCXX_LONG_DOUBLE_COMPAT in c++config.
	* include/Makefile.in: Regenerate.
	* src/locale.cc [_GLIBCXX_LONG_DOUBLE_COMPAT] (_GLIBCXX_LOC_ID,
	_GLIBCXX_SYNC_ID): Define, use them.
	* src/compatibility-ldbl.cc: New file.
	* src/complex_io.cc [_GLIBCXX_LONG_DOUBLE_COMPAT]: Add compatibility
	symbols.
	* src/limits.cc [_GLIBCXX_LONG_DOUBLE_COMPAT]: Likewise.
	* src/locale.cc [_GLIBCXX_LONG_DOUBLE_COMPAT]: Likewise.
	* src/locale-inst.cc [_GLIBCXX_LONG_DOUBLE_COMPAT]: Likewise.	
	* src/locale-misc-inst.cc [_GLIBCXX_LONG_DOUBLE_COMPAT]: Likewise.
	* src/istream-inst.cc [_GLIBCXX_LONG_DOUBLE_COMPAT]: Likewise.
	* src/ostream-inst.cc [_GLIBCXX_LONG_DOUBLE_COMPAT]: Likewise.
	* src/locale.cc [_GLIBCXX_LONG_DOUBLE_COMPAT]: Likewise.
	* src/wlocale-inst.cc [_GLIBCXX_LONG_DOUBLE_COMPAT]: Likewise.
	* src/compatibility.cc [_GLIBCXX_LONG_DOUBLE_COMPAT]: Likewise.
	* config/locale/generic/c_locale.cc [_GLIBCXX_LONG_DOUBLE_COMPAT]:
	Likewise.
	* config/locale/gnu/c_locale.cc [_GLIBCXX_LONG_DOUBLE_COMPAT]:
	Likewise.
	* src/Makefile.am (libstdc++-symbol.ver): Append instead of
	insert in the middle if port specific symbol file requests it.
	(ldbl_compat_sources): New variable.
	(sources): Use it.
	(compatibility-ldbl.lo, compatibility-ldbl.o): New rules.
	* src/Makefile.in: Rebuilt.
	* testsuite/testsuite_abi.cc: Recognize GLIBCXX_LDBL_3.4,
	GLIBCXX_LDBL_3.4.7, CXXABI_LDBL_1.3.	

2006-02-07  Paolo Carlini  <pcarlini@suse.de>	

	* include/tr1/hashtable: Trivial formatting fixes.

2006-02-07  Paolo Carlini  <pcarlini@suse.de>
	    Zak Kipling  <zak@transversal.com>

	PR libstdc++/26127
	* include/tr1/hashtable (hashtable<>::key_equal): Define.
	(hashtable<>::bucket, rehash_base<>::max_load_factor): Fix.
	* testsuite/tr1/6_containers/unordered/hashtable/26127.cc: New.

2006-02-07  Paolo Carlini  <pcarlini@suse.de>

	* include/tr1/cmath: New.
	* include/tr1/cstdlib: Likewise.
	* include/tr1/ctime: Likewise.
	* include/tr1/math.h: Likewise.	
	* include/tr1/stdlib.h: Likewise.
	* include/Makefile.am: Add.
	* acinclude.m4 ([GLIBCXX_CHECK_C99_TR1]): Add <math.h> checks.
	* testsuite/tr1/8_c_compatibility/cmath/functions.cc: New.
	* testsuite/tr1/8_c_compatibility/cstdlib/functions.cc: Likewise.
	* testsuite/tr1/8_c_compatibility/cstdlib/types.cc: Likewise.
	* testsuite/tr1/headers.cc: Update.	

	* include/tr1/cinttypes: Do not provide abs and div, conflicting
	with the above overloads for _Longlong types.
	* include/tr1/inttypes.h: Adjust.
	* testsuite/tr1/8_c_compatibility/cinttypes/functions.cc: Adjust.

	* docs/html/ext/tr1.html: Update.
	
	* testsuite/tr1/8_c_compatibility/cwchar/functions.cc: Tweak.

	* include/Makefile.in: Regenerate.
	* config.h.in: Likewise.
	* configure: Likewise.

2006-02-07  Mark Mitchell  <mark@codesourcery.com>

	* testsuite/testsuite_tr1.h (test_property): New function.
	* testsuite/tr1/4_metaprogramming/type_properties/extent/extent.cc 
	(test01) 

2006-02-05  Paolo Carlini  <pcarlini@suse.de>

	* include/tr1/cstdio: New.
	* include/tr1/stdio.h: Likewise.
	* include/Makefile.am: Add.
	* testsuite/tr1/8_c_compatibility/cstdio/functions.cc: New.
	* testsuite/tr1/headers.cc: Update.	
	* docs/html/ext/tr1.html: Update.

	* include/tr1/cwchar: Simplify, use _GLIBCXX_USE_C99, consistently
	with the facilities in std::.
	* include/tr1/cwctype: Likewise.
	* testsuite/tr1/8_c_compatibility/cwchar/functions.cc: Tweak.
	* testsuite/tr1/8_c_compatibility/cwctype/functions.cc: Likewise.
	* acinclude.m4 ([GLIBCXX_CHECK_C99_TR1]): Remove <wchar.h> and
	<wctype.h> checks.

	* include/Makefile.in: Regenerate.
	* config.h.in: Likewise.
	* configure: Likewise.

2006-02-04  Paolo Carlini  <pcarlini@suse.de>

	* testsuite/tr1/8_c_compatibility/cwchar/functions.cc: Fix.

2006-02-04  Paolo Carlini  <pcarlini@suse.de>

	* testsuite/27_io/basic_stringbuf/in_avail/char/21955.cc: Avoid
	warning on string constant.

2006-02-03  Paolo Carlini  <pcarlini@suse.de>

	* include/tr1/cwchar: New.
	* include/tr1/cwctype: Likewise.
	* include/tr1/wchar.h: Likewise.
	* include/tr1/wctype.h: Likewise.
	* include/Makefile.am: Add.
	* testsuite/tr1/8_c_compatibility/cwchar/functions.cc: New.
	* testsuite/tr1/8_c_compatibility/cwctype/functions.cc: Likewise.
	* testsuite/tr1/headers.cc: Update.
	* acinclude.m4 ([GLIBCXX_CHECK_C99_TR1]): Add <wchar.h> and
	<wctype.h> checks.
	* docs/html/ext/tr1.html: Update.
	* include/Makefile.in: Regenerate.
	* config.h.in: Likewise.
	* configure: Likewise.

	* testsuite/tr1/8_c_compatibility/cctype/functions.cc: Cosmetic tweak.

2006-02-02  Paolo Carlini  <pcarlini@suse.de>

	* include/tr1/cfloat: New.
	* include/tr1/climits: Likewise.		
	* include/tr1/cstdarg: Likewise.
	* include/tr1/ctype.h: Likewise.
	* include/tr1/fenv.h: Likewise.
	* include/tr1/float.h: Likewise.
	* include/tr1/inttypes.h: Likewise.
	* include/tr1/limits.h: Likewise.
	* include/tr1/stdint.h: Likewise.
	* include/tr1/stdarg.h: Likewise.
	* include/Makefile.am: Add.
	* include/Makefile.in: Regenerate.
	* docs/html/ext/tr1.html: Update.
	* testsuite/tr1/headers.cc: New.

	* include/tr1/cctype: Include <cctype> instead.

2006-01-31  Paolo Carlini  <pcarlini@suse.de>

	PR libstdc++/21554
	* include/tr1/array (array<>::_M_instance): Maximally align.
	* testsuite/ext/array_allocator/2.cc: Do not xfail for powerpc.

2006-01-31  Ed Smith-Rowland  <3dw4rd@verizon.net>

	* docs/html/faq/index.html ([1.0]): Replace references to CVS
	with appropriate references to SVN.
	([1.3]): Likewise.
	([1.4]): Likewise.
	([2.3]): Likewise.
	* docs/html/faq/index.txt: Regenerated.

2006-01-30  Gabriel Dos Reis  <gdr@integrable-solutions.net>

	* include/bits/valarray_array.h (__valarray_default_construct):
	Replace use __is_fundamental with __is_pod.
	(__valarray_fill_construct): Likewise.
	(__valarray_copy_construct): Likewise.
	(__valarray_destroy_elements): Likewise.
	(__valarray_copy): Likewise.

2006-01-30  Paolo Carlini  <pcarlini@suse.de>

	* acinclude.m4 ([GLIBCXX_CHECK_C99_TR1]): Do the <inttypes.h>
	checks only if the <stdint.h> checks are successful.
	* configure: Regenerate.

2006-01-30  Paolo Carlini  <pcarlini@suse.de>

	* include/tr1/cinttypes: New.
	* include/Makefile.am: Add.
	* testsuite/tr1/8_c_compatibility/cinttypes/functions: New.	
	* testsuite/tr1/8_c_compatibility/cinttypes/types: Likewise.
	* acinclude.m4 ([GLIBCXX_CHECK_C99_TR1]): Add <inttypes.h> checks.
	* docs/html/ext/tr1.html: Update.
	* include/Makefile.in: Regenerate.
	* config.h.in: Likewise.
	* configure: Likewise.

	* testsuite/tr1/8_c_compatibility/cfenv/functions.cc: Cosmetic tweak.
	* testsuite/tr1/8_c_compatibility/cfenv/types.cc: Likewise.

	* testsuite/tr1/8_c_compatibility/cstdint/types.cc: Fix, check in
	std::tr1.

2006-01-29  Paolo Carlini  <pcarlini@suse.de>

	* include/tr1/cstdint: New.
	* include/Makefile.am: Add.
	* testsuite/tr1/8_c_compatibility/cstdint/types: New.
	* acinclude.m4 ([GLIBCXX_CHECK_C99_TR1]): Add <stdint.h> checks.
	* docs/html/ext/tr1.html: Update.
	* include/Makefile.in: Regenerate.
	* config.h.in: Likewise.
	* configure: Likewise.

	* testsuite/tr1/8_c_compatibility/cfenv/types.cc: Cosmetic tweak.

2006-01-29  Paolo Carlini  <pcarlini@suse.de>

	PR libstdc++/26006
	* acinclude.m4 ([GLIBCXX_CHECK_C99_TR1]): Tighten <ctype.h> and
	<fenv.h> checks.
	* configure: Regenerate.

2006-01-26  Paolo Carlini  <pcarlini@suse.de>

	* include/std/std_bitset.h (bitset<>::_M_copy_to_string):
	Call the internal _Unchecked_set(size_t) instead of set.

2006-01-26  Paolo Carlini  <pcarlini@suse.de>

	* docs/html/install.html ([Tools you will need beforehand]):
	Clarify that the de_DE locale is used by configure; clarify
	that missing localedata leads to skipped tests, not fails.

2006-01-26  Paolo Carlini  <pcarlini@suse.de>

	* include/tr1/cfenv: New.
	* include/Makefile.am: Add.
	* testsuite/tr1/8_c_compatibility/cfenv/functions.cc: New.
	* testsuite/tr1/8_c_compatibility/cfenv/types.cc: Likewise.
	* acinclude.m4 ([GLIBCXX_CHECK_C99_TR1]): Add <fenv.h> checks.
	* docs/html/ext/tr1.html: Update; add note.
	* include/Makefile.in: Regenerate.
	* config.h.in: Likewise.
	* configure: Likewise.	

	* testsuite/tr1/8_c_compatibility/complex/functions.cc: Tweak.
	* testsuite/tr1/8_c_compatibility/cctype/functions.cc: Likewise.

	* docs/html/faq/index.html: Fix link to tr1.html text; fix
	formatting.

2006-01-25  Paolo Carlini  <pcarlini@suse.de>

	* include/tr1/cctype: New.
	* include/Makefile.am: Add.
	* testsuite/tr1/8_c_compatibility/cctype/functions.cc: New.
	* include/Makefile.in: Regenerate.

	* acinclude.m4 ([GLIBCXX_CHECK_C99_TR1]): New, check for C99
	support to TR1, Chapter 8.
	* configure.ac: Use it.
	* include/tr1/complex: Adjust.
	* config.h.in: Regenerate.
	* configure: Likewise.

2006-01-25  Benjamin Kosnik  <bkoz@redhat.com>

	* docs/html/configopts.html: Tweak docs.

	* libsupc++/eh_personality.cc: Fix typos.

2006-01-24  Paolo Carlini  <pcarlini@suse.de>

	PR libstdc++/25649
	* include/std/std_istream.h (operator>>(short&), operator>>(int&)):
	Move out of line...
	* include/bits/istream.tcc: ... here.
	* include/std/std_ostream.h (operator<<(short), operator<<(int)):
	Move out of line...
	* include/bits/ostream.tcc: ... here.

2006-01-24  Ed Smith-Rowland  <3dw4rd@verizon.net>

	* docs/html/faq/index.html ([5.2]): Mention TR1 and point to
	paragraph [5.5], describing it.
	([5.5]): New.
	* docs/html/ext/tr1.html: New.

2006-01-20  Benjamin Kosnik  <bkoz@redhat.com>

	* acinclude.m4 (GLIBCXX_CHECK_LINKER_FEATURES): Verbose ld version
	reporting.  Disable --gc-sections for old binutils, by version.
	* configure: Regenerate.

2006-01-20  Joseph S. Myers  <joseph@codesourcery.com>

	PR libstdc++/25524
	* include/Makefile.am: Install host-specific headers in multilib
	subdirectory.
	* include/Makefile.in: Regenerate.

2006-01-19  Paolo Carlini  <pcarlini@suse.de>

	Implement list::splice (and merge) bits of N1599
	* include/bits/stl_list.h (list<>::_M_check_equal_allocators): New.
	(list<>::splice(iterator, list&), splice(iterator, list&, iterator),
	splice(iterator, list&, iterator, iterator)): Use it.
	* include/bits/list.tcc (list<>::merge(list&), merge(list&,
	_StrictWeakOrdering)): Likewise.
	* testsuite/23_containers/list/operators/5.cc: New.

2006-01-19  H.J. Lu  <hongjiu.lu@intel.com>

	PR libstdc++/25797
	* acinclude.m4 (GLIBCXX_CHECK_LINKER_FEATURES): Remove -Werror
	from CFLAGS.  Check if linker really supports --gc-sections.
	* configure: Regenerated.

2006-01-18  Paul Brook  <paul@codesourcery.com>

	* libsupc++/eh_personality.cc (PERSONALITY_FUNCTION): Use std::abort.

2006-01-18  Paolo Carlini  <pcarlini@suse.de>

	* include/bits/allocator.h: Include <bits/cpp_type_traits.h>.

2006-01-18  Perry Smith  <pedz@easesoftware.net>

	PR libstdc++/25823
	PR libstdc++/25824
	* libsupc++/eh_alloc.cc: Fix return type of memset declaration.
	* libsupc++/eh_globals.cc: If !_GLIBCXX_HOSTED declare malloc and free.

2006-01-18  Paolo Carlini  <pcarlini@suse.de>

	* include/ext/pb_assoc/detail/value_type_adapter/
	value_type_adapter.hpp: Include <tr1/type_traits>.
	* include/ext/pb_assoc/detail/value_type_adapter/
	it_value_type_traits.hpp (it_value_type_traits_<>::value_type_holder):
	Use tr1::aligned_storage and tr1::alignment_of.
	(it_value_type_traits_<>::buf_t): Remove.
	(it_value_type_traits_<>::make_valid, recast): Adjust.

2006-01-16  Benjamin Kosnik  <bkoz@redhat.com>

	PR libstdc++/25797
	* acinclude.m4 (GLIBCXX_CHECK_LINKER_FEATURES): Add -Werror to
	CFLAGS for --gc-sections test.  Correct compile test.
	* configure: Regenerated.
	
2006-01-15  Paolo Carlini  <pcarlini@suse.de>
	    Gabriel Dos Reis  <gdr@integrable-solutions.net>

	PR libstdc++/25626
	* include/std/std_valarray.h (valarray(const slice_array<>&),
	valarray(const gslice_array<>&), valarray(const mask_array<>&),
	valarray(const indirect_array<>&), valarray(const _Expr<>&)):
	Forward to __valarray_copy_construct, not __valarray_copy.
	* include/bits/valarray_array.h
	(__valarray_copy_construct(_Array<>, _Array<>, _Array<>, size_t),
	__valarray_copy_construct(_Array<>, size_t, size_t, _Array<>)):
	New.

2006-01-15  Paolo Carlini  <pcarlini@suse.de>

	* testsuite/tr1/8_c_compatibility/complex/overloads_int.cc:
	Fix norm test, use casts everywhere.

2006-01-14  Paolo Carlini  <pcarlini@suse.de>

	* testsuite/testsuite_tr1.h: Add missing include; use std::__are_same.

2006-01-14  Paolo Carlini  <pcarlini@suse.de>

	* testsuite/tr1/8_c_compatibility/complex/overloads_int.cc:
	Fix wrong test (don't pick by mistake the (const complex<>&, int)
	overload); add some.

2006-01-13  Paolo Carlini  <pcarlini@suse.de>
	    Howard Hinnant  <hhinnant@apple.com>

	* include/tr1/complex (arg, conj, imag, norm, polar, pow, real):
	Add, implementing TR1, 8.1.9.
	(__promote_2): New.
	* include/tr1/common.h: New, provides __promote, __promote_2.
	* include/Makefile.am: Add.
	* include/Makefile.in: Regenerate.
	* testsuite/testsuite_tr1.h (check_ret_type): New.
	* testsuite/tr1/8_c_compatibility/complex/overloads_int.cc: New.
	* testsuite/tr1/8_c_compatibility/complex/overloads_float.cc: New.

2006-01-12  Benjamin Kosnik  <bkoz@redhat.com>

	* acinclude.m4(GLIBCXX_CHECK_LINKER_FEATURES): Enable
	--gc-sections in more cases.	
	* configure: Regenerate.
	* scripts/testsuite_flags.in: Remove SECTION_LDFLAGS.
	* scripts/testsuite_flags.in (cxxldflags): New.
	* testsuite/lib/libstdc++.exp (v3_target_compile): Add cxxldflags.
	(libstdc++_init ): Same.
		
2006-01-12  Jan Beulich  <jbeulich@novell.com>

	* crossconfig.m4: Add AC_DEFINE-s for HAVE_HYPOT, HAVE_ISINF, and
	HAVE_ISNAN for *-*-netware*.
	* configure: Refresh.

2006-01-11  Benjamin Kosnik  <bkoz@redhat.com>

	* acinclude.m4(GLIBCXX_CHECK_LINKER_FEATURES): Use -Wl,-z,relro if
	possible.  
	* configure: Regenerate.

2006-01-10  Paolo Carlini  <pcarlini@suse.de>

	* include/tr1/complex: New file, hosts the additions to header
	<complex> described in TR1, Chapter 8 [tr.c99].
	* include/Makefile.am: Add.
	* include/Makefile.in: Regenerate.
	* testsuite/tr1/8_c_compatibility/complex/functions.cc: New.

2006-01-09  Paolo Carlini  <pcarlini@suse.de>

	PR libstdc++/25658
	* testsuite/23_containers/deque/cons/assign/1.cc: Divide
	sizes by 10.

2006-01-08  Paolo Carlini  <pcarlini@suse.de>

	PR libstdc++/22102 (insert as close to hint as possible)
	* include/bits/stl_tree.h (_Rb_tree<>::_M_insert_lower,
	_M_insert_equal_lower): New.
	(_M_insert_equal(iterator, const _Val&),
	_M_insert_equal(const_iterator, const _Val&)): Use the above.
	* docs/html/ext/howto.html: Add an entry for DR 233.
	* testsuite/23_containers/multiset/modifiers/insert/22102.cc: New.
	* testsuite/23_containers/multimap/modifiers/insert/22102.cc: New.

	* testsuite/23_containers/set/insert/: Move...
	* testsuite/23_containers/set/modifiers/insert/: ...here.
	* testsuite/23_containers/map/insert/: Move...
	* testsuite/23_containers/map/modifiers/insert/: ...here.
	* testsuite/23_containers/multiset/insert/: Move...
	* testsuite/23_containers/multiset/modifiers/insert/: ...here.

2006-01-06  Paolo Carlini  <pcarlini@suse.de>

	* include/bits/stl_tree.h (_Rb_tree<>::insert_unique): Rename
	to _M_insert_unique.
	(_Rb_tree<>::insert_equal): Rename to _M_insert_equal.
	* include/bits/stl_map.h (class map<>): Update callers.
	* include/bits/stl_set.h (class set<>): Likewise.
	* include/bits/stl_multimap.h (class multimap<>): Likewise.
	* include/bits/stl_multiset.h (class multiset<>): Likewise.

2006-01-06  Paolo Carlini  <pcarlini@suse.de>

	* include/bits/stl_bvector.h (vector<bool>::erase(iterator,
	iterator)): Just use _M_erase_at_end.

2006-01-06  Paolo Carlini  <pcarlini@suse.de>

	* include/bits/stl_bvector.h (class vector<bool>): Move all the
	helpers under protected access mode, consistently with the primary
	vector template.
	(vector<bool>::_M_erase_at_end): Add.
	(erase(iterator, iterator), clear, resize, _M_fill_assign,
	_M_assign_aux): Use it.
	* testsuite/23_containers/vector/bool/modifiers/erase/1.cc: New.

2006-01-06  Paolo Carlini  <pcarlini@suse.de>

	Implement Option 3 of DR 431 for vector<bool>.
	* include/bits/stl_bvector.h (class _Bvector_base): Change to
	a struct, consistently with the primary vector template.
	(class vector<bool>): Adjust to protected inheritance, tidy
	typedefs.
	(_Bvector_base<>::_M_get_Bit_allocator): Add.
	(vector<bool>::vector(const vector&)): Use it.
	(_Bvector_base<>::get_allocator): Tidy.
	(vector<bool>::swap): Use __alloc_swap.
	* testsuite/23_containers/vector/bool/modifiers/swap/1.cc: New.
	* testsuite/23_containers/vector/bool/modifiers/swap/2.cc: New.

2006-01-05  Paolo Carlini  <pcarlini@suse.de>
	
	* testsuite/testsuite_hooks.h (test_tm(unsigned)): Change to
	take all the tm members.
	* testsuite/testsuite_hooks.cc (test_tm): Adjust.
	* testsuite/22_locale/time_put/put/wchar_t/10.cc: Update.
	* testsuite/22_locale/time_put/put/wchar_t/1.cc: Likewise.
	* testsuite/22_locale/time_put/put/wchar_t/2.cc: Likewise.
	* testsuite/22_locale/time_put/put/wchar_t/3.cc: Likewise.
	* testsuite/22_locale/time_put/put/wchar_t/4.cc: Likewise.
	* testsuite/22_locale/time_put/put/wchar_t/5.cc: Likewise.
	* testsuite/22_locale/time_put/put/wchar_t/6.cc: Likewise.
	* testsuite/22_locale/time_put/put/wchar_t/7.cc: Likewise.
	* testsuite/22_locale/time_put/put/wchar_t/8.cc: Likewise.
	* testsuite/22_locale/time_put/put/wchar_t/9.cc: Likewise.
	* testsuite/22_locale/time_put/put/wchar_t/17038.cc: Likewise.
	* testsuite/22_locale/time_put/put/char/10.cc: Likewise.
	* testsuite/22_locale/time_put/put/char/1.cc: Likewise.
	* testsuite/22_locale/time_put/put/char/2.cc: Likewise.
	* testsuite/22_locale/time_put/put/char/3.cc: Likewise.
	* testsuite/22_locale/time_put/put/char/4.cc: Likewise.
	* testsuite/22_locale/time_put/put/char/5.cc: Likewise.
	* testsuite/22_locale/time_put/put/char/6.cc: Likewise.
	* testsuite/22_locale/time_put/put/char/7.cc: Likewise.
	* testsuite/22_locale/time_put/put/char/8.cc: Likewise.
	* testsuite/22_locale/time_put/put/char/9.cc: Likewise.
	* testsuite/22_locale/time_put/put/char/17038.cc: Likewise.
	* testsuite/22_locale/time_get/get_year/wchar_t/1.cc: Likewise.
	* testsuite/22_locale/time_get/get_year/wchar_t/3.cc: Likewise.
	* testsuite/22_locale/time_get/get_year/char/1.cc: Likewise.
	* testsuite/22_locale/time_get/get_year/char/3.cc: Likewise.
	* testsuite/22_locale/time_get/get_monthname/wchar_t/1.cc: Likewise.
	* testsuite/22_locale/time_get/get_monthname/wchar_t/2.cc: Likewise.
	* testsuite/22_locale/time_get/get_monthname/char/1.cc: Likewise.
	* testsuite/22_locale/time_get/get_monthname/char/2.cc: Likewise.
	* testsuite/22_locale/time_get/get_weekday/wchar_t/1.cc: Likewise.
	* testsuite/22_locale/time_get/get_weekday/wchar_t/2.cc: Likewise.
	* testsuite/22_locale/time_get/get_weekday/wchar_t/3.cc: Likewise.
	* testsuite/22_locale/time_get/get_weekday/char/1.cc: Likewise.
	* testsuite/22_locale/time_get/get_weekday/char/2.cc: Likewise.
	* testsuite/22_locale/time_get/get_weekday/char/3.cc: Likewise.
	* testsuite/22_locale/time_get/get_date/wchar_t/12750.cc: Likewise.
	* testsuite/22_locale/time_get/get_date/wchar_t/12750.cc: Likewise.
	* testsuite/22_locale/time_get/get_date/wchar_t/1.cc: Likewise.
	* testsuite/22_locale/time_get/get_date/wchar_t/2.cc: Likewise.
	* testsuite/22_locale/time_get/get_date/wchar_t/3.cc: Likewise.
	* testsuite/22_locale/time_get/get_date/char/12750.cc: Likewise.
	* testsuite/22_locale/time_get/get_date/char/12750.cc: Likewise.
	* testsuite/22_locale/time_get/get_date/char/1.cc: Likewise.
	* testsuite/22_locale/time_get/get_date/char/2.cc: Likewise.
	* testsuite/22_locale/time_get/get_date/char/3.cc: Likewise.
	* testsuite/22_locale/time_get/get_time/wchar_t/1.cc: Likewise.
	* testsuite/22_locale/time_get/get_time/wchar_t/2.cc: Likewise.
	* testsuite/22_locale/time_get/get_time/wchar_t/3.cc: Likewise.
	* testsuite/22_locale/time_get/get_time/wchar_t/4.cc: Likewise.
	* testsuite/22_locale/time_get/get_time/char/1.cc: Likewise.
	* testsuite/22_locale/time_get/get_time/char/2.cc: Likewise.
	* testsuite/22_locale/time_get/get_time/char/3.cc: Likewise.
	* testsuite/22_locale/time_get/get_time/char/4.cc: Likewise.

2006-01-05  Paolo Carlini  <pcarlini@suse.de>
	
	* testsuite/testsuite_hooks.h (test_tm(unsigned)): New.
	* testsuite/testsuite_hooks.cc (test_tm(unsigned)): Define.
	* testsuite/22_locale/time_put/put/wchar_t/10.cc: Use it.
	* testsuite/22_locale/time_put/put/wchar_t/1.cc: Likewise.
	* testsuite/22_locale/time_put/put/wchar_t/2.cc: Likewise.
	* testsuite/22_locale/time_put/put/wchar_t/3.cc: Likewise.
	* testsuite/22_locale/time_put/put/wchar_t/4.cc: Likewise.
	* testsuite/22_locale/time_put/put/wchar_t/5.cc: Likewise.
	* testsuite/22_locale/time_put/put/wchar_t/6.cc: Likewise.
	* testsuite/22_locale/time_put/put/wchar_t/7.cc: Likewise.
	* testsuite/22_locale/time_put/put/wchar_t/8.cc: Likewise.
	* testsuite/22_locale/time_put/put/wchar_t/9.cc: Likewise.
	* testsuite/22_locale/time_put/put/wchar_t/17038.cc: Likewise.
	* testsuite/22_locale/time_put/put/char/10.cc: Likewise.
	* testsuite/22_locale/time_put/put/char/1.cc: Likewise.
	* testsuite/22_locale/time_put/put/char/2.cc: Likewise.
	* testsuite/22_locale/time_put/put/char/3.cc: Likewise.
	* testsuite/22_locale/time_put/put/char/4.cc: Likewise.
	* testsuite/22_locale/time_put/put/char/5.cc: Likewise.
	* testsuite/22_locale/time_put/put/char/6.cc: Likewise.
	* testsuite/22_locale/time_put/put/char/7.cc: Likewise.
	* testsuite/22_locale/time_put/put/char/8.cc: Likewise.
	* testsuite/22_locale/time_put/put/char/9.cc: Likewise.
	* testsuite/22_locale/time_put/put/char/17038.cc: Likewise.
	* testsuite/22_locale/time_get/get_year/wchar_t/1.cc: Likewise.
	* testsuite/22_locale/time_get/get_year/wchar_t/3.cc: Likewise.
	* testsuite/22_locale/time_get/get_year/char/1.cc: Likewise.
	* testsuite/22_locale/time_get/get_year/char/3.cc: Likewise.
	* testsuite/22_locale/time_get/get_monthname/wchar_t/1.cc: Likewise.
	* testsuite/22_locale/time_get/get_monthname/wchar_t/2.cc: Likewise.
	* testsuite/22_locale/time_get/get_monthname/char/1.cc: Likewise.
	* testsuite/22_locale/time_get/get_monthname/char/2.cc: Likewise.
	* testsuite/22_locale/time_get/get_weekday/wchar_t/1.cc: Likewise.
	* testsuite/22_locale/time_get/get_weekday/wchar_t/2.cc: Likewise.
	* testsuite/22_locale/time_get/get_weekday/wchar_t/3.cc: Likewise.
	* testsuite/22_locale/time_get/get_weekday/char/1.cc: Likewise.
	* testsuite/22_locale/time_get/get_weekday/char/2.cc: Likewise.
	* testsuite/22_locale/time_get/get_weekday/char/3.cc: Likewise.
	* testsuite/22_locale/time_get/get_date/wchar_t/12750.cc: Likewise.
	* testsuite/22_locale/time_get/get_date/wchar_t/12750.cc: Likewise.
	* testsuite/22_locale/time_get/get_date/wchar_t/1.cc: Likewise.
	* testsuite/22_locale/time_get/get_date/wchar_t/2.cc: Likewise.
	* testsuite/22_locale/time_get/get_date/wchar_t/3.cc: Likewise.
	* testsuite/22_locale/time_get/get_date/char/12750.cc: Likewise.
	* testsuite/22_locale/time_get/get_date/char/12750.cc: Likewise.
	* testsuite/22_locale/time_get/get_date/char/1.cc: Likewise.
	* testsuite/22_locale/time_get/get_date/char/2.cc: Likewise.
	* testsuite/22_locale/time_get/get_date/char/3.cc: Likewise.
	* testsuite/22_locale/time_get/get_time/wchar_t/1.cc: Likewise.
	* testsuite/22_locale/time_get/get_time/wchar_t/2.cc: Likewise.
	* testsuite/22_locale/time_get/get_time/wchar_t/3.cc: Likewise.
	* testsuite/22_locale/time_get/get_time/wchar_t/4.cc: Likewise.
	* testsuite/22_locale/time_get/get_time/char/1.cc: Likewise.
	* testsuite/22_locale/time_get/get_time/char/2.cc: Likewise.
	* testsuite/22_locale/time_get/get_time/char/3.cc: Likewise.
	* testsuite/22_locale/time_get/get_time/char/4.cc: Likewise.

2006-01-04  Paolo Carlini  <pcarlini@suse.de>

	* include/ext/sso_string_base.h (__sso_string_base<>::_M_dataplus):
	Use _CharT_alloc_type as base class.
	(_M_get_allocator, _M_swap, _M_create, _M_destroy): Adjust.
	* include/ext/vstring.h (get_allocator): Tidy.

2006-01-04  Paolo Carlini  <pcarlini@suse.de>

	Implement Option 3 of DR 431 for all the containers.
	* include/bits/allocator.h (struct __alloc_swap): Add, swaps
	allocators, optimized to nothing in case they are empty.
	* include/bits/stl_deque.h (deque<>::swap): Use it.
	* include/bits/stl_list.h (list<>::swap): Likewise.
	* include/bits/stl_tree.h (_Rb_tree<>::swap): Likewise.
	* include/bits/stl_vector.h (vector<>::swap): Likewise.
	* include/tr1/hashtable (hashtable<>::swap): Likewise.
	* include/ext/rc_string_base.h (__rc_string_base<>::_M_swap):
	Likewise.
	* include/ext/sso_string_base.h (__sso_string_base<>::_M_swap):
	Likewise.
	* include/ext/vstring_util.h (__vstring_utility<>::_Alloc_hider):
	Clean-up (now vstring uses the generic __alloc_swap facility).
	* include/tr1/unordered_map: Adjust includes.
	* include/tr1/unordered_set: Likewise.
	* docs/html/ext/howto.html: Add an entry for DR 431.
	* testsuite/23_containers/deque/modifiers/swap.cc: Move to...
	* testsuite/23_containers/deque/modifiers/swap/1.cc: ... here.		
	* testsuite/23_containers/deque/modifiers/swap/2.cc: New.
	* testsuite/23_containers/deque/modifiers/swap/3.cc: New.
	* testsuite/23_containers/list/modifiers/swap.cc: Move to...
	* testsuite/23_containers/list/modifiers/swap/1.cc: ... here.		
	* testsuite/23_containers/list/modifiers/swap/2.cc: New.
	* testsuite/23_containers/list/modifiers/swap/3.cc: New.
	* testsuite/23_containers/vector/modifiers/swap.cc: Move to...
	* testsuite/23_containers/vector/modifiers/swap/1.cc: ... here.		
	* testsuite/23_containers/vector/modifiers/swap/2.cc: New.
	* testsuite/23_containers/vector/modifiers/swap/3.cc: New.
	* testsuite/23_containers/set/modifiers/swap.cc: Move to...
	* testsuite/23_containers/set/modifiers/swap/1.cc: ... here.		
	* testsuite/23_containers/set/modifiers/swap/2.cc: New.
	* testsuite/23_containers/set/modifiers/swap/3.cc: New.
	* testsuite/23_containers/map/modifiers/swap.cc: Move to...
	* testsuite/23_containers/map/modifiers/swap/1.cc: ... here.		
	* testsuite/23_containers/map/modifiers/swap/2.cc: New.
	* testsuite/23_containers/map/modifiers/swap/3.cc: New.
	* testsuite/23_containers/multiset/modifiers/swap.cc: Move to...
	* testsuite/23_containers/multiset/modifiers/swap/1.cc: ... here.		
	* testsuite/23_containers/multiset/modifiers/swap/2.cc: New.
	* testsuite/23_containers/multiset/modifiers/swap/3.cc: New.
	* testsuite/23_containers/multimap/modifiers/swap.cc: Move to...
	* testsuite/23_containers/multimap/modifiers/swap/1.cc: ... here.		
	* testsuite/23_containers/multimap/modifiers/swap/2.cc: New.
	* testsuite/23_containers/multimap/modifiers/swap/3.cc: New.
	* testsuite/tr1/6_containers/unordered/swap/unordered_set/1.cc: New.	
	* testsuite/tr1/6_containers/unordered/swap/unordered_set/2.cc: New.
	* testsuite/tr1/6_containers/unordered/swap/unordered_map/1.cc: New.	
	* testsuite/tr1/6_containers/unordered/swap/unordered_map/2.cc: New.
	* testsuite/tr1/6_containers/unordered/swap/unordered_multiset/1.cc: New.	
	* testsuite/tr1/6_containers/unordered/swap/unordered_multiset/2.cc: New.
	* testsuite/tr1/6_containers/unordered/swap/unordered_multimap/1.cc: New.	
	* testsuite/tr1/6_containers/unordered/swap/unordered_multimap/2.cc: New.

2006-01-03  Paolo Carlini  <pcarlini@suse.de>

	* include/bits/stl_list.h (_List_base<>::_M_get_Node_allocator): Add.
	(_M_get_Tp_allocator, get_allocator): Tidy.
	(list<>::list(const list&), insert(iterator, size_type, const
	value_type&), insert(iterator, _InputIterator, _InputIterator)):
	Use _M_get_Node_allocator.
	* include/bits/stl_tree.h (_Rb_tree<>::_M_get_Node_allocator()): Add.
	(_Rb_tree(const _Rb_tree<>&): Use it.
	* include/bits/stl_deque.h (_Deque_base<>::_M_get_map_allocator,
	get_allocator): Tidy.
	* include/bits/stl_vector.h (_Vector_base<>::get_allocator): Tidy.
	* testsuite/23_containers/map/operators/1_neg.cc: Adjust dg-error
	line numbers.
	* testsuite/23_containers/set/operators/1_neg.cc: Likewise.
	
	* testsuite/testsuite_allocator.h (uneq_allocator<>::swap): Fix.

	* testsuite/testsuite_allocator.h (class uneq_allocator): A simple
	non-empty testing allocator which can be endowed of a "personality"
	at construction time.

2006-01-03  Paolo Carlini  <pcarlini@suse.de>

	* testsuite/27_io/basic_stringstream/str/char/1.cc: Initialize vars.
	* testsuite/27_io/basic_stringstream/str/wchar_t/1.cc: Likewise.
	* testsuite/27_io/basic_istringstream/str/char/1.cc: Likewise, tidy.
	* testsuite/27_io/basic_istringstream/str/wchar_t/1.cc: Likewise.

2006-01-02  Mark Mitchell  <mark@codesourcery.com>

	* src/Makefile.am (LTLDFLAGS): New variable. 
	(CXXLINK): Use LTLDFLAGS.
	* src/Makefile.in: Regenerated.
	* libsupc++/Makefile.am (LTLDFLAGS): New variable. 
	(CXXLINK): Use LTLDFLAGS.
	* libsupc++/Makefile.in: Regenerated.

2006-01-02  Paolo Carlini  <pcarlini@suse.de>

	PR libstdc++/24645
	* include/std/std_istream.h (basic_istream<>::_M_extract): New.
	(operator>>(bool&), operator>>(short&), operator>>(unsigned short&),
	operator>>(int&), operator>>(unsigned int&), operator>>(long&),
	operator>>(unsigned long&), operator>>(long long&), operator>>
	(unsigned long long&), operator>>(float&), operator>>(double&),
	operator>>(long double&), operator>>(void*&)): Use it.
	* include/bits/istream.tcc (basic_istream<>::_M_extract): Define.
	* include/std/std_ostream.h (basic_ostream<>::_M_insert): New.
	(operator<<(long), operator<<(unsigned long), operator<<(bool),
	operator<<(short), operator<<(unsigned short), operator<<(int),
	operator<<(unsigned int), operator<<(long long), operator<<
	(unsigned long long), operator<<(double), operator<<(float),
	operator<<(long double), operator<<(const void*): Use it.
	* include/bits/ostream.tcc (basic_ostream<>::_M_insert): Define.
	* src/istream-inst.cc: Add _M_extract instantiations.
	* src/ostream-inst.cc: Add _M_insert instantiations.
	* config/abi/pre/gnu.ver: Export the new symbols @GLIBCXX_3.4.7;
	detail existing @GLIBCXX_3.4 exports of basic_ostream, num_put,
	money_put, etc., symbols to avoid exporting _M_insert symbols
	@GLIBCXX_3.4.
