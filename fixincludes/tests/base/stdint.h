/*  DO NOT EDIT THIS FILE.

    It has been auto-edited by fixincludes from:

	"fixinc/tests/inc/stdint.h"

    This had to be done to correct non-standard usages in the
    original, manufacturer supplied header file.  */



#if defined( AIX_STDINT_1_CHECK )
#define UINT8_MAX	(255U)
#define UINT16_MAX	(65535U)
#endif  /* AIX_STDINT_1_CHECK */


#if defined( AIX_STDINT_2_CHECK )
#define INTPTR_MIN	INT64_MIN
#define INTPTR_MAX	INT64_MAX
#define UINTPTR_MAX	UINT64_MAX
#else
#define INTPTR_MIN	INT32_MIN
#define INTPTR_MAX	INT32_MAX
#define UINTPTR_MAX	UINT32_MAX
#endif  /* AIX_STDINT_2_CHECK */


#if defined( AIX_STDINT_3_CHECK )
#define PTRDIFF_MIN	INT64_MIN
#define PTRDIFF_MAX	INT64_MAX
#else
#define PTRDIFF_MIN     INT32_MIN
#define PTRDIFF_MAX	INT32_MAX
#endif  /* AIX_STDINT_3_CHECK */


#if defined( AIX_STDINT_4_CHECK )
#define SIZE_MAX	UINT64_MAX
#else
#define SIZE_MAX        UINT32_MAX
#endif  /* AIX_STDINT_4_CHECK */


#if defined( AIX_STDINT_5_CHECK )
#define UINT8_C(c)	__CONCAT__(c,U)
#define UINT16_C(c)	__CONCAT__(c,U)
#endif  /* AIX_STDINT_5_CHECK */


#if defined( DARWIN_STDINT_1_CHECK )
#define UINT8_C(c) __UINT8_C(c)
#define UINT16_C(c) __UINT16_C(c)
#endif  /* DARWIN_STDINT_1_CHECK */


#if defined( DARWIN_STDINT_2_CHECK )
#if __WORDSIZE == 64
#define INTPTR_MAX 9223372036854775807L
#define INTPTR_MIN (-INTPTR_MAX-1)
#else
#define INTPTR_MAX 2147483647L
#define INTPTR_MIN (-INTPTR_MAX-1)
#endif
#endif  /* DARWIN_STDINT_2_CHECK */


#if defined( DARWIN_STDINT_3_CHECK )
#if __WORDSIZE == 64
#define UINTPTR_MAX 18446744073709551615UL
#else
#define UINTPTR_MAX 4294967295UL
#endif
#endif  /* DARWIN_STDINT_3_CHECK */


#if defined( DARWIN_STDINT_4_CHECK )
#if __WORDSIZE == 64
#define SIZE_MAX __SIZE_MAX__
#else
#define SIZE_MAX __SIZE_MAX__
#endif
#endif  /* DARWIN_STDINT_4_CHECK */


#if defined( DARWIN_STDINT_5_CHECK )
#if __WORDSIZE == 64
#define INTMAX_MIN   (-9223372036854775807L - 1)
#define INTMAX_MAX   9223372036854775807L
#define UINTMAX_MAX  18446744073709551615UL
#else
#define INTMAX_MIN   (-9223372036854775807LL - 1)
#define INTMAX_MAX   9223372036854775807LL
#define UINTMAX_MAX  18446744073709551615ULL
#endif
#endif  /* DARWIN_STDINT_5_CHECK */


#if defined( DARWIN_STDINT_6_CHECK )
#if __WORDSIZE == 64
#define PTRDIFF_MIN (-PTRDIFF_MAX - 1)
#define PTRDIFF_MAX __PTRDIFF_MAX__
#else
#define PTRDIFF_MIN (-PTRDIFF_MAX - 1)
#define PTRDIFF_MAX __PTRDIFF_MAX__
#endif
#endif  /* DARWIN_STDINT_6_CHECK */


#if defined( DARWIN_STDINT_7_CHECK )
#if __WORDSIZE == 64
#define INTMAX_C(v)  (v ## L)
#define UINTMAX_C(v) (v ## UL)
#else
#define INTMAX_C(v)  (v ## LL)
#define UINTMAX_C(v) (v ## ULL)
#endif
#endif  /* DARWIN_STDINT_7_CHECK */


#if defined( GLIBC_STDINT_CHECK )
/* This file is part of the GNU C Library.  */
# define UINT8_C(c)	c
# define UINT16_C(c)	c
#endif  /* GLIBC_STDINT_CHECK */


#if defined( HPUX_C99_INTPTR_CHECK )
#define PTRDIFF_MAX __PTRDIFF_MAX__
#define PTRDIFF_MIN (-PTRDIFF_MAX - 1)
#define INTPTR_MAX (2147483647l)
#define INTPTR_MIN (-INTPTR_MAX - 1)
#define UINTPTR_MAX (4294967295ul)
#define SIZE_MAX __SIZE_MAX__

#endif  /* HPUX_C99_INTPTR_CHECK */


#if defined( HPUX_C99_INTTYPES2_CHECK )
#define INT8_C(__c) (__c)
#define UINT8_C(c) __UINT8_C(c)
#define INT16_C(__c) (__c)
#define UINT16_C(c) __UINT16_C(c)

#endif  /* HPUX_C99_INTTYPES2_CHECK */


#if defined( HPUX_STDINT_LEAST_CHECK )
#ifdef __LP64__
#  define	UINT_LEAST64_MAX	ULONG_MAX
#else
#  define       UINT_LEAST64_MAX        ULLONG_MAX
#endif


#endif  /* HPUX_STDINT_LEAST_CHECK */


#if defined( HPUX_STDINT_FAST_CHECK )
#ifdef __LP64__
#  define	UINT_FAST64_MAX		ULONG_MAX
#else
#  define       UINT_FAST64_MAX        ULLONG_MAX
#endif


#endif  /* HPUX_STDINT_FAST_CHECK */


#if defined( IRIX_STDINT_C99_CHECK )
#if 0
#error This header file is to be used only for c99 mode compilations
#else
#endif  /* IRIX_STDINT_C99_CHECK */


#if defined( NEWLIB_STDINT_1_CHECK )
/* @todo - Add support for wint_t types. */
#define INT32_MIN (-INT32_MAX - 1)
#define INT32_MAX __INT32_MAX__
#define UINT32_MAX __UINT32_MAX__
#define INT_LEAST32_MIN (-INT_LEAST32_MAX - 1)
#define INT_LEAST32_MAX __INT_LEAST32_MAX__
#define UINT_LEAST32_MAX __UINT_LEAST32_MAX__
#define INT_FAST8_MIN (-INT_FAST8_MAX - 1)
#define INT_FAST8_MAX __INT_FAST8_MAX__
#define UINT_FAST8_MAX __UINT_FAST8_MAX__
#define SIZE_MAX __SIZE_MAX__
#define PTRDIFF_MIN (-PTRDIFF_MAX - 1)
#define PTRDIFF_MAX __PTRDIFF_MAX__
#define UINT8_C(c) __UINT8_C(c)
#define UINT16_C(c) __UINT16_C(c)
#endif  /* NEWLIB_STDINT_1_CHECK */


#if defined( NEWLIB_STDINT_2_CHECK )
/* @todo - Add support for wint_t types. */
#define INTMAX_MAX __INTMAX_MAX__
#define INTMAX_MIN (-INTMAX_MAX - 1)
#define UINTMAX_MAX __UINTMAX_MAX__
#define WCHAR_MAX __WCHAR_MAX__
#define WCHAR_MIN __WCHAR_MIN__
#define WINT_MAX __WINT_MAX__
#define WINT_MIN __WINT_MIN__

/** Macros for minimum-width integer constant expressions */
#endif  /* NEWLIB_STDINT_2_CHECK */
