2009-04-04  Richard Guenther  <rguenther@suse.de>

	* tree-ssa-operands.c (pop_stmt_changes): Remove automatic
	renaming code.

2009-04-04  Jan Hubicka  <jh@suse.cz>

	* tree-ssa-uncprop.c (associate_equivalences_with_edges): Use
	last_basic_block for size of bb->index indexed array.
	* bt-load.c (compute_defs_uses_and_gen, compute_kill,
	compute_out, link_btr_uses, build_btr_def_use_webs,
	build_btr_def_use_webs, migrate_btr_defs): Likewise.

2009-04-04  Jan Hubicka  <jh@suse.cz>

	* except.c (remove_eh_handler_and_replace): Break out from ...
	(remove_eh_handler): ... here.
	(bring_to_root): New function.
	(remove_unreachable_regions): Collect MUST_NOT_THROW, unify runtime
	handled ones, bring others to root of tree.

2009-04-04  Jan Hubicka  <jh@suse.cz>

	* tree-eh.c (tree_empty_eh_handler_p): Pattern match more curefully.
	(all_phis_safe_to_merge): New function.
	(update_info): New structure.
	(make_eh_edge_and_update_phi, update_eh_edges): New functions.
	(cleanup_empty_eh): Update SSA if possible.

2009-04-04  Richard Guenther  <rguenther@suse.de>

	* tree-ssa.c (verify_ssa): With -O0 we do not need VOPs.
	* tree-ssa-operands.c (append_vdef): Do not append VOPs at -O0.
	(append_vuse): Likewise.

2009-04-04  Jakub Jelinek  <jakub@redhat.com>

	* unwind-dw2.h (_Unwind_FrameState): Add REG_UNDEFINED enum value.
	* unwind-dw2.c (execute_cfa_program): Set how to REG_UNDEFINED
	instead of REG_UNSAVED for DW_CFA_undefined.
	(uw_update_context_1): Handle REG_UNDEFINED the same as REG_UNSAVED.
	(uw_update_context): If RA column is REG_UNDEFINED, mark it as
	outermost frame.

2009-04-04  Richard Earnshaw  <rearnsha@arm.com>

	PR target/39501
	* arm.md (movsfcc): Disable if not TARGET_HARD_FLOAT.
	* testsuite/gcc.c-torture/execute/pr39501.c: New file.
	* testsuite/gcc.c-torture/execute/pr39501.x: New file.

2009-04-04  Richard Guenther  <rguenther@suse.de>

	PR tree-optimization/8781
	PR tree-optimization/37892
	* tree-ssa-sccvn.h (vn_reference_fold_indirect): Declare.
	* tree-ssa-sccvn.c (vn_reference_fold_indirect): New function.
	(valueize_refs): Call it for *& valueizations.
	(shared_reference_ops_from_ref): Rename to ...
	(valueize_shared_reference_ops_from_ref): ... this and valueize.
	(shared_reference_ops_from_call): Rename to ...
	(valueize_shared_reference_ops_from_call): ... this and valueize.
	(vn_reference_lookup): Update.
	(visit_reference_op_call): Likewise.
	* tree-ssa-pre.c (phi_translate_1): Fold *&.
	(eliminate): Value-replace the call address in call statements.

2009-04-04  Richard Guenther  <rguenther@suse.de>

	PR tree-optimization/39636
	* tree-ssa-forwprop.c
	(forward_propagate_addr_into_variable_array_index): Check for
	GIMPLE_ASSIGN before accessing the rhs code.

2009-04-03  Jason Merrill  <jason@redhat.com>

	* stor-layout.c (set_sizetype): Set TYPE_CANONICAL.

2009-04-03  Steve Ellcey  <sje@cup.hp.com>

	* config/ia64/ia64.md (extendsfdf2, extendsfxf2, extenddfxf2,
	truncdfsf2, truncxfsf2, truncxfdf2, floatdixf2, fix_truncsfdi2,
	fix_truncdfdi2, fix_truncxfdi2, fix_truncxfdi2_alts, floatunsdisf2,
	floatunsdidf2, floatunsdixf2, fixuns_truncsfdi2, fixuns_truncdfdi2,
	fixuns_truncxfdi2, fixuns_truncxfdi2_alts, divsi3_internal,
	smuldi3_highpart, umuldi3_highpart, ctzdi2, *getf_exp_xf,
	divdi3_internal_lat, divdi3_internal_thr, mulditi3, *mulditi3_internal,
	umulditi3, *umulditi3_internal, addsf3, mulsf3, abssf2, negsf2,
	*nabssf2, sminsf3, smaxsf3, *maddsf4, *msubsf4, *nmulsf3, *nmaddsf4,
	*nmaddsf4_alts, divsf3, *sqrt_approx, sqrtsf2, sqrtsf2_internal_thr,
	adddf3, *adddf3_trunc, muldf3, *muldf3_trunc, absdf2, negdf2, *nabsdf2,
	smindf3, smaxdf3, *madddf4, *madddf4_trunc, *msubdf4, *msubdf4_trunc,
	*nmuldf3, *nmuldf3_trunc, *nmadddf4, *nmadddf4_alts, *nmadddf4_truncsf,
	*nmadddf4_truncsf_alts, divdf3, sqrtdf2, sqrtdf2_internal_thr, divxf3,
	sqrtxf2, sqrtxf2_internal_thr, *recip_approx):
	Use fr_reg_or_fp01_operand instead of fr_register_operand

	* config/ia64/div.md (extend<mode>rf2, truncrf<mode>2,
	recip_approx_rf, divsf3_internal_thr, divsf3_internal_lat,
	divdf3_internal_thr, divdf3_internal_lat divxf3_internal): Ditto.

2009-04-03  Vladimir Makarov  <vmakarov@redhat.com>

	PR rtl-optimization/39607
	PR rtl-optimization/39631
	Revert
	2009-03-30  Vladimir Makarov  <vmakarov@redhat.com>
	* reload.c (push_reload, find_dummy_reload): Use df_get_live_out
	instead of DF_LR_OUT.
	* ira-lives.c (process_bb_node_lives): Ditto.
	* ira-color.c (ira_loop_edge_freq): Use df_get_live_{out,in}
	instead of DF_LR_{OUT,IN}.
	* ira-emit.c (generate_edge_moves, add_ranges_and_copies): Ditto.
	* ira-build.c (create_bb_allocnos, create_loop_allocnos): Ditto.

2009-04-03  Steven Bosscher  <steven@gcc.gnu.org>

	* omp-low.c (pass_expand_omp): Don't claim to provide PROP_gimple_lomp.
	(execute_lower_omp): Always run but take the short way out if -fopenmp
	is not given.
	(gate_lower_omp): Remove, forcing the pass manager to always run the
	pass and always set PROP_gimple_lomp.
	(pass_lower_omp): Remove gate function.
	* matrix-reorg.c (pass_ipa_matrix_reorg): Don't claim to provide
	PROP_trees.  Instead, require it.
	* ipa-cp.c (pass_ipa_cp): Likewise.
	* ipa-inline.c (pass_early_inline): Don't claim to provide PROP_cfg.
	(pass_ipa_early_inline, pass_inline_parameters, pass_ipa_inline): Idem.
	* tree-profile.c (pass_tree_profile): Don't claim to provide PROP_cfg
	and PROP_gimple_leh.

2009-04-03  Richard Guenther  <rguenther@suse.de>

	PR middle-end/13146
	PR tree-optimization/23940
	PR tree-optimization/33237
	PR middle-end/33974
	PR middle-end/34093
	PR tree-optimization/36201
	PR tree-optimization/36230
	PR tree-optimization/38049
	PR tree-optimization/38207
	PR tree-optimization/38230
	PR tree-optimization/38301
	PR tree-optimization/38585
	PR middle-end/38895
	PR tree-optimization/38985
	PR tree-optimization/39299
	* tree-ssa-structalias.h: Remove.
	* tree-ssa-operands.h (NULL_USE_OPERAND_P): Make of type use_operand_p.
	(NULL_DEF_OPERAND_P): Make of type def_operand_p.
	(struct vuse_element_d): Remove.
	(struct vuse_vec_d): Likewise.
	(VUSE_VECT_NUM_ELEM, VUSE_VECT_ELEMENT_NC, VUSE_ELEMENT_PTR_NC,
	VUSE_ELEMENT_VAR_NC, VUSE_VECT_ELEMENT, VUSE_ELEMENT_PTR,
	SET_VUSE_VECT_ELEMENT, SET_VUSE_ELEMENT_VAR, SET_VUSE_ELEMENT_PTR,
	VUSE_ELEMENT_VAR): Likewise.
	(struct voptype_d): Likewise.
	(NUM_VOP_FREE_BUCKETS): Likewise.
	(struct ssa_operands): Remove vop_free_buckets and mpt_table fields.
	(struct stmt_operands_d): Remove.
	(VUSE_OP_PTR, VUSE_OP, SET_VUSE_OP, VUSE_NUM, VUSE_VECT,
	VDEF_RESULT_PTR, VDEF_RESULT, VDEF_OP_PTR, VDEF_OP, SET_VDEF_OP,
	VDEF_NUM, VDEF_VECT): Likewise.
	(copy_virtual_operands): Remove.
	(operand_build_cmp): Likewise.
	(create_ssa_artificial_load_stmt): Likewise.
	(enum ssa_op_iter_type): Remove ssa_op_iter_vdef.
	(struct ssa_operand_iterator_d): Remove vuses, vdefs, mayusesm
	vuse_index and mayuse_index members.  Pack and move done and iter_type
	members to the front.
	(SSA_OP_VMAYUSE): Remove.
	(SSA_OP_VIRTUAL_USES): Adjust.
	(FOR_EACH_SSA_VDEF_OPERAND): Remove.
	(unlink_stmt_vdef): Declare.
	(add_to_addressable_set): Remove.
	* tree-vrp.c (stmt_interesting_for_vrp): Adjust.
	(vrp_visit_stmt): Likewise.
	* doc/tree-ssa.texi (Alias analysis): Update.
	* doc/invoke.texi (max-aliased-vops): Remove docs.
	(avg-aliased-vops): Likewise.
	* tree-into-ssa.c (syms_to_rename): Remove.
	(need_to_update_vops_p): Likewise.
	(need_to_initialize_update_ssa_p): Rename to ...
	(update_ssa_initialized_fn): ... this.  Track function we are
	initialized for.
	(symbol_marked_for_renaming): Simplify.
	(add_new_name_mapping): Do not set need_to_update_vops_p.
	(dump_currdefs): Use SYMS_TO_RENAME.
	(rewrite_update_stmt): Always walk all uses/defs.
	(dump_update_ssa): Adjust.
	(init_update_ssa): Take function argument.  Track what we are
	initialized for.
	(delete_update_ssa): Reset SYMS_TO_RENAME and update_ssa_initialized_fn.
	(create_new_def_for): Initialize for cfun, assert we are initialized
	for cfun.
	(mark_sym_for_renaming): Simplify.
	(mark_set_for_renaming): Do not initialize update-ssa.
	(need_ssa_update_p): Simplify.  Take function argument.
	(name_mappings_registered_p): Assert we ask for the correct function.
	(name_registered_for_update_p): Likewise.
	(ssa_names_to_replace): Likewise.
	(release_ssa_name_after_update_ssa): Likewise.
	(update_ssa): Likewise.  Use SYMS_TO_RENAME.
	(dump_decl_set): Do not print a newline.
	(debug_decl_set): Do it here.
	(dump_update_ssa): And here.
	* tree-ssa-loop-im.c (move_computations): Adjust.
	(movement_possibility): Likewise.
	(determine_max_movement): Likewise.
	(gather_mem_refs_stmt): Likewise.
	* tree-dump.c (dequeue_and_dump): Do not handle SYMBOL_MEMORY_TAG
	or NAME_MEMORY_TAG.
	* tree-complex.c (update_all_vops): Remove.
	(expand_complex_move): Adjust.
	* tree-ssa-loop-niter.c (chain_of_csts_start): Use NULL_TREE.
	Simplify test for memory referencing statement.  Exclude
	non-invariant ADDR_EXPRs.
	* tree-pretty-print.c (dump_generic_node): Do not handle memory tags.
	* tree-loop-distribution.c (generate_memset_zero): Adjust.
	(rdg_flag_uses): Likewise.
	* tree-tailcall.c (suitable_for_tail_opt_p): Remove memory-tag
	related code.
	(tree_optimize_tail_calls_1): Also split the
	edge from the entry block if we have degenerate PHI nodes in
	the first basic block.
	* tree.c (init_ttree): Remove memory-tag related code.
	(tree_code_size): Likewise.
	(tree_node_structure): Likewise.
	(build7_stat): Re-write to be build6_stat.
	* tree.h (MTAG_P, TREE_MEMORY_TAG_CHECK, TMR_TAG): Remove.
	(SSA_VAR_P): Adjust.
	(struct tree_memory_tag): Remove.
	(struct tree_memory_partition_tag): Likewise.
	(union tree_node): Adjust.
	(build7): Re-write to be build6.
	* tree-pass.h (pass_reset_cc_flags): Remove.
	(TODO_update_address_taken): New flag.
	(pass_simple_dse): Remove.
	* ipa-cp.c (ipcp_update_callgraph): Update SSA form.
	* params.h (MAX_ALIASED_VOPS): Remove.
	(AVG_ALIASED_VOPS): Likewise.
	* omp-low.c (expand_omp_taskreg): Update SSA form.
	* tree-ssa-dse.c (dse_optimize_stmt): Properly query if the rhs
	aliases the lhs in a copy stmt.
	* tree-ssa-dse.c (struct address_walk_data): Remove.
	(memory_ssa_name_same): Likewise.
	(memory_address_same): Likewise.
	(get_kill_of_stmt_lhs): Likewise.
	(dse_possible_dead_store_p): Simplify, use the oracle.  Handle
	unused stores.  Look through PHI nodes into post-dominated regions.
	(dse_optimize_stmt): Simplify.  Properly remove stores.
	(tree_ssa_dse): Compute dominators.
	(execute_simple_dse): Remove.
	(pass_simple_dse): Likewise.
	* ipa-reference.c (scan_stmt_for_static_refs): Open-code
	gimple_loaded_syms and gimple_stored_syms computation.
	* toplev.c (dump_memory_report): Dump alias and pta stats.
	* tree-ssa-sccvn.c (vn_reference_compute_hash): Simplify.
	(vn_reference_eq): Likewise.
	(vuses_to_vec, copy_vuses_from_stmt, vdefs_to_vec,
	copy_vdefs_from_stmt, shared_lookup_vops, shared_vuses_from_stmt,
	valueize_vuses): Remove.
	(get_def_ref_stmt_vuses): Simplify.  Rename to ...
	(get_def_ref_stmt_vuse): ... this.
	(vn_reference_lookup_2): New function.
	(vn_reference_lookup_pieces): Use walk_non_aliased_vuses for
	walking equivalent vuses.  Simplify.
	(vn_reference_lookup): Likewise.
	(vn_reference_insert): Likewise.
	(vn_reference_insert_pieces): Likewise.
	(visit_reference_op_call): Simplify.
	(visit_reference_op_load): Likewise.
	(visit_reference_op_store): Likewise.
	(init_scc_vn): Remove shared_lookup_vuses initialization.
	(free_scc_vn): Remove shared_lookup_vuses freeing.
	(sort_vuses, sort_vuses_heap): Remove.
	(get_ref_from_reference_ops): Export.
	* tree-ssa-sccvn.h (struct vn_reference_s): Replace vuses
	vector with single vuse pointer.
	(vn_reference_lookup_pieces, vn_reference_lookup,
	vn_reference_insert, vn_reference_insert_pieces): Adjust prototypes.
	(shared_vuses_from_stmt): Remove.
	(get_ref_from_reference_ops): Declare.
	* tree-ssa-loop-manip.c (slpeel_can_duplicate_loop_p): Adjust.
	* tree-ssa-copyrename.c (copy_rename_partition_coalesce): Remove
	memory-tag related code.
	* tree-ssa-ccp.c (get_symbol_constant_value): Remove memory-tag code.
	(likely_value): Add comment, skip static-chain of call statements.
	(surely_varying_stmt_p): Adjust.
	(gimplify_and_update_call_from_tree): Likewise.
	(execute_fold_all_builtins): Do not rebuild alias info.
	(gimplify_and_update_call_from_tree): Properly update VOPs.
	* tree-ssa-loop-ivopts.c (get_ref_tag): Remove.
	(copy_ref_info): Remove memory-tag related code.
	* tree-call-cdce.c (tree_call_cdce): Rename the VOP.
	* ipa-pure-const.c (check_decl): Remove memory-tag related code.
	(check_stmt): Open-code gimple_loaded_syms and gimple_stored_syms
	computation.
	* tree-ssa-dom.c (gimple_p): Remove typedef.
	(eliminate_redundant_computations): Adjust.
	(record_equivalences_from_stmt): Likewise.
	(avail_expr_hash): Likewise.
	(avail_expr_eq): Likewise.
	* tree-ssa-propagate.c (update_call_from_tree): Properly
	update VOPs.
	(stmt_makes_single_load): Likewise.
	(stmt_makes_single_store): Likewise.
	* tree-ssa-alias.c: Rewrite completely.
	(debug_memory_partitions, dump_mem_ref_stats, debug_mem_ref_stats,
	debug_mem_sym_stats, dump_mem_sym_stats_for_var,
	debug_all_mem_sym_stats, debug_mp_info, update_mem_sym_stats_from_stmt,
	delete_mem_ref_stats, create_tag_raw, dump_points_to_info,
	dump_may_aliases_for, debug_may_aliases_for, new_type_alias):
	Remove public functions.
	(pass_reset_cc_flags): Remove.
	(pass_build_alias): Move ...
	* tree-ssa-structalias.c (pass_build_alias): ... here.
	* tree-ssa-alias.c (may_be_aliased): Move ...
	* tree-flow-inline.h (may_be_aliased): ... here.
	tree-ssa-alias.c (struct count_ptr_d, count_ptr_derefs,
	count_uses_and_derefs): Move ...
	* gimple.c: ... here.
	* gimple.h (count_uses_and_derefs): Declare.
	* tree-ssa-alias.c (dump_alias_stats, ptr_deref_may_alias_global_p,
	ptr_deref_may_alias_decl_p, ptr_derefs_may_alias_p,
	same_type_for_tbaa, nonaliasing_component_refs_p, decl_refs_may_alias_p,
	indirect_ref_may_alias_decl_p, indirect_refs_may_alias_p,
	ref_maybe_used_by_call_p, ref_maybe_used_by_stmt_p,
	call_may_clobber_ref_p, stmt_may_clobber_ref_p, maybe_skip_until,
	get_continuation_for_phi, walk_non_aliased_vuses, walk_aliased_vdefs):
	New functions.
	* tree-dfa.c (refs_may_alias_p): Move ...
	* tree-ssa-alias.c (refs_may_alias_p): ... here.  Extend.
	* tree-ssa-alias.h: New file.
	* tree-ssa-sink.c (is_hidden_global_store): Adjust.
	(statement_sink_location): Likewise.
	* opts.c (decode_options): Do not adjust max-aliased-vops or
	avg-aliased-vops values.
	* timevar.def (TV_TREE_MAY_ALIAS): Remove.
	(TV_CALL_CLOBBER): Likewise.
	(TV_FLOW_SENSITIVE): Likewise.
	(TV_FLOW_INSENSITIVE): Likewise.
	(TV_MEMORY_PARTITIONING): Likewise.
	(TV_ALIAS_STMT_WALK): New timevar.
	* tree-ssa-loop-ivcanon.c (empty_loop_p): Adjust.
	* tree-ssa-address.c (create_mem_ref_raw): Use build6.
	(get_address_description): Remove memory-tag related code.
	* tree-ssa-ifcombine.c (bb_no_side_effects_p): Adjust.
	* treestruct.def (TS_MEMORY_TAG, TS_MEMORY_PARTITION_TAG): Remove.
	* tree-eh.c (cleanup_empty_eh): Do not leave stale SSA_NAMEs
	and immediate uses in statements.  Document.
	* gimple-pretty-print.c (dump_gimple_mem_ops): Adjust.
	(dump_symbols): Remove.
	(dump_gimple_mem_ops): Do not dump loaded or stored syms.
	* alias.c (get_deref_alias_set): New function split out from ...
	(get_alias_set): ... here.
	* alias.h (get_deref_alias_set): Declare.
	* tree-vect-data-refs.c (vect_create_data_ref_ptr): Remove unused
	type parameter.  Remove restrict pointer handling.  Create a
	ref-all pointer in case type-based alias sets do not conflict.
	(vect_analyze_data_refs): Remove SMT related code.
	* tree-vect-stmts.c (vectorizable_store): Re-instantiate TBAA assert.
	(vectorizable_load): Likewise.
	* tree-data-ref.h (struct dr_alias): Remove symbol_tag field.
	(DR_SYMBOL_TAG, DR_VOPS): Remove.
	* tree-data-ref.c (dr_may_alias_p): Use the alias-oracle.
	Ignore vops and SMTs.
	(dr_analyze_alias): Likewise..
	(free_data_ref): Likewise.
	(create_data_ref): Likewise.
	(analyze_all_data_dependences): Likewise.
	(get_references_in_stmt): Adjust.
	* tree-flow-inline.h (gimple_aliases_computed_p,
	gimple_addressable_vars, gimple_call_clobbered_vars,
	gimple_call_used_vars, gimple_global_var, may_aliases, memory_partition,
	factoring_name_p, mark_call_clobbered, clear_call_clobbered,
	compare_ssa_operands_equal, symbol_mem_tag, set_symbol_mem_tag,
	gimple_mem_ref_stats): Remove.
	(gimple_vop): New function.
	(op_iter_next_use): Remove vuses and mayuses cases.
	(op_iter_next_def): Remove vdefs case.
	(op_iter_next_tree): Remove vuses, mayuses and vdefs cases.
	(clear_and_done_ssa_iter): Do not set removed fields.
	(op_iter_init): Likewise.  Skip vuse and/or vdef if requested.
	Assert we are not iterating over vuses or vdefs if not also
	iterating over uses or defs.
	(op_iter_init_use): Likewise.
	(op_iter_init_def): Likewise.
	(op_iter_next_vdef): Remove.
	(op_iter_next_mustdef): Likewise.
	(op_iter_init_vdef): Likewise.
	(compare_ssa_operands_equal): Likewise.
	(link_use_stmts_after): Handle vuse operand.
	(is_call_used): Use is_call_clobbered.
	(is_call_clobbered): Global variables are always call clobbered,
	query the call-clobbers bitmap.
	(mark_call_clobbered): Ignore global variables.
	(clear_call_clobbered): Likewise.
	* tree-ssa-coalesce.c (create_outofssa_var_map): Adjust
	virtual operands sanity check.
	* tree.def (NAME_MEMORY_TAG, SYMBOL_MEMORY_TAG, MEMORY_PARTITION_TAG):
	Remove.
	(TARGET_MEM_REF): Remove TMR_TAG operand.
	* tree-dfa.c (add_referenced_var): Initialize call-clobber state.
	Remove call-clobber related code.
	(remove_referenced_var): Likewise.  Do not clear mpt or symbol_mem_tag.
	(dump_variable): Do not dump SMTs, memory stats, may-aliases or
	partitions or escape reason.
	(get_single_def_stmt, get_single_def_stmt_from_phi,
	get_single_def_stmt_with_phi): Remove.
	(dump_referenced_vars): Tidy.
	(get_ref_base_and_extent): Allow bare decls.
	(collect_dfa_stats): Adjust.
	* graphite.c (rename_variables_in_stmt): Adjust.
	(graphite_copy_stmts_from_block): Likewise.
	(translate_clast): Likewise.
	* tree-ssa-pre.c (struct bb_bitmap_sets): Add expr_dies bitmap.
	(EXPR_DIES): New.
	(translate_vuse_through_block): Use the oracle.
	(phi_translate_1): Adjust.
	(value_dies_in_block_x): Use the oracle.  Cache the outcome
	in EXPR_DIES.
	(valid_in_sets): Check if the VUSE for
	a REFERENCE is available.
	(eliminate): Do not remove stmts during elimination,
	instead queue and remove them afterwards.
	(do_pre): Do not rebuild alias info.
	(pass_pre): Run TODO_rebuild_alias before PRE.
	* tree-ssa-live.c (remove_unused_locals): Remove memory-tag code.
	* tree-sra.c (sra_walk_function): Use gimple_references_memory_p.
	(mark_all_v_defs_stmt): Remove.
	(mark_all_v_defs_seq): Adjust.
	(sra_replace): Likewise.
	(scalarize_use): Likewise.
	(scalarize_copy): Likewise.
	(scalarize_init): Likewise.
	(scalarize_ldst): Likewise.
	(todoflags): Remove.
	(tree_sra): Do not rebuild alias info.
	(tree_sra_early): Adjust.
	(pass_sra): Run TODO_update_address_taken before SRA.
	* tree-predcom.c (set_alias_info): Remove.
	(prepare_initializers_chain): Do not call it.
	(mark_virtual_ops_for_renaming): Adjust.
	(mark_virtual_ops_for_renaming_list): Remove.
	(initialize_root_vars): Adjust.
	(initialize_root_vars_lm): Likewise.
	(prepare_initializers_chain): Likewise.
	* tree-ssa-copy.c (may_propagate_copy): Remove memory-tag related code.
	(may_propagate_copy_into_stmt): Likewise.
	(merge_alias_info): Do nothing for now.
	(propagate_tree_value_into_stmt): Adjust.
	(stmt_may_generate_copy): Likewise.
	* tree-ssa-forwprop.c (tidy_after_forward_propagate_addr): Do
	not mark symbols for renaming.
	(forward_propagate_addr_expr): Match up push/pop_stmt_changes
	with the same statement, make sure to update the new pointed-to one.
	* tree-ssa-dce.c (eliminate_unnecessary_stmts): Do not copy
	call statements, do not mark symbols for renaming.
	(mark_operand_necessary): Dump something.
	(ref_may_be_aliased): New function.
	(mark_aliased_reaching_defs_necessary_1): New helper function.
	(mark_aliased_reaching_defs_necessary): Likewise.
	(mark_all_reaching_defs_necessary_1): Likewise.
	(mark_all_reaching_defs_necessary): Likewise.
	(propagate_necessity): Do not process virtual PHIs.  For
	non-aliased loads mark all reaching definitions as necessary.
	For aliased loads and stores mark the immediate dominating
	aliased clobbers as necessary.
	(visited): New global static.
	(perform_tree_ssa_dce): Free visited bitmap after propagating
	necessity.
	(remove_dead_phis): Perform simple dead virtual PHI removal.
	(remove_dead_stmt): Properly unlink virtual operands when
	removing stores.
	(eliminate_unnecessary_stmts): Schedule PHI removal after
	stmt removal.
	* tree-ssa-ter.c (is_replaceable_p): Adjust.
	(process_replaceable): Likewise.
	(find_replaceable_in_bb): Likewise.
	* tree-ssa.c (verify_ssa_name): Verify all VOPs are
	based on the single gimple vop.
	(verify_flow_insensitive_alias_info): Remove.
	(verify_flow_sensitive_alias_info): Likewise.
	(verify_call_clobbering): Likewise.
	(verify_memory_partitions): Likewise.
	(verify_alias_info): Likewise.
	(verify_ssa): Adjust..
	(execute_update_addresses_taken): Export.  Update SSA
	manually.  Optimize only when optimizing.  Use a local bitmap.
	(pass_update_address_taken): Remove TODO_update_ssa, add
	TODO_dump_func.
	(pass_update_address_taken): Just use TODO_update_address_taken.
	(init_tree_ssa): Do not initialize addressable_vars.
	(verify_ssa): Verify new VUSE / VDEF properties.
	Verify that all stmts definitions have the stmt as SSA_NAME_DEF_STMT.
	Do not call verify_alias_info.
	(delete_tree_ssa): Clear the VUSE, VDEF operands.
	Do not free the loaded and stored syms bitmaps.  Reset the escaped
	and callused solutions.  Do not free addressable_vars.
	Remove memory-tag related code.
	(warn_uninitialized_var): Aliases are always available.
	* tree-ssa-loop-prefetch.c (gather_memory_references): Adjust.
	* lambda-code.c (can_put_in_inner_loop): Adjust.
	(can_put_after_inner_loop): Likewise.
	(perfect_nestify): Likewise.
	* tree-vect-stmts.c (vect_stmt_relevant_p): Adjust.
	(vect_gen_widened_results_half): Remove CALL_EXPR handling.
	(vectorizable_conversion): Do not mark symbols for renaming.
	* tree-inline.c (remap_gimple_stmt): Clear VUSE/VDEF.
	(expand_call_inline): Unlink the calls virtual operands before
	replacing it.
	(tree_function_versioning): Do not call update_ssa if we are not
	updating clones.  Simplify.
	* tree-ssa-phiprop.c (phivn_valid_p): Adjust.
	(propagate_with_phi): Likewise..
	* tree-outof-ssa.c (create_temp): Remove memory tag and call
	clobber code.  Assert we are not aliased or global.
	* tree-flow.h: Include tree-ssa-alias.h
	(enum escape_type): Remove.
	(struct mem_sym_stats_d): Likewise.
	(struct mem_ref_stats_d): Likewise.
	(struct gimple_df): Add vop member.  Remove global_var,
	call_clobbered_vars, call_used_vars, addressable_vars,
	aliases_compted_p and mem_ref_stats members.  Add syms_to_rename,
	escaped and callused members.
	(struct ptr_info_def): Remove all members, add points-to solution
	member pt.
	(struct var_ann_d): Remove in_vuse_list, in_vdef_list,
	call_clobbered, escape_mask, mpt and symbol_mem_tag members.
	* Makefile.in (TREE_FLOW_H): Add tree-ssa-alias.h.
	(tree-ssa-structalias.o): Remove tree-ssa-structalias.h.
	(tree-ssa-alias.o): Likewise.
	(toplev.o): Add tree-ssa-alias.h
	(GTFILES): Remove tree-ssa-structalias.h, add tree-ssa-alias.h.
	* gimple.c (gimple_set_bb): Fix off-by-one error.
	(is_gimple_reg): Do not handle memory tags.
	(gimple_copy): Also copy virtual operands.
	Delay updating the statement.  Do not reset loaded and stored syms.
	(gimple_set_stored_syms): Remove.
	(gimple_set_loaded_syms): Likewise.
	(gimple_call_copy_skip_args): Copy the virtual operands
	and mark the new statement modified.
	* tree-ssa-structalias.c (may_alias_p): Remove.
	(set_uids_in_ptset): Take the alias set to prune with as
	parameter.  Fold in the alias test of may_alias_p.
	(compute_points_to_sets): Compute whether a ptr is dereferenced
	in a local sbitmap.
	(process_constraint): Deal with &ANYTHING on the lhs, reject all
	other ADDRESSOF constraints on the lhs.
	(get_constraint_for_component_ref): Assert that we don't get
	ADDRESSOF constraints from the base of the reference.
	Properly generate UNKNOWN_OFFSET for DEREF if needed.
	(struct variable_info): Remove collapsed_to member.
	(get_varinfo_fc): Remove.
	(new_var_info): Do not set collapsed_to.
	(dump_constraint): Do not follow cycles.
	(dump_constraint_graph): Likewise.
	(build_pred_graph): Likewise.
	(build_succ_graph): Likewise.
	(rewrite_constraints): Likewise.
	(do_simple_structure_copy): Remove.
	(do_rhs_deref_structure_copy): Remove.
	(do_lhs_deref_structure_copy): Remove.
	(collapse_rest_of_var): Remove.
	(do_structure_copy): Re-implement.
	(pta_stats): New global variable.
	(dump_pta_stats): New function.
	(struct constraint_expr): Make offset signed.
	(UNKNOWN_OFFSET): Define special value.
	(dump_constraint): Dump UNKNOWN_OFFSET as UNKNOWN.
	(solution_set_expand): New helper function split out from ...
	(do_sd_constraint): ... here.
	(solution_set_add): Handle UNKNOWN_OFFSET.  Handle negative offsets.
	(do_ds_constraint): Likewise.
	(do_sd_constraint): Likewise.  Do not special-case ESCAPED = *ESCAPED
	and CALLUSED = *CALLUSED.
	(set_union_with_increment): Make inc argument signed.
	(type_safe): Remove.
	(get_constraint_for_ptr_offset): Handle unknown and negative
	constant offsets.
	(first_vi_for_offset): Handle offsets before start.  Bail
	out early for offsets beyond the variable extent.
	(first_or_preceding_vi_for_offset): New function.
	(init_base_vars): Add ESCAPED = ESCAPED + UNKNOWN_OFFSET constraint.
	Together with ESCAPED = *ESCAPED this properly computes reachability.
	(find_what_var_points_to): New function.
	(find_what_p_points_to): Implement in terms of find_what_var_points_to.
	(pt_solution_reset, pt_solution_empty_p, pt_solution_includes_global,
	pt_solution_includes_1, pt_solution_includes, pt_solutions_intersect_1,
	pt_solutions_intersect): New functions.
	(compute_call_used_vars): Remove.
	(compute_may_aliases): New main entry into PTA computation.
	* gimple.h (gimple_p): New typedef.
	(struct gimple_statement_base): Remove references_memory_p.
	(struct gimple_statement_with_memory_ops_base): Remove
	vdef_ops, vuse_ops, stores and loads members.  Add vdef and vuse
	members.
	(gimple_vuse_ops, gimple_set_vuse_ops, gimple_vdef_ops,
	gimple_set_vdef_ops, gimple_loaded_syms, gimple_stored_syms,
	gimple_set_references_memory): Remove.
	(gimple_vuse_op, gimple_vdef_op, gimple_vuse, gimple_vdef,
	gimple_vuse_ptr, gimple_vdef_ptri, gimple_set_vuse, gimple_set_vdef):
	New functions.
	* tree-cfg.c (move_block_to_fn): Fix off-by-one error.
	(verify_expr): Allow RESULT_DECL.
	(gimple_duplicate_bb): Do not copy virtual operands.
	(gimple_duplicate_sese_region): Adjust.
	(gimple_duplicate_sese_tail): Likewise.
	(mark_virtual_ops_in_region): Remove.
	(move_sese_region_to_fn): Do not call it.
	* passes.c (init_optimization_passes): Remove pass_reset_cc_flags
	and pass_simple_dse.
	(execute_function_todo): Handle TODO_update_address_taken,
	call execute_update_addresses_taken for TODO_rebuild_alias.
	(execute_todo): Adjust.
	(execute_one_pass): Init dump files early.
	* ipa-struct-reorg.c (finalize_var_creation): Do not mark vars
	call-clobbered.
	(create_general_new_stmt): Clear vops.
	* tree-ssa-reassoc.c (get_rank): Adjust.
	* tree-vect-slp.c (vect_create_mask_and_perm): Do not mark
	symbols for renaming.
	* params.def (PARAM_MAX_ALIASED_VOPS): Remove.
	(PARAM_AVG_ALIASED_VOPS): Likewise.
	* tree-ssanames.c (init_ssanames): Allocate SYMS_TO_RENAME.
	(duplicate_ssa_name_ptr_info): No need to copy the shared bitmaps.
	* tree-ssa-operands.c: Simplify for new virtual operand
	representation.
	(operand_build_cmp, copy_virtual_operands,
	create_ssa_artificial_load_stmt, add_to_addressable_set,
	gimple_add_to_addresses_taken): Remove public functions.
	(unlink_stmt_vdef): New function.

2009-04-03  Alan Modra  <amodra@bigpond.net.au>

	* config.gcc (powerpc-*-linux*): Merge variants.

2009-04-02  Chao-ying Fu  <fu@mips.com>
	    James Grosbach <james.grosbach@microchip.com>

	* config/mips/mips.c (mips_frame_info): Add acc_mask, num_acc,
	num_cop0_regs, acc_save_offset, cop0_save_offset, acc_sp_offset,
	cop0_sp_offset.
	(machine_function): Add interrupt_handler_p, use_shadow_register_set_p,
	keep_interrupts_masked_p, use_debug_exception_return_p.
	(mips_attribute_table): Add interrupt, use_shadow_register_set,
	keep_interrupts_masked, use_debug_exception_return.
	(mips_interrupt_type_p, mips_use_shadow_register_set_p,
	mips_keep_interrupts_masked_p, mips_use_debug_exception_return_p):
	New functions.
	(mips_function_ok_for_sibcall): Return false for interrupt handlers.
	(mips_print_operand): Process COP0 registers to print $0 .. $31
	correctly for GAS to process.
	(mips_interrupt_extra_call_saved_reg_p): New function.
	(mips_cfun_call_saved_reg_p): For interrupt handlers, we need to check
	extra registers.
	(mips_cfun_might_clobber_call_saved_reg_p): Likewise.
	(mips_compute_frame_info): Add supports for interrupt context that
	includes doubleword accumulators and COP0 registers.
	(mips_for_each_saved_acc): New function.
	(mips_for_each_saved_gpr_and_fpr): Change the function name from
	mips_for_each_saved_reg.
	(mips_save_reg): Save accumulators.
	(mips_kernel_reg_p): A new for_each_rtx callback.
	(mips_expand_prologue): Support interrupt handlers.
	(mips_restore_reg): Restore accumulators.
	(mips_expand_epilogue): Support interrupt handlers.
	(mips_can_use_return_insn): Return false for interrupt handlers.
	(mips_epilogue_uses): New function.
	* config/mips/mips.md (UNSPEC_ERET, UNSPEC_DERET, UNSPEC_DI,
	UNSPEC_EHB, UNSPEC_RDPGPR, UNSPEC_COP0): New UNSPEC.
	(mips_eret, mips_deret, mips_di, mips_ehb, mips_rdpgpr,
	cop0_move): New instructions.
	* config/mips/mips-protos.h (mips_epilogue_uses): Declare.
	* config/mips/mips.h (K0_REG_NUM, K1_REG_NUM, KERNEL_REG_P): New
	defines.
	(COP0_STATUS_REG_NUM, COP0_CAUSE_REG_NUM, COP0_EPC_REG_NUM):
	New defines.
	(CAUSE_IPL, SR_IPL, SR_EXL, SR_IE): New defines.
	(MIPS_PROLOGUE_TEMP_REGNUM, MIPS_EPILOGUE_TEMP_REGNUM): For
	interrupt handlers, we use K0 as the temporary register.
	(EPILOGUE_USES): Change to a function call.
	* config/mips/sde.h (MIPS_EPILOGUE_TEMP_REGNUM): For interrupt
	handlers, we use K0 as the temporary register.
	
	* doc/extend.texi (Function Attributes): Document interrupt,
	use_shadow_register_set, keep_interrupts_masked,
	use_debug_exception_return for MIPS attributes.

2009-04-03  Alan Modra  <amodra@bigpond.net.au>

	* config.gcc (powerpc64-*-gnu*): Add rs6000/default64.h to tm_file.
	Remove a number of t-files from tmake_file.
	* config/rs6000/sysv4.opt (mprototype): Name variable target_prototype.
	* config/rs6000/sysv4.h (TARGET_PROTOTYPE): Define.
	* config/rs6000/linux64.h (SUBSUBTARGET_OVERRIDE_OPTIONS): Set
	target_prototype, not TARGET_PROTOTYPE.
	(LINK_OS_GNU_SPEC): Define.
	* config/rs6000/t-linux64 (LIB2FUNCS_EXTRA): Delete tramp.S
	and darwin-ldoubdle.c.

2009-04-02  Michael Meissner  <meissner@linux.vnet.ibm.com>

	PR driver/39293
	* gcc.c (save_temps_flag): Add support for -save-temps=obj.
	(cpp_options): Ditto.
	(default_compilers): Ditto.
	(display_help): Ditto.
	(process_command): Ditto.
	(do_spec_1): Ditto.
	(set_input): Use lbasename instead of duplicate code.
	(save_temps_prefix): New static for -save-temps=obj.
	(save_temps_length): Ditto.
	
	* doc/invoke.texi (-save-temps=obj): Document new variant to
	-save-temps switch.

2009-04-02  Jeff Law  <law@redhat.com>

	* reload1.c (fixup_eh_region_notes): Remove write-only "trap_count"
	variable.

2009-04-02  H.J. Lu  <hongjiu.lu@intel.com>

	* configure.ac: Support -Bstatic/-Bdynamic for linker version > 2.
	* configure: Regenerated.

2009-04-02  Rafael Avila de Espindola  <espindola@google.com>

	* c-decl.c (merge_decls): Make sure newdecl and olddecl don't
	share the argument list.

2009-04-02  Rafael Avila de Espindola  <espindola@google.com>

	Merge

	2009-02-12  Diego Novillo  <dnovillo@google.com>

	* varpool.c (debug_varpool): New.
	* cgraph.h (debug_varpool): Declare.

2009-04-02  Jan Hubicka  <jh@suse.cz>

	* passes.c (init_optimization_passes): Remove two copies of ehcleanup
	pass.

2009-04-02  H.J. Lu  <hongjiu.lu@intel.com>

	* config/i386/i386.c (ix86_abi): Move initialization to ...
	(override_options): Here.

2009-04-02  Christian Bruel  <christian.bruel@st.com>

	* config/sh/sh.c (sh_dwarf_register_span): New function.
	(TARGET_DWARF_REGISTER_SPAN): Define.
	* config/sh/sh-protos.h (sh_dwarf_register_span): Declare.
	
2009-04-02  Ira Rosen  <irar@il.ibm.com>

	PR tree-optimization/39595
	* tree-vect-slp.c (vect_build_slp_tree): Check that the size of 
	interleaved loads group is not  greater than the SLP group size.

2009-04-02  Rafael Avila de Espindola  <espindola@google.com>

	* builtins.c (is_builtin_name): New.
	(called_as_built_in): Use is_builtin_name.
	* tree.h (is_builtin_name): New.
	* varasm.c (incorporeal_function_p): Use is_builtin_name

2009-04-02  Andrew Stubbs  <ams@codesourcery.com>

	* config/sh/linux-unwind.h: Disable when inhibit_libc is defined.

2009-04-02  Dodji Seketeli  <dodji@redhat.com>

	PR c++/26693
	* c-decl.c: (clone_underlying_type): Move this ...
	* c-common.c (set_underlying_type): ... here.
	Also, make sure the function properly sets TYPE_STUB_DECL() on
	the newly created typedef variant type.
	* c-common.h (is_typedef_decl, set_underlying_type): Declare ...
	* c-common.c (is_typedef_decl, set_underlying_type): ... new entry points.

2009-04-02  Richard Guenther  <rguenther@suse.de>

	PR tree-optimization/37221
	* tree-flow.h (degenerate_phi_result): Declare.
	* tree-ssa-dom.c (degenerate_phi_result): Export.
	* tree-scalar-evolution.c (analyze_initial_condition): If
	the initial condition is defined by a degenerate PHI node
	use the degenerate value.

2009-04-01  Eric Botcazou  <ebotcazou@adacore.com>

	PR rtl-optimization/39588
	* combine.c (merge_outer_ops): Do not set the constant when this
	is not necessary.
	(simplify_shift_const_1): Do not modify it either in this case.

2009-04-01  Steven Bosscher  <steven@gcc.gnu.org>

	* config/ia64/ia64.c (ia64_handle_option): Inform user that Itanium1
	tuning is deprecated if -mtune value is set to an Itanium1 variant.

2009-04-01  Janis Johnson  <janis187@us.ibm.com>

	PR c/29027
	* c-lex.c (interpret_float): Default (no suffix) is double.

2009-04-1  Xinliang David Li  <davidxl@google.com>

	* config/i386/i386.c (legitimate_constant_p): Recognize
	all one vector constant.

2009-04-01	Jan-Benedict Glaw <jbglaw@jbglaw-dev.homezone.telefonica.de>

	* gcc/config/vax/vax.c: Add #includes to silence warnings.
	Change #include order to silence two warnings.

2009-04-01	Jan-Benedict Glaw <jbglaw@jbglaw-dev.homezone.telefonica.de>

	* gcc/config/vax/linux.h (TARGET_DEFAULT): Add the MASK_QMATH flag bit.
	(ASM_SPEC): Pass -k to the assembler for PIC code.

2009-04-01	Jan-Benedict Glaw <jbglaw@jbglaw-dev.homezone.telefonica.de>

	* gcc/config.gcc: Add vax-*-linux* to the switch.
	* gcc/config/vax/linux.h: New file. (TARGET_VERSION,
	TARGET_OS_CPP_BUILTINS, TARGET_DEFAULT, CPP_SPEC, LINK_SPEC): Define.

2009-04-01	Jan-Benedict Glaw <jbglaw@jbglaw-dev.homezone.telefonica.de>

	* gcc/config/vax/vax.c (vax_output_int_move, adjacent_operands_p):
	Use predicate macros instead of GET_CODE() == foo.
	* gcc/config/vax/vax.md (movsi_2, movstrictqi, and<mode>3, ashrsi3,
	ashlsi3, rotrsi3, <unnamed>): Likewise.

2009-04-01	Jan-Benedict Glaw <jbglaw@jbglaw-dev.homezone.telefonica.de>

	* gcc/config/vax/builtins.md (jbbssiqi, jbbssihi, jbbssisi, jbbcciqi,
	jbbccihi, jbbccisi): Remova trailing whitespace.
	* gcc/config/vax/constraints.md: Likewise.
	* gcc/config/vax/elf.h: (ASM_PREFERRED_EH_DATA_FORMAT): Likewise.
	* gcc/config/vax/openbsd1.h (OBSD_OLD_GAS): Likewise.
	* gcc/config/vax/predicates.md: Likewise.
	* gcc/config/vax/vax.c (print_operand_address, vax_output_int_move,
	vax_expand_addsub_di_operands, adjacent_operands_p): Likewise.
	* gcc/config/vax/vax.h: Likewise.
	* gcc/config/vax/vax.md (nonlocal_goto): Likewise.

2009-04-01	Jan-Benedict Glaw <jbglaw@jbglaw-dev.homezone.telefonica.de>

	* gcc/config/vax/vax.c (vax_float_literal, vax_output_int_move)
	(indirectable_address_p, adjacent_operands_p): Add spaces around
	braces.
	* gcc/config/vax/vax-protos.h (adjacent_operands_p): Likewise.

2009-04-01	Jan-Benedict Glaw <jbglaw@jbglaw-dev.homezone.telefonica.de>

	* gcc/config/vax/vax.c (legitimate_constant_address_p,
	legitimate_constant_p, indirectable_address_p, nonindexed_address_p,
	index_term_p, reg_plus_index_p, legitimate_address_p,
	vax_mode_dependent_address_p): Update comments to match functions
	modified by the recent int->bool conversion.

2009-04-01	Jan-Benedict Glaw <jbglaw@jbglaw-dev.homezone.telefonica.de>

	* gcc/config/vax/builtins.md: Update copyright message.
	* gcc/config/vax/constraints.md: Likewise.
	* gcc/config/vax/netbsd-elf.h: Likewise.
	* gcc/config/vax/predicates.md: Likewise.
	* gcc/config/vax/vax-protos.h: Likewise.
	* gcc/config/vax/vax.c: Likewise.
	* gcc/config/vax/vax.h: Likewise.
	* gcc/config/vax/vax.md: Likewise.
	* gcc/config/vax/vax.opt: Likewise.

2009-04-01	Jan-Benedict Glaw <jbglaw@jbglaw-dev.homezone.telefonica.de>

	* gcc/config/vax/builtins.md (ffssi2, ffssi2_internal,
	sync_lock_test_and_set<mode>, sync_lock_release<mode>): Fix indention.
	* gcc/config/vax/constraints.md (B, R): Likewise.
	* gcc/config/vax/predicates.md (external_memory_operand,
	nonimmediate_addsub_di_operand): Likewise.
	* gcc/config/vax/vax.c (vax_output_int_add): Likewise.
	* gcc/config/vax/vax.md (movsi, movsi_2, mov<mode>, call_value,
	untyped_call): Likewise.

2009-04-01	Matt Thomas <matt@3am-software.com>

	* config/vax/predicates.md: New file. (symbolic_operand,
	local_symbolic_operand, external_symbolic_operand,
	external_const_operand, nonsymbolic_operand, external_memory_operand,
	indirect_memory_operand, indexed_memory_operand,
	illegal_blk_memory_operand, illegal_addsub_di_memory_operand,
	nonimmediate_addsub_di_operand, general_addsub_di_operand): New
	predicate.
	* config/vax/constraints.md: New file. (Z0, U06,  U08, U16, CN6, S08,
	S16, I, J, K, L, M, N, O, G, Q, B, R, T): New constraint.
	* config/vax/builtins.md: New file. (ffssi2, ffssi2_internal,
	sync_lock_test_and_set<mode>, jbbssiqi, jbbssihi, jbbssisi,
	sync_lock_release<mode>, jbbcciqi, jbbccihi, jbbccisi): Define.
	* config/vax/vax.opt (mqmath): Add option.
	* config/vax/vax.md (isfx): Extend with DI.
	(VAXintQH, VAXintQHSD): Define.
	(tst<mode>, cmp<mode>, *bit<mode>, movmemhi1, truncsiqi2, truncsihi2,
	mulsidi3, add<mode>3, sub<mode>, mul<mode>3, div<mode>3, and<mode>,
	and<mode>_const_int, ior<mode>3, xor<mode>3, neg<mode>2,
	one_cmpl<mode>2, ashlsi3, lshrsi3, rotlsi3): Update constraints.
	(movdi): Update constraints and use vax_output_int_move().
	(movsi, movsi_2, pushlclsymreg, pushextsymreg, movlclsymreg,
	movextsymreg, adddi3, adcdi3, subdi3, sbcdi3, pushextsym, movextsym,
	pushlclsym, movlclsym, movaddr<mode>, pushaddr<mode>,
	nonlocal_goto): New.
	(mov<mode>): Extend accepted operand types.
	(subdi3_old): Rename from subdi3, change update constraints and use
	a new implementation.
	* gcc/config/vax/vax.h (PCC_BITFIELD_TYPE_MATTERS): Add space.
	(FRAME_POINTER_CFA_OFFSET, IRA_COVER_CLASSES, CLASS_MAX_NREGS,
	MOVE_RATIO, CLEAR_RATIO): Define.
	(REG_CLASS_FROM_LETTER, CONST_OK_FOR_LETTER_P,
	CONST_DOUBLE_OK_FOR_LETTER_P, EXTRA_CONSTRAINT): Delete.
	(PRINT_OPERAND): Redefine using a function instead of inlined code.
	* gcc/config/vax/vax.c (TARGET_BUILTIN_SETJMP_FRAME_VALUE): Define.
	(split_quadword_operands): Make static and really allow variable
	splitting.
	(print_operand_address): Update for PIC generation.
	(print_operand, vax_builtin_setjmp_frame_value, vax_output_int_subtract,
	indexable_address_p, fixup_mathdi_operand,
	vax_expand_addsub_di_operands, adjacent_operands_p): New.
	(vax_float_literal, legitimate_constant_p,
	indirectable_constant_address_p, index_term_p,
	reg_plus_index_p): Return bool instead of int.
	(vax_rtx_costs): Fix cost for CONST_INT, indent and use HOST_WIDE_INT
	where needed.
	(vax_output_int_move, vax_output_int_add): Extend to allow PIC
	generation.
	(vax_output_conditional_branch): Indent.
	(legitimate_constant_address_p, indirectable_constant_address_p,
	indirectable_address_p, nonindexed_address_p, legitimate_address_p,
	vax_mode_dependent_address_p): Return bool instead of int, update for
	PIC generation.
	* config/vax/vax-protos.h (legitimate_constant_address_p,
	legitimate_constant_p, legitimate_address_p,
	vax_mode_dependent_address_p): Change declaration to bool.
	(legitimate_pic_operand_p, adjacent_operands_p, print_operand,
	vax_expand_addsub_di_operands, vax_output_int_subtract,
	vax_output_movmemsi): Declare.
	(split_quadword_operands, vax_float_literal): Delete declaration.
	* config/vax/netbsd-elf.h (CC1_SPEC, CC1PLUS_SPEC) Define.
	* config/vax/elf.h (NO_EXTERNAL_INDIRECT_ADDRESS,
	VAX_CC1_AND_CC1PLUS_SPEC, ASM_PREFERRED_EH_DATA_FORMAT,
	ASM_OUTPUT_DWARF_PCREL): Define.
	(ASM_SPEC): Change definition to allow PIC generation.

2009-04-01  Jakub Jelinek  <jakub@redhat.com>

	PR target/39226
	* config/rs6000/rs6000.md (andsi3_internal5_nomc,
	anddi3_internal2_nomc, anddi3_internal3_nomc): Removed.
	(booldi3_internal3): Use boolean_or_operator instead of
	boolean_operator.

2009-04-01  Joseph Myers  <joseph@codesourcery.com>

	PR c/39605
	* c-decl.c (grokdeclarator): Pedwarn for file-scope array
	declarator whose size is not an integer constant expression but
	folds to an integer constant, then treat it as a constant
	subsequently.

2009-04-01  Richard Guenther  <rguenther@suse.de>

	* fold-const.c (fold_plusminus_mult_expr): Do not fold
	i * 4 + 2 to (i * 2 + 1) * 2.

2009-04-01  Jakub Jelinek  <jakub@redhat.com>

	PR c/37772
	* c-parser.c (c_parser_asm_statement): Skip until close paren and
	return if c_parser_asm_string_literal returned NULL.

2009-04-01  Nick Clifton  <nickc@redhat.com>

	* config/m32c/m32c.h (LIBGCC2_UNITS_PER_WORD): Define if not
	already defined.
	* config/m32c/t-m32c (LIB2FUNCS_EXTRA): Add m32c-lib2-trapv.c.
	* config/m32c/m32c-lib2.c: Remove unused typedefs.  Rename the
	other typedefs to avoid conflicts with libgcc2.c.  Define labels
	to gain 16-bit bit-manipulation functions from libgcc2.c and then
	include it.
	* config/m32c/m32c-lib2-trapv.c: New file.  Define labels
	to gain 16-bit trapping arithmetic functions from libgcc2.c and
	then include it.

2009-04-01  Rafael Avila de Espindola  <espindola@google.com>

       * varasm.c (default_function_rodata_section): Declare DOT as const char*.

2009-04-01  Kai Tietz  <kai.tietz@onevision.com>
	    Andrey Galkin <agalkin@hypercom.com>

	PR/39492
	* config/i386/host-mingw32.c (mingw32_gt_pch_use_address):
	Make object_name unique for each process.

2009-04-01  Jakub Jelinek  <jakub@redhat.com>

	PR other/39591
	* omp-low.c (remove_exit_barrier): Don't optimize if there are any
	addressable variables in the parallel that could go out of scope while
	running queued tasks.

2009-04-01  Anatoly Sokolov  <aesok@post.ru>

	* config/avr/avr.h (avr_case_values_threshold): Remove declaration.
	(CASE_VALUES_THRESHOLD): Redefine.
	* config/avr/avr.c (avr_override_options): Remove initialization of
	avr_case_values_threshold variable.
	(avr_case_values_threshold): Remove variable. Add new function.
	* config/avr/avr-protos.h (avr_case_values_threshold): Declare.
	* config/avr/avr.opt (mno-tablejump): Remove option.
	* doc/invoke.texi (AVR Options): Remove -mno-tablejump.

2009-04-01  DJ Delorie  <dj@redhat.com>

	* varasm.c (default_function_rodata_section): Don't assume
	anything about where the first '.' in the section name is.

2009-04-01  Alan Modra  <amodra@bigpond.net.au>

	* config/rs6000/rs6000.c (rs6000_emit_stack_reset): Delete redundant
	rs6000_emit_stack_tie.

2009-03-31  Ian Lance Taylor  <iant@google.com>

	* tree-eh.c (tree_remove_unreachable_handlers): Compare
	gimple_code with GIMPLE_RESX, not RESX.

2009-03-31  Joseph Myers  <joseph@codesourcery.com>

	* c-common.c (c_get_ident): New.
	(c_common_nodes_and_builtins): Call it for type names that may be
	NULL.

2009-04-01  Ben Elliston  <bje@au.ibm.com>

	* config/rs6000/sysv4.opt (msdata): Improve option description.

2009-03-31  Steve Ellcey  <sje@cup.hp.com>

	* config/ia64/ia64.md (divsf3_internal_lat): Remove.
	(divdf3_internal_lat): Remove.
	(divxf3_internal_lat): Remove.
	(divxf3_internal_thr): Remove.
	(divxf): Use divxf3_internal.
	* config/ia64/div.md (divsf3_internal_lat): New.
	(divdf3_internal_lat): New.
	(divxf3_internal): New.

2009-03-31  Joseph Myers  <joseph@codesourcery.com>

	PR c/448
	* Makefile.in (USE_GCC_STDINT): Define.
	(stmp-int-hdrs): Install stdint.h if applicable.
	* c-common.c (CHAR16_TYPE): Define in terms of UINT_LEAST16_TYPE
	if known.
	(CHAR32_TYPE): Define in terms of UINT_LEAST32_TYPE if known.
	(SIG_ATOMIC_TYPE, INT8_TYPE, INT16_TYPE, INT32_TYPE, INT64_TYPE,
	UINT8_TYPE, UINT16_TYPE, UINT32_TYPE, UINT64_TYPE,
	INT_LEAST8_TYPE, INT_LEAST16_TYPE, INT_LEAST32_TYPE,
	INT_LEAST64_TYPE, UINT_LEAST8_TYPE, UINT_LEAST16_TYPE,
	UINT_LEAST32_TYPE, UINT_LEAST64_TYPE, INT_FAST8_TYPE,
	INT_FAST16_TYPE, INT_FAST32_TYPE, INT_FAST64_TYPE,
	UINT_FAST8_TYPE, UINT_FAST16_TYPE, UINT_FAST32_TYPE,
	UINT_FAST64_TYPE, INTPTR_TYPE, UINTPTR_TYPE): Define.
	(c_common_nodes_and_builtins): Initialize
	underlying_wchar_type_node.  Do not initialize
	signed_wchar_type_node or unsigned_wchar_type_node.  Initialize
	nodes for new types.
	(c_stddef_cpp_builtins): Define macros for new types.
	* c-common.h (CTI_SIGNED_WCHAR_TYPE, CTI_UNSIGNED_WCHAR_TYPE):
	Remove.
	(CTI_UNDERLYING_WCHAR_TYPE, CTI_SIG_ATOMIC_TYPE, CTI_INT8_TYPE,
	CTI_INT16_TYPE, CTI_INT32_TYPE, CTI_INT64_TYPE, CTI_UINT8_TYPE,
	CTI_UINT16_TYPE, CTI_UINT32_TYPE, CTI_UINT64_TYPE,
	CTI_INT_LEAST8_TYPE, CTI_INT_LEAST16_TYPE, CTI_INT_LEAST32_TYPE,
	CTI_INT_LEAST64_TYPE, CTI_UINT_LEAST8_TYPE, CTI_UINT_LEAST16_TYPE,
	CTI_UINT_LEAST32_TYPE, CTI_UINT_LEAST64_TYPE, CTI_INT_FAST8_TYPE,
	CTI_INT_FAST16_TYPE, CTI_INT_FAST32_TYPE, CTI_INT_FAST64_TYPE,
	CTI_UINT_FAST8_TYPE, CTI_UINT_FAST16_TYPE, CTI_UINT_FAST32_TYPE,
	CTI_UINT_FAST64_TYPE, CTI_INTPTR_TYPE, CTI_UINTPTR_TYPE): Define.
	(signed_wchar_type_node, unsigned_wchar_type_node): Remove.
	(underlying_wchar_type_node, sig_atomic_type_node, int8_type_node,
	int16_type_node, int32_type_node, int64_type_node,
	uint8_type_node, uint16_type_node, c_uint32_type_node,
	c_uint64_type_node, int_least8_type_node, int_least16_type_node,
	int_least32_type_node, int_least64_type_node,
	uint_least8_type_node, uint_least16_type_node,
	uint_least32_type_node, uint_least64_type_node,
	int_fast8_type_node, int_fast16_type_node, int_fast32_type_node,
	int_fast64_type_node, uint_fast8_type_node, uint_fast16_type_node,
	uint_fast32_type_node, uint_fast64_type_node, intptr_type_node,
	uintptr_type_node): Define.
	* c-cppbuiltin.c (builtin_define_constants,
	builtin_define_type_minmax): New.
	(builtin_define_stdint_macros): Define more macros.
	(c_cpp_builtins): Define more limit macros.
	(type_suffix): New.
	(builtin_define_type_max): Define in terms of
	builtin_define_type_minmax.  Remove is_long parameter.  All
	callers changed.
	* config.gcc (use_gcc_stdint): Define.
	(tm_file): Add glibc-stdint.h for targets using glibc or uClibc.
	Add newlib-stdint.h for generic targets.
	* config/glibc-stdint.h, config/newlib-stdint.h,
	ginclude/stdint-gcc.h, ginclude/stdint-wrap.h: New.
	* config/m32c/m32c.h (UINTPTR_TYPE): Define.
	* config/score/score.h (UINTPTR_TYPE): Define.
	* config/sol2.h (SIG_ATOMIC_TYPE, INT8_TYPE, INT16_TYPE,
	INT32_TYPE, INT64_TYPE, UINT8_TYPE, UINT16_TYPE, UINT32_TYPE,
	UINT64_TYPE, INT_LEAST8_TYPE, INT_LEAST16_TYPE, INT_LEAST32_TYPE,
	INT_LEAST64_TYPE, UINT_LEAST8_TYPE, UINT_LEAST16_TYPE,
	UINT_LEAST32_TYPE, UINT_LEAST64_TYPE, INT_FAST8_TYPE,
	INT_FAST16_TYPE, INT_FAST32_TYPE, INT_FAST64_TYPE,
	UINT_FAST8_TYPE, UINT_FAST16_TYPE, UINT_FAST32_TYPE,
	UINT_FAST64_TYPE, INTPTR_TYPE, UINTPTR_TYPE): Define.
	* config/spu/spu.h (STDINT_LONG32): Define.
	* configure.ac (use_gcc_stdint): Substitute.
	* configure: Regenerate.
	* doc/cpp.texi (__SIG_ATOMIC_TYPE__, __INT8_TYPE__,
	__INT16_TYPE__, __INT32_TYPE__, __INT64_TYPE__, __UINT8_TYPE__,
	__UINT16_TYPE__, __UINT32_TYPE__, __UINT64_TYPE__,
	__INT_LEAST8_TYPE__, __INT_LEAST16_TYPE__, __INT_LEAST32_TYPE__,
	__INT_LEAST64_TYPE__, __UINT_LEAST8_TYPE__, __UINT_LEAST16_TYPE__,
	__UINT_LEAST32_TYPE_, __UINT_LEAST64_TYPE__, __INT_FAST8_TYPE__,
	__INT_FAST16_TYPE__, __INT_FAST32_TYPE__, __INT_FAST64_TYPE__,
	__UINT_FAST8_TYPE__, __UINT_FAST16_TYPE__, __UINT_FAST32_TYPE__,
	__UINT_FAST64_TYPE__, __INTPTR_TYPE__, __UINTPTR_TYPE__,
	__WINT_MAX__, __SIZE_MAX__, __PTRDIFF_MAX__, __UINTMAX_MAX__,
	__SIG_ATOMIC_MAX__, __INT8_MAX__, __INT16_MAX__, __INT32_MAX__,
	__INT64_MAX__, __UINT8_MAX__, __UINT16_MAX__, __UINT32_MAX__,
	__UINT64_MAX__, __INT_LEAST8_MAX__, __INT_LEAST16_MAX__,
	__INT_LEAST32_MAX__, __INT_LEAST64_MAX__, __UINT_LEAST8_MAX__,
	__UINT_LEAST16_MAX__, __UINT_LEAST32_MAX__, __UINT_LEAST64_MAX__,
	__INT_FAST8_MAX__, __INT_FAST16_MAX__, __INT_FAST32_MAX__,
	__INT_FAST64_MAX__, __UINT_FAST8_MAX__, __UINT_FAST16_MAX__,
	__UINT_FAST32_MAX__, __UINT_FAST64_MAX__, __INTPTR_MAX__,
	__UINTPTR_MAX__, __WCHAR_MIN__, __WINT_MIN__, __SIG_ATOMIC_MIN__,
	__INT8_C, __INT16_C, __INT32_C, __INT64_C, __UINT8_C, __UINT16_C,
	__UINT32_C, __UINT64_C, __INTMAX_C, __UINTMAX_C): Document.
	* doc/tm.texi (SIG_ATOMIC_TYPE, INT8_TYPE, INT16_TYPE, INT32_TYPE,
	INT64_TYPE, UINT8_TYPE, UINT16_TYPE, UINT32_TYPE, UINT64_TYPE,
	INT_LEAST8_TYPE, INT_LEAST16_TYPE, INT_LEAST32_TYPE,
	INT_LEAST64_TYPE, UINT_LEAST8_TYPE, UINT_LEAST16_TYPE,
	UINT_LEAST32_TYPE, UINT_LEAST64_TYPE, INT_FAST8_TYPE,
	INT_FAST16_TYPE, INT_FAST32_TYPE, INT_FAST64_TYPE,
	UINT_FAST8_TYPE, UINT_FAST16_TYPE, UINT_FAST32_TYPE,
	UINT_FAST64_TYPE, INTPTR_TYPE, UINTPTR_TYPE): Document.

2009-03-31  Bernd Schmidt  <bernd.schmidt@analog.com>

	* loop-iv.c (suitable_set_for_replacement): Renamed from
	simplify_using_assignment; changed to return bool and to accept new
	args DEST and SRC.  Return true iff we find a source/destination pair
	that can be used to make a replacement, and fill SRC and DEST if so.
	Remove arg ALTERED.  Don't deal with altered regs here.  All callers
	changed.
	(simplify_using_initial_values): Deal with altered regs here and track
	more precisely the effect they have on the validity of our expression.

	* loop-iv.c (simplify_using_condition): A condition of the form
	(EQ REG CONST) can be used to simply make a substitution.
	(simplify_using_initial_values): Keep track of conditions we have seen
	and keep using them to simplify new expressions, while applying the
	same substitutions to them as to the expression.

	* simplify-rtx.c (simplify_relational_operation_1): Simplify
	(LTU (PLUS a C) C) or (LTU (PLUS a C) a) to (GEU a -C); likewise with
	GEU/LTU reversed.

	* loop-iv.c (determine_max_iter): New arg OLD_NITER.  All callers
	changed.  Use this when trying to improve the upper bound.
	Generate the comparison by using simplify_gen_relational.

	* loop-iv.c (simple_rhs_p): Allow more kinds of expressions.

	* loop-iv.c (replace_single_def_regs, replace_in_expr): New static
	functions.
	(simplify_using_assignment, simplify_using_initial_values): Call 
	replace_in_expr to make replacements.  Call replace_single_def_regs
	once on the initial version of the expression.

2009-03-31  Ramana Radhakrishnan  <ramana.radhakrishnan@arm.com>

        PR target/27237
	* doc/invoke.texi (ARM Options): Update documentation for -mthumb.
	
2009-03-31  Richard Guenther  <rguenther@suse.de>

	PR middle-end/31029
	* fold-const.c (fold_binary): Fold X +- Y CMP X to Y CMP 0 for
	equality comparisons.  Fold C - X CMP X if C % 2 == 1.

2009-03-31  Richard Guenther  <rguenther@suse.de>

	* tree.h (div_if_zero_remainder): Declare.
	* fold-const.c (div_if_zero_remainder): Export.
	* tree-ssa-forwprop.c
	(forward_propagate_addr_into_variable_array_index): Handle
	constant array index addition outside of the variable index.

2009-03-31  Joseph Myers  <joseph@codesourcery.com>

	PR target/39592
	* config/i386/i386.md (*floatunssi<mode>2_1, two unnamed
	define_splits, floatunssi<mode>2): Require x87 conversions from
	DImode to be permitted.

2009-03-31  Joseph Myers  <joseph@codesourcery.com>

	PR preprocessor/15638
	* c-common.c (c_cpp_error): Handle CPP_DL_FATAL.

2009-03-31  Richard Guenther  <rguenther@suse.de>

	PR middle-end/23401
	PR middle-end/27810
	* tree.h (DECL_GIMPLE_FORMAL_TEMP_P): Remove.
	(struct tree_decl_with_vis): Remove gimple_formal_temp member.
	* tree-eh.c (lower_eh_constructs_2): Move LHS assignment to
	a separate statement.
	* gimplify.c (pop_gimplify_context): Remove formal temp handling.
	(lookup_tmp_var): Likewise.
	(is_gimple_formal_tmp_or_call_rhs): Remove.
	(is_gimple_reg_or_call_rhs): Rename to ...
	(is_gimple_reg_rhs_or_call): ... this.
	(is_gimple_mem_or_call_rhs): Rename to ...
	(is_gimple_mem_rhs_or_call): ... this.
	(internal_get_tmp_var): Use is_gimple_reg_rhs_or_call.  Set
	DECL_GIMPLE_REG_P only if is_formal is true.
	(gimplify_compound_lval): Use is_gimple_reg.  Remove workaround
	for non-proper post-modify expression gimplification.
	(gimplify_self_mod_expr): For post-modify expressions gimplify
	the lvalue to a minimal lvalue.
	(rhs_predicate_for): Remove formal temp case.
	(gimplify_modify_expr_rhs): Likewise.
	(gimplify_addr_expr): Use is_gimple_reg.
	(gimplify_expr): Remove formal temp cases.
	(gimple_regimplify_operands): Likewise.
	* tree-ssa-pre.c (get_or_alloc_expr_for): Treat EXC_PTR_EXPR
	and FILTER_EXPR like constants.
	* gimple.c (walk_gimple_op): Fix val_only initialization, use
	is_gimple_reg.
	(is_gimple_formal_tmp_rhs): Remove.
	(is_gimple_reg_rhs): Remove special casing.
	(is_gimple_mem_rhs): Fix.
	(is_gimple_reg): Move DECL_GIMPLE_REG_P handling earlier.
	(is_gimple_formal_tmp_var): Remove.
	(is_gimple_formal_tmp_reg): Likewise.
	(is_gimple_min_lval): Allow invariant component ref parts.
	* gimple.h (is_gimple_formal_tmp_rhs, is_gimple_formal_tmp_var,
	is_gimple_formal_tmp_reg): Remove declarations.
	* tree-cfg.c (verify_expr): Verify that variables with address
	taken do not have DECL_GIMPLE_REG_P set.
	* tree-mudflap.c (mf_build_check_statement_for): Use
	force_gimple_operand instead of gimplify_expr.

2009-03-31  Ayal Zaks  <zaks@il.ibm.com>

	* modulo-sched.c (sms_schedule_by_order): Pass the actual
	schedulable rows to compute_split_row.

2009-03-31  Ben Elliston  <bje@au.ibm.com>

	PR target/31635
	* config/rs6000/rs6000.c (rs6000_handle_option): Handle
	OPT_mvrsave.

2009-03-31  Alan Modra  <amodra@bigpond.net.au>

	* doc/invoke.texi (RS/6000 and PowerPC Options):Document mtls-markers.
	* configure.ac (HAVE_AS_TLS_MARKERS): New gas feature check.
	* configure: Regenerate.
	* config.in: Regenerate.
	* config/rs6000/rs6000.opt (mtls-markers): Add.
	* config/rs6000/rs6000.h (TARGET_TLS_MARKERS): Define.
	* config/rs6000/rs6000.md (tls_gd_aix, tls_gd_sysv): Add splitter.
	(tls_ld_aix, tls_ld_sysv): Likewise.
	(tls_gd, tls_gd_call_aix, tls_gd_call_sysv): New insns.
	(tls_ld, tls_ld_call_aix, tls_ld_call_sysv): Likewise.

2009-03-31  Alan Modra  <amodra@bigpond.net.au>

	* config/spu/spu.c (spu_expand_prologue): Delete redundant code.

2009-03-30  Jan Hubicka  <jh@suse.cz>

	* tree-eh.c (make_eh_edges): Set probability 100% to first edge
	out of RESX.
	(tree_remove_unreachable_handlers): Cleanup EH predecestor
	detection and label handling.

2009-03-30  Vladimir Makarov  <vmakarov@redhat.com>

	* ira-int.h (ira_allocno): Rename left_conflicts_num to
	left_conflicts_size.
	(ALLOCNO_LEFT_CONFLICTS_NUM): Rename to
	ALLOCNO_LEFT_CONFLICTS_SIZE.

	* ira-color.c (allocno_spill_priority, push_allocno_to_stack,
	remove_allocno_from_bucket_and_push,
	allocno_spill_priority_compare, push_allocnos_to_stack,
	setup_allocno_available_regs_num): Use ALLOCNO_LEFT_CONFLICTS_SIZE
	instead of ALLOCNO_LEFT_CONFLICTS_NUM.
	(setup_allocno_left_conflicts_num): Ditto.  Rename to
	setup_allocno_left_conflicts_size.
	(put_allocno_into_bucket): Use ALLOCNO_LEFT_CONFLICTS_SIZE
	instead of ALLOCNO_LEFT_CONFLICTS_NUM and
	setup_allocno_left_conflicts_size instead of
	setup_allocno_left_conflicts_num.

	* ira-build.c (ira_create_allocno): Use
	ALLOCNO_LEFT_CONFLICTS_SIZE instead of
	ALLOCNO_LEFT_CONFLICTS_NUM.
		
2009-03-30  Vladimir Makarov  <vmakarov@redhat.com>

	* reload.c (push_reload, find_dummy_reload): Use df_get_live_out
	instead of DF_LR_OUT.

	* ira-lives.c (process_bb_node_lives): Ditto.

	* ira-color.c (ira_loop_edge_freq): Use df_get_live_{out,in}
	instead of DF_LR_{OUT,IN}.

	* ira-emit.c (generate_edge_moves, add_ranges_and_copies): Ditto.

	* ira-build.c (create_bb_allocnos, create_loop_allocnos): Ditto.

2009-03-30  Jan Hubicka  <jh@suse.cz>

	* except.c (label_to_region_map): Fix thinko.

2009-03-30  Steve Ellcey  <sje@cup.hp.com>

	PR middle-end/38237
	* tree.h (tree_find_value): New declaration.
	* tree.c (tree_find_value): New function.
	* varasm.c (assemble_external): Avoid duplicate entries on lists.

2009-03-30  Jakub Jelinek  <jakub@redhat.com>

	PR debug/39563
	* c-decl.c (struct c_binding): Add locus field.
	(bind): Add locus argument, set locus field from it.
	(pop_scope): For b->nested VAR_DECL or FUNCTION_DECL,
	add a DECL_EXTERNAL copy of b->decl to current BLOCK_VARS.
	(push_file_scope, pushtag, pushdecl, pushdecl_top_level,
	implicitly_declare, undeclared_variable, lookup_label,
	declare_label, c_make_fname_decl, c_builtin_function,
	c_builtin_function_ext_scope, store_parm_decls_newstyle): Adjust
	bind callers.

2008-03-30  H.J. Lu  <hongjiu.lu@intel.com>

	PR target/38781
	* config/i386/i386.c (classify_argument): Check total size of
	structure.

2009-03-30  Martin Jambor  <mjambor@suse.cz>

	* ipa-prop.h (jump_func_type): Rename IPA_UNKNOWN, IPA_CONST,
	IPA_CONST_MEMBER_PTR, and IPA_PASS_THROUGH to IPA_JF_UNKNOWN,
	IPA_JF_CONST, IPA_JF_CONST_MEMBER_PTR, and IPA_JF_PASS_THROUGH
	respectively.

	* tree-dfa.c (get_ref_base_and_extent): Return -1 maxsize if
	seen_variable_array_ref while also traversing a union.

	* tree-inline.c (optimize_inline_calls): Do not call
	cgraph_node_remove_callees.
	* cgraphbuild.c (remove_cgraph_callee_edges): New function.
	(pass_remove_cgraph_callee_edges): New variable.
	* passes.c (init_optimization_passes): Add
	pass_remove_cgraph_callee_edges after early inlining and before all
	late intraprocedural passes.

	* omp-low.c (expand_omp_taskreg): Always set current_function_decl.

2009-03-30  Paolo Bonzini  <bonzini@gnu.org>

	* config/sparc/sparc.md (*nand<V64mode>_vis, *nand<V32mode>_vis):
	Fix typos in names.

2009-03-30  Paolo Bonzini  <bonzini@gnu.org>

        * combine.c (simplify_comparison): Use have_insn_for.
        * dojump.c (do_jump): Likewise.

2009-03-30  Paolo Bonzini  <bonzini@gnu.org>

	* config/sparc/sparc.c (sparc_compare_emitted): Remove.
	(gen_compare_reg, emit_v9_brxx_insn): Handle MODE_CC
	sparc_compare_op0 like sparc_compare_emitted used to be handled.
	(sparc_expand_compare_and_swap_12): Set sparc_compare_op0
	instead of sparc_compare_emitted.
	* config/sparc/sparc.h (sparc_compare_emitted): Remove.
	* config/sparc/sparc.md (stack_protect_test): Set sparc_compare_op0
	instead of sparc_compare_emitted.

2009-03-30  Paolo Bonzini  <bonzini@gnu.org>

	* bb-reorder.c (partition_hot_cold_basic_blocks): Do not
	enter/exit cfglayout mode.
	(pass_partition_block): Require it.
	* combine.c (find_single_use, reg_dead_at_p): Use CFG.
	(combine_instructions): Track basic blocks instead of labels.
	(update_cfg_for_uncondjump): New.
	(try_combine): Use it.  Update jumps after rescanning.
	(pass_combine): Require PROP_cfglayout.
	* passes.c (pass_outof_cfg_layout_mode): Move after regmove.

2009-03-30  Paolo Bonzini  <bonzini@gnu.org>

        * cfglayout.c (pass_into_cfg_layout_mode, pass_outof_cfg_layout_mode):
        Provide/destroy PROP_cfglayout respectively.
        * gcse.c (pass_jump_bypass, pass_gcse): Require it.
        * tree-pass.h (PROP_cfglayout): New.

2009-03-30  Paolo Bonzini  <bonzini@gnu.org>

	* fold-const.c (const_binop, fold_convert_const_real_from_fixed,
	fold_convert_const_fixed_from_fixed,
	fold_convert_const_fixed_from_int,
	fold_convert_const_fixed_from_real, fold_negate_const): Do not
	set TREE_CONSTANT_OVERFLOW.
	* tree.def: Remove mention of TREE_CONSTANT_OVERFLOW.
	* tree.h (TREE_CONSTANT_OVERFLOW): Delete.

2009-03-30  Ira Rosen  <irar@il.ibm.com>

	* tree-vect-loop-manip.c: New file.
	* tree-vectorizer.c: Update documentation and included files.
	(vect_loop_location): Make extern.
	(rename_use_op): Move to tree-vect-loop-manip.c
	(rename_variables_in_bb, rename_variables_in_loop, 
	slpeel_update_phis_for_duplicate_loop, 
	slpeel_update_phi_nodes_for_guard1,
	slpeel_update_phi_nodes_for_guard2, slpeel_make_loop_iterate_ntimes,
	slpeel_tree_duplicate_loop_to_edge_cfg, slpeel_add_loop_guard,
	slpeel_can_duplicate_loop_p, slpeel_verify_cfg_after_peeling,
	set_prologue_iterations, slpeel_tree_peel_loop_to_edge, 
	find_loop_location): Likewise.
	(new_stmt_vec_info): Move to tree-vect-stmts.c.
	(init_stmt_vec_info_vec, free_stmt_vec_info_vec, free_stmt_vec_info,
	get_vectype_for_scalar_type, vect_is_simple_use,
	supportable_widening_operation, supportable_narrowing_operation):
	Likewise.
	(bb_in_loop_p): Move to tree-vect-loop.c.
	(new_loop_vec_info, destroy_loop_vec_info, 
	reduction_code_for_scalar_code, report_vect_op, 
	vect_is_simple_reduction, vect_is_simple_iv_evolution): Likewise.
	(vect_can_force_dr_alignment_p): Move to tree-vect-data-refs.c.
	(vect_supportable_dr_alignment): Likewise.
	* tree-vectorizer.h (tree-data-ref.h): Include.
	(vect_loop_location): Declare.
	Reorganize function declarations according to the new file structure.
	* tree-vect-loop.c: New file.
	* tree-vect-analyze.c: Remove. Move functions to tree-vect-data-refs.c, 
	tree-vect-stmts.c, tree-vect-slp.c, tree-vect-loop.c.
	* tree-vect-data-refs.c: New file.
	* tree-vect-patterns.c (timevar.h): Don't include.
	* tree-vect-stmts.c: New file.
	* tree-vect-transform.c: Remove. Move functions to tree-vect-stmts.c, 
	tree-vect-slp.c, tree-vect-loop.c.
	* Makefile.in (OBJS-common): Remove tree-vect-analyze.o and 
	tree-vect-transform.o. Add tree-vect-data-refs.o, tree-vect-stmts.o, 
	tree-vect-loop.o, tree-vect-loop-manip.o, tree-vect-slp.o.
	(tree-vect-analyze.o): Remove.
	(tree-vect-transform.o): Likewise.
	(tree-vect-data-refs.o): Add rule.
	(tree-vect-stmts.o, tree-vect-loop.o, tree-vect-loop-manip.o, 
	tree-vect-slp.o): Likewise.
	(tree-vect-patterns.o): Remove redundant dependencies.
	(tree-vectorizer.o): Likewise.
	* tree-vect-slp.c: New file.

2009-03-30  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>

	* optc-gen.awk: Warn if an option flag has multiple different
	help strings.

2009-03-30  Sebastian Pop  <sebastian.pop@amd.com>

	* doc/invoke.texi (-floop-interchange, -floop-strip-mine,
	-floop-block): Document dependences on PPL, CLooG and Graphite.

2009-03-30  Joseph Myers  <joseph@codesourcery.com>

	PR rtl-optimization/323
	* c-common.c (c_fully_fold, convert_and_check,
	c_common_truthvalue_conversion): Handle EXCESS_PRECISION_EXPR.
	(c_fully_fold_internal): Disallow EXCESS_PRECISION_EXPR.
	* c-common.def (EXCESS_PRECISION_EXPR): New.
	* c-cppbuiltin.c (builtin_define_float_constants): Define
	constants with enough digits for long double.
	* c-lex.c (interpret_float): Interpret constant with excess
	precision where appropriate.
	* c-opts.c (c_common_post_options): Set
	flag_excess_precision_cmdline.  Give an error for
	-fexcess-precision=standard for C++ for processors where the
	option is significant.
	* c-parser.c (c_parser_conditional_expression): Handle excess
	precision in condition.
	* c-typeck.c (convert_arguments): Handle arguments with excess
	precision.
	(build_unary_op): Move excess precision outside operation.
	(build_conditional_expr): Likewise.
	(build_compound_expr): Likewise.
	(build_c_cast): Do cast on operand of EXCESS_PRECISION_EXPR.
	(build_modify_expr): Handle excess precision in RHS.
	(convert_for_assignment): Handle excess precision in converted
	value.
	(digest_init, output_init_element, process_init_element): Handle
	excess precision in initializer.
	(c_finish_return): Handle excess precision in return value.
	(build_binary_op): Handle excess precision in operands and add
	excess precision as needed for operation.
	* common.opt (-fexcess-precision=): New option.
	* config/i386/i386.h (X87_ENABLE_ARITH, X87_ENABLE_FLOAT): New.
	* config/i386/i386.md (float<SSEMODEI24:mode><X87MODEF:mode>2):
	For standard excess precision, output explicit conversion to and
	truncation from XFmode.
	(*float<SSEMODEI24:mode><X87MODEF:mode>2_1,
	*float<SSEMODEI24:mode><X87MODEF:mode>2_i387_with_temp,
	*float<SSEMODEI24:mode><X87MODEF:mode>2_i387, two unnamed
	define_splits, floatdi<X87MODEF:mode>2_i387_with_xmm, two unnamed
	define_splits, *floatunssi<mode>2_1, two unnamed define_splits,
	floatunssi<mode>2, add<mode>3, sub<mode>3, mul<mode>3, divdf3,
	divsf3, *fop_<mode>_comm_i387, *fop_<mode>_1_i387,
	*fop_<MODEF:mode>_2_i387, *fop_<MODEF:mode>_3_i387,
	*fop_df_4_i387, *fop_df_5_i387, *fop_df_6_i387, two unnamed
	define_splits, sqrt<mode>2): Disable where appropriate for
	standard excess precision.
	* convert.c (convert_to_real): Do not shorten arithmetic to type
	for which excess precision would be used.
	* defaults.h (TARGET_FLT_EVAL_METHOD_NON_DEFAULT): Define.
	* doc/invoke.texi (-fexcess-precision=): Document option.
	(-mfpmath=): Correct index entry.
	* flags.h (enum excess_precision, flag_excess_precision_cmdline,
	flag_excess_precision): New.
	* langhooks.c (lhd_post_options): Set
	flag_excess_precision_cmdline.
	* opts.c (common_handle_option): Handle -fexcess-precision=.
	* toplev.c (flag_excess_precision_cmdline, flag_excess_precision,
	init_excess_precision): New.
	(lang_dependent_init_target): Call init_excess_precision.
	* tree.c (excess_precision_type): New.
	* tree.h (excess_precision_type): Declare.

2009-03-30  Joseph Myers  <joseph@codesourcery.com>

	PR c/35235
	* c-typeck.c (build_component_ref): Do not copy qualifiers from
	non-lvalue to component.

2009-03-29  Joseph Myers  <joseph@codesourcery.com>

	PR preprocessor/34695
	* Makefile.in (c-opts.o): Depend on c-tree.h.
	* c-common.c: Move down include of diagnostic.h.
	(done_lexing, c_cpp_error): New.
	* c-common.h (done_lexing): Declare.
	* c-decl.c (c_write_global_declarations): Don't check cpp_errors
	(parse_in).
	* c-opts.c: Include c-tree.h.
	(c_common_init_options): Set preprocessor error callback.
	(c_common_handle_option): Do not set preprocessor
	inhibit_warnings, warnings_are_errors, warn_system_headers,
	pedantic_errors or inhibit_warnings flags.
	(c_common_post_options): Do not check cpp_errors (parse_in).
	(c_common_finish): Do not output dependencies if there were
	errors.  Do not check return value of cpp_finish.
	* c-ppoutput.c (pp_file_change): Set input_location.
	* c-tree.h (c_cpp_error): Declare.
	* diagnostic.c (diagnostic_set_info_translated): Also initialize
	override_column.
	(diagnostic_build_prefix): Check override_column.
	* diagnostic.h (diagnostic_info): Add override_column field.
	(diagnostic_override_column): Define.

2009-03-28  Paolo Bonzini  <bonzini@gnu.org>

	* c-common.c (c_expand_expr, c_staticp): Remove.
	* c-common.def (COMPOUND_LITERAL_EXPR): Delete.
	* c-common.h (emit_local_var, c_staticp, COMPOUND_LITERAL_EXPR_DECL,
	COMPOUND_LITERAL_EXPR_DECL_EXPR): Remove.
	* c-gimplify.c (gimplify_compound_literal_expr,
	optimize_compound_literals_in_ctor): Remove.
	(c_gimplify_expr): Remove COMPOUND_LITERAL_EXPR handling.
	* c-objc-common.h (LANG_HOOKS_STATICP): Remove.
	* c-semantics.c (emit_local_var): Remove.

	* langhooks-def.h (lhd_expand_expr): Remove.
	* langhooks.c (lhd_expand_expr): Remove.
	* langhooks.h (LANG_HOOKS_DEF): Remove LANG_HOOKS_EXPAND_EXPR.

	* expr.c (expand_expr_real_1): Move COMPOUND_LITERAL_EXPR
	handling from c-semantics.c; don't call into langhook.
	(expand_expr_addr_expr_1): Check that we don't get non-GENERIC trees.
	* gimplify.c (gimplify_compound_literal_expr,
	optimize_compound_literals_in_ctor): Move from c-gimplify.c.
	(gimplify_init_constructor): Call optimize_compound_literals_in_ctor.
	(gimplify_modify_expr_rhs, gimplify_expr): Handle COMPOUND_LITERAL_EXPR
	as was done in c-gimplify.c.
	* tree.c (staticp): Move COMPOUND_LITERAL_EXPR handling from c_staticp.
	* tree.h (COMPOUND_LITERAL_EXPR_DECL, COMPOUND_LITERAL_EXPR_DECL_EXPR):
	Move from c-common.h.
	* tree.def (COMPOUND_LITERAL_EXPR): Move from c-common.def.

	* tree.c (staticp): Do not call langhook.
	* langhooks.c (lhd_staticp): Delete.
	* langhooks-def.h (lhd_staticp): Delete prototype.
	(LANG_HOOKS_STATICP): Delete.
	(LANG_HOOKS_INITIALIZER): Delete LANG_HOOKS_STATICP.

	* doc/c-tree.texi (Expression nodes): Refer to DECL_EXPRs
	instead of DECL_STMTs.

2009-03-29  Joseph Myers  <joseph@codesourcery.com>

	PR c/456
	PR c/5675
	PR c/19976
	PR c/29116
	PR c/31871
	PR c/35198
	* builtins.c (fold_builtin_sincos): Build COMPOUND_EXPR in
	void_type_node.
	(fold_call_expr): Return a NOP_EXPR from folding rather than the
	contained expression.
	* c-common.c (c_fully_fold, c_fully_fold_internal, c_save_expr): New.
	(c_common_truthvalue_conversion): Use c_save_expr.  Do not fold
	conditional expressions for C.
	(decl_constant_value_for_optimization): Move from
 	decl_constant_value_for_broken_optimization in c-typeck.c.  Check
	whether optimizing and that the expression is a VAR_DECL not of
	array type instead of doing such checks in the caller.  Do not
	check pedantic.  Call gcc_unreachable for C++.
	* c-common.def (C_MAYBE_CONST_EXPR): New.
	* c-common.h (c_fully_fold, c_save_expr,
	decl_constant_value_for_optimization): New prototypes.
	(C_MAYBE_CONST_EXPR_PRE, C_MAYBE_CONST_EXPR_EXPR,
	C_MAYBE_CONST_EXPR_INT_OPERANDS, C_MAYBE_CONST_EXPR_NON_CONST,
	EXPR_INT_CONST_OPERANDS): Define.
	* c-convert.c (convert): Strip nops from expression.
	* c-decl.c (groktypename): Take extra parameters expr and
	expr_const_operands.  Update call to grokdeclarator.
	(start_decl): Update call to grokdeclarator.  Add statement for
	expressions used in type of decl.
	(grokparm): Update call to grokdeclarator.
	(push_parm_decl): Update call to grokdeclarator.
	(build_compound_literal): Add parameter non_const and build a
	C_MAYBE_COSNT_EXPR if applicable.
	(grokdeclarator): Take extra parameters expr and
	expr_const_operands.  Track expressions used in declaration
	specifiers and declarators.  Fold array sizes and track whether
	they are constant expressions and whether they are integer
	constant expressions.
	(parser_xref_tag): Set expr and expr_const_operands fields in
	return value.
	(grokfield): Update call to grokdeclarator.
	(start_function): Update call to grokdeclarator.
	(build_null_declspecs): Set expr and expr_const_operands fields in
	return value.
	(declspecs_add_type): Handle expressions in typeof specifiers.
	* c-parser.c (c_parser_declspecs): Set expr and
	expr_const_operands fields for declaration specifiers.
	(c_parser_enum_specifier): Likewise.
	(c_parser_struct_or_union_specifier): Likewise.
	(c_parser_typeof_specifier): Likewise.  Update call to
	groktypename.  Fold expression as needed.  Return expressions with
	type instead of adding statements.
	(c_parser_attributes): Update calls to c_parser_expr_list.
	(c_parser_statement_after_labels): Fold expression before passing
	to objc_build_throw_stmt.
	(c_parser_condition): Fold expression.
	(c_parser_asm_operands): Fold expression.
	(c_parser_conditional_expression): Use c_save_expr.  Update call
	to build_conditional_expr.
	(c_parser_alignof_expression): Update call to groktypename.
	(c_parser_postfix_expression): Preserve C_MAYBE_CONST_EXPR as
	original_code.  Fold expression argument of va_arg.  Create
	C_MAYBE_CONST_EXPR to preserve side effects of expressions in type
	argument to va_arg.  Update calls to groktypename.  Fold array
	index for offsetof.  Verify that first argument to
	__builtin_choose_expr has integer type.
	(c_parser_postfix_expression_after_paren_type): Update calls to
	groktypename and build_compound_literal.  Handle expressions with
	side effects in type name.
	(c_parser_postfix_expression_after_primary): Update call to
	c_parser_expr_list.  Set original_code for calls to
	__builtin_constant_p.
	(c_parser_expr_list): Take extra parameter fold_p.  Fold
	expressions if requested.
	(c_parser_objc_type_name): Update call to groktypename.
	(c_parser_objc_synchronized_statement): Fold expression.
	(c_parser_objc_receiver): Fold expression.
	(c_parser_objc_keywordexpr): Update call to c_parser_expr_list.
	(c_parser_omp_clause_num_threads, c_parser_omp_clause_schedule,
	c_parser_omp_atomic, c_parser_omp_for_loop): Fold expressions.
	* c-tree.h (CONSTRUCTOR_NON_CONST): Define.
	(struct c_typespec): Add elements expr and expr_const_operands.
	(struct c_declspecs): Add elements expr and expr_const_operands.
	(groktypename, build_conditional_expr, build_compound_literal):
	Update prototypes.
	(in_late_binary_op): Declare.
	* c-typeck.c (note_integer_operands): New function.
	(in_late_binary_op): New variable.
	(decl_constant_value_for_broken_optimization): Move to c-common.c
	and rename to decl_constant_value_for_optimization.
	(default_function_array_conversion): Do not strip nops.
	(default_conversion): Do not call
	decl_constant_value_for_broken_optimization.
	(build_array_ref): Do not fold result.
	(c_expr_sizeof_expr): Fold operand.  Use C_MAYBE_CONST_EXPR for
	result when operand is a VLA.
	(c_expr_sizeof_type): Update call to groktypename.  Handle
	expressions included in type name.  Use C_MAYBE_CONST_EXPR for
	result when operand names a VLA type.
	(build_function_call): Update call to build_compound_literal.
	Only fold result for calls to __builtin_* functions.  Strip
	NOP_EXPR from INTEGER_CST returned from such functions.  Fold
	the function designator.
	(convert_arguments): Fold arguments.  Update call to
	convert_for_assignment.
	(build_unary_op): Handle increment and decrement of
	C_MAYBE_CONST_EXPR.  Move lvalue checks for increment and
	decrement earlier.  Fold operand of increment and decrement.
	Handle address of C_MAYBE_CONST_EXPR.  Only fold expression being
	built for integer operand.  Wrap returns that are INTEGER_CSTs
	without being integer constant expressions or that have integer
	constant operands without being INTEGER_CSTs.
	(lvalue_p): Handle C_MAYBE_CONST_EXPR.
	(build_conditional_expr): Add operand ifexp_bcp.  Track whether
	result is an integer constant expression or can be used in
	unevaluated parts of one and avoid folding and wrap as
	appropriate.  Fold operands before possibly doing -Wsign-compare
	warnings.
	(build_compound_expr): Wrap result for C99 if operands can be used
	in integer constant expressions.
	(build_c_cast): Update call to digest_init.  Do not ignore
	overflow from casting floating-point constants to integers.  Wrap
	results that could be confused with integer constant expressions,
	null pointer constants or floating-point constants.
	(c_cast_expr): Update call to groktypename.  Handle expressions
	included in type name.
	(build_modify_expr): Handle modifying a C_MAYBE_CONST_EXPR.  Fold
	lhs inside possible SAVE_EXPR.  Fold RHS before assignment.
	Update calls to convert_for_assignment.
	(convert_for_assignment): Take new parameter
	null_pointer_constant.  Do not strip nops or call
	decl_constant_value_for_broken_optimization.  Set
	in_late_binary_op for conversions to boolean.
	(store_init_value): Update call to digest_init.
	(digest_init): Take new parameter null_pointer_constant.  Do not
	call decl_constant_value_for_broken_optimization.  pedwarn for
	initializers not constant expressions.  Update calls to
	convert_for_assignment.
	(constructor_nonconst): New.
	(struct constructor_stack): Add nonconst element.
	(really_start_incremental_init, push_init_level, pop_init_level):
	Handle constructor_nonconst and nonconst element.
	(set_init_index): Call constant_expression_warning for array
	designators.
	(output_init_element): Fold value.  Set constructor_nonconst as
	applicable.  pedwarn for initializers not constant expressions.
	Update call to digest_init.  Call constant_expression_warning
	where constant initializers are required.
	(process_init_element): Use c_save_expr.
	(c_finish_goto_ptr): Fold expression.
	(c_finish_return): Fold return value.  Update call to
	convert_for_assignment.
	(c_start_case): Fold switch expression.
	(c_process_expr_stmt): Fold expression.
	(c_finish_stmt_expr): Create C_MAYBE_CONST_EXPR as needed to
	ensure statement expression is not evaluated in constant expression.
	(build_binary_op): Track whether results are integer constant
	expressions or may occur in such, disable folding and wrap results
	as applicable.  Fold operands for -Wsign-compare warnings unless
	in_late_binary_op.
	(c_objc_common_truthvalue_conversion): Handle results folded to
	integer constants that are not integer constant expressions.
	* doc/extend.texi: Document when typeof operands are evaluated,
	that condition of __builtin_choose_expr is an integer constant
	expression, and more about use of __builtin_constant_p in
	initializers.

2009-03-29  Richard Guenther  <rguenther@suse.de>

	* tree-ssa-forwprop.c (forward_propagate_addr_expr_1): Properly
	propagate addresses of array references.

2009-03-29  Steven Bosscher  <steven@gcc.gnu.org>

	* regmove.c (perhaps_ends_bb_p): Remove.
	(optimize_reg_copy_1): Don't call perhaps_ends_bb_p.  Get basic block
	from INSN and check that the main loop stays within that basic block.
	(optimize_reg_copy_1, optimize_reg_copy_3, fixup_match_2): Likewise.
	(regmove_forward_pass): Split out from regmove_optimize.  Use
	FOR_EACH_BB and FOR_BB_INSNS instead of traversing the insns stream.
	(regmove_backward_pass): Split out from regmove_optimize.  Use
	FOR_EACH_BB_REVERSE and FOR_BB_INSNS_REVERS_SAFE.
	(regmove_optimize): Simplify.

2009-03-29  H.J. Lu  <hongjiu.lu@intel.com>

	PR target/39545
	* config/i386/i386.c (classify_argument): Ignore flexible array
	member in struct and warn ABI change.

2009-03-29  H.J. Lu  <hongjiu.lu@intel.com>

	* config/i386/i386-protos.h (ix86_agi_dependent): New.

	* config/i386/i386.c (ix86_agi_dependent): Rewrite.
	(ix86_adjust_cost): Updated.

2009-03-29  Jan Hubicka  <jh@suse.cz>

	PR middle-end/28850
	* tree-pass.h (pass_cleanup_eh): New function.
	(remove_unreachable_regions): Break code handling RTL
	to rtl_remove_unreachable_regions; remove ERT_MUST_NOT_THROW
	that can not be reached by runtime.
	(can_be_reached_by_runtime): New function.
	(label_to_region_map): New function.
	(num_eh_regions): New function.
	(rtl_remove_unreachable_regions): New function.
	(convert_from_eh_region_ranges): Call rtl_remove_unreachable_regions.
	(remove_eh_region): New function.
	* except.h: Include sbitmap and vecprim.
	(remove_eh_region, remove_unreachable_regions, label_to_region_map,
	num_eh_regions): Declare.
	* passes.c (init_optimization_passes): Schedule cleanup_eh.
	* Makefile.in (EXCEPT_H): New; replace all uses of except.h by it.
	* tree-eh.c (tree_remove_unreachable_handlers): New function.
	(tree_empty_eh_handler_p): New function.
	(cleanup_empty_eh): New function.
	(cleanup_eh): New function.
	(pass_cleanup_eh): New function.

2009-03-29  Jan Hubicka  <jh@suse.cz>

	* except.c (verify_eh_tree): Fix handling of fun!=cfun; be ready
	for removed regions.

2009-03-29  Jan Hubicka  <jh@suse.cz>

	* except.c (dump_eh_tree): Dump all datastructures.

2009-03-29  Jan Hubicka  <jh@suse.cz>

	* except.c (duplicate_eh_regions_0): Handle AKA bitmap.
	(duplicate_eh_regions_1): Likewise.
	(duplicate_eh_regions): Likewise; cleanup code gorwing the region
	vector; call EH verification.
	(foreach_reachable_handler, can_throw_internal_1, can_throw_external_1):
	Be ready for region being removed.

2009-03-29  Jan Hubicka  <jh@suse.cz>

	* bitmap.c (bitmap_last_set_bit): New function.
	* bitmap.h (bitmap_last_set_bit): Declare.

2009-03-29  David Ayers  <ayers@fsfe.org>

	PR objc/27377
	* c-typeck.c (build_conditional_expr): Emit ObjC warnings
	by calling objc_compare_types and surpress warnings about
	incompatible C pointers that are compatible ObjC pointers.
	
2009-03-29  Adam Nemet  <anemet@caviumnetworks.com>

	* cgraphbuild.c (build_cgraph_edges, rebuild_cgraph_edges): Don't
	call initialize_inline_failed.
	(initialize_inline_failed): Move it from here ...
	* cgraph.c (initialize_inline_failed): ... to here.
	(cgraph_create_edge): Call initialize_inline_failed rather than
	setting inline_failed directly.

2009-03-29  Ben Elliston  <bje@au.ibm.com>

	PR target/32542
	* sysv4.opt (msdata): Improve comment.
	* linux64.h (ASM_SPEC32): Do not pass -memb when -msdata is given.
	* sysv4.h (SVR4_ASM_SPEC): Likewise.

2009-03-29  Ben Elliston  <bje@au.ibm.com>

	PR target/30451
	* config/rs6000/rs6000.md (*movti_ppc64): Correct the order of
	load and store attributes.

2009-03-29  Ben Elliston  <bje@au.ibm.com>

	* config/i386/i386.c (enum ix86_builtins): Add IX86_BUILTIN_HUGE_VALQ.
	(ix86_init_builtins): Add built-in function __builtin_huge_valq.
	(ix86_expand_builtin): Handle IX86_BUILTIN_HUGE_VALQ.
	* doc/extend.texi (X86 Built-in Functions): Add index entries for
	__builtin_infq and __builtin_huge_valq.

2009-03-28  Anatoly Sokolov  <aesok@post.ru>

	* config/avr/avr.c (avr_mcu_t): Add atmega8c1, atmega16c1 and
	atmega8m1 devices.
	* config/avr/avr.h (LINK_SPEC, CRT_BINUTILS_SPECS): (Ditto.).
	* config/avr/t-avr (MULTILIB_MATCHES): (Ditto.)

2009-03-28  Xinliang David Li  <davidxl@google.com>

	* tree-ssa-ccp.c (ccp_finalize): Add dbg_count support. 
	(do_dbg_cnt): New function.

2009-03-28  Jan Hubicka  <jh@suse.cz>

	Merge from pretty-ipa:

	2009-03-27  Jan Hubicka  <jh@suse.cz>

	* cgraph.c (dump_cgraph_node): Add replace output flag by process.
	* tree-pass.h (function_called_by_processed_nodes_p): Declare.
	* passes.c (function_called_by_processed_nodes_p): New.
	* ipa-pure-const.c (check_call): Fix handling of operands.
	(analyze_function): Dump debug output for skipped bodies.
	(local_pure_const): Use function_called_by_processed_nodes_p.
	* dwarf2out.c (reference_to_unused): Use output.
	* passes.c (do_per_function_toporder): Likewise.

	2008-11-12  Jan Hubicka  <jh@suse.cz>

	* tree-pass.h (pass_fixup_cfg, pass_local_pure_const): Declare.
	* ipa-pure-const.c (funct_state_d): Add can throw field; make
	state_set_in_source enum
	(check_decl): Ignore memory tags; do not set fake looping flags;
	dump diagnostics.
	(check_operand, check_tree, check_rhs_var, check_lhs_var,
	get_asm_expr_operands, scan_function_op, scan_function_stmt): Remove.
	(check_call, analyze_function): Rewrite.
	(check_stmt): New.
	(add_new_function): Update call of analyze_function.
	(generate_summary): Add call of analyze_function.
	(propagate): Propagate can_throw; handle state_set_in_source correctly.
	(local_pure_const): New function.
	(pass_local_pure_const): New pass.
	* ipa-inline.c (inline_transform): Set after_inlining.
	* tree-eh.c (stmt_can_throw_external): New.
	* tree-optimize.c (execute_fixup_cfg): Do not set after_inlining;
	work with aliasing built.
	* tree-flow.h (stmt_can_throw_external): New.
	* passes.c (init_optimization_passes): Schedule fixup_cfg pass early;
	and local pure/const pass in early and late optimization queue.

2009-03-28  Martin Jambor  <mjambor@suse.cz>

	* fold-const.c (get_pointer_modulus_and_residue): New parameter
	allow_func_align.
	(fold_binary): Allow function decl aligment consideration is the
	second argument is integer constant one.
	* tree-ssa-forwprop.c (simplify_bitwise_and): New function.
	(tree_ssa_forward_propagate_single_use_vars): Handle assing statements
	with BIT_AND_EXPR on the RHS by calling simplify_bitwise_and.

2009-03-28  Jan Hubicka  <jh@suse.cz>

	* dwarf2out.c (dwarf2out_begin_prologue): Use crtl->nothrow
	* tree-eh.c (stmt_could_throw_p): Remove check for WEAK decls.
	* function.h (rtl_data): Add nothrow flag.
	* except.c (set_nothrow_function_flags): Use crtl->nothrow;
	set DECL_NOTHROW for AVAILABLE functions.

2009-03-28  Jakub Jelinek  <jakub@redhat.com>

	* config/rs6000/rs6000-c.c (rs6000_macro_to_expand): If macro
	following vector keyword has expansion starting with pixel or bool
	keyword, expand vector to __vector and pixel or bool to __pixel or
	__bool.

	PR c++/39554
	* opts.c (warning_disallowed_functions, warn_disallowed_functions,
	warn_if_disallowed_function_p): Removed.
	(common_handle_option): Don't handle OPT_Wdisallowed_function_list_.
	* c-parser.c (c_parser_postfix_expression_after_primary): Don't call
	warning_if_disallowed_function_p.
	* flags.h (warn_if_disallowed_function_p,
	warn_disallowed_functions): Removed.
	* common.opt (Wdisallowed-function-list=): Removed.
	* doc/invoke.texi (-Wdisallowed-function-list=): Removed.

2009-03-28  Richard Guenther  <rguenther@suse.de>

	PR tree-optimization/38723
	* tree-ssa-pre.c (compute_avail): Add all default definitions to
	the entry block.

2009-03-28  Jan Hubicka  <jh@suse.cz>

	* tree-ssa-structalias.c (ipa_pta_execute): Fix bogus node->analyzed
	test introduced by my previous patch.

2009-03-28  Richard Guenther  <rguenther@suse.de>

	* tree-ssa-copy.c (copy_prop_visit_phi_node): Do not leave
	the PHIs value undefined.

2009-03-28  Jan Hubicka  <jh@suse.cz>

	* tree-pass.h (pass_fixup_cfg): New pass.
	* ipa-inline.c (inline_transform): Set
	always_inline_functions_inlined/after_inlining.
	* tree-optimize.c (execute_fixup_cfg): Do not set them here.
	(pass_fixup_cfg): New pass.
	* passes.c (init_optimization_passes): Add fixup_cfg.

2009-03-28  Richard Guenther  <rguenther@suse.de>

	PR tree-optimization/38458
	* tree-ssa-copy.c (copy_prop_visit_phi_node): For the first
	argument use the arguments copy-of value.

2009-03-28  Richard Guenther  <rguenther@suse.de>

	PR tree-optimization/38180
	* tree-ssa-ccp.c (get_default_value): Simplify.
	(likely_value): Likewise.
	(surely_varying_stmt_p): Properly handle VOP case.
	(ccp_initialize): Likewise.
	(ccp_fold): Handle propagating through *&.
	(fold_const_aggregate_ref): Also handle decls.

2009-03-28  Jan Hubicka  <jh@suse.cz>

	* cgraph.c (dump_cgraph_node): Add replace output flag by process.
	* cgraph.h (cgraph_node): Likewise.
	* cgraphunit.c (cgraph_process_new_functions): Set process flag.
	(cgraph_reset_node): Use process flag.
	(cgraph_mark_functions_to_output): Likewise.
	(cgraph_expand_function): Likewise.
	(cgraph_expand_all_functions): Likewise.
	(cgraph_output_in_order): Likewise.
	* dwarf2out.c (reference_to_unused): Likewise.
	* passes.c do_per_function_toporder): Likewise.

2009-03-28  Jan Hubicka  <jh@suse.cz>

	Bring from lto-branch:

	2008-09-03  Doug Kwan  <dougkwan@google.com>

	* cgraphbuild.c (initialize_inline_failed): Use cgraph_inline_failed_t
	enums instead of reason strings.
	* cgraph.c (cgraph_create_edge): Same.
	(cgraph_inline_failed_string): New function.
	* cgraph.h (cgraph_inline_failed_t): New enum type.
	(cgraph_inline_failed_string): New prototype.
	(struct cgraph_edge): Change type of INLINED_FAILED from constant
	char pointer to cgraph_inline_failed_t.
	(cgraph_inline_p): Adjust prototype to use cgraph_inline_failed_t.
	(cgraph_default_inline_p): Ditto.
	* gcc/cgraphunit.c (cgraph_inline_p): Change type of parameter REASON
	to cgraph_inline_failed_t pointer.
	* cif-code.def: New file.
	* ipa-inline.c (cgraph_mark_inline_edge): Use an enum instead of a
	reason string.
	(cgraph_check_inline_limits): Change type of REASON to pointer to
	cgraph_inline_failed_t.  Replace reason strings with enums.
	(cgraph_default_inline_p): Ditto.
	(cgraph_recursive_inlining_p): Ditto.
	(update_caller_keys): Change type of FAILED_REASON to
	cgraph_inline_failed_t.
	(cgraph_set_inline_failed): Change type of REASON to pointer to
	cgraph_inline_failed_t.  Call cgraph_inline_failed_string to
	convert enums to strings for text output.
	(cgraph_decide_inlining_of_small_function): Change FAILED_REASON
	to be of type cgraph_inline_failed_t.  Replace reason strings with
	enums.  Call cgraph_inline_failed_string to covert enums
	to strings for text output.
	(cgraph_decide_inlining): Replace reason strings with enums.
	(cgraph_decide_inlining_incrementally): Change type of FAILED_REASON
	to cgraph_inline_failed_t type.  Call cgraph_inline_failed_string
	for text output.
	* tree-inline.c (expand_call_inline): Change type of REASON
	to cgraph_inline_failed_t.  Replace reason strings with enums.
	Call cgraph_inline_failed_string for text output.
	* Makefile.in (CGRAPH_H): Add cif-code.def to dependencies.
	(cgraph.o): Ditto.

2009-03-28  Jan Hubicka  <jh@suse.cz>

	* cgraph.c (cgraph_node, cgraph_remove_node, dump_cgraph_node,
	cgraph_clone_node): Remove master clone handling.
	(cgraph_is_master_clone, cgraph_master_clone): Remove.
	* cgraph.h (master_clone): Remove.
	(cgraph_is_master_clone, cgraph_master_clone): Remove.
	* ipa-type-escape.c (type_escape_execute): Remove use of master clone.
	(tree-ssa-structalias.c (ipa_pta_execute): Likewise.

2009-03-28  Jan Hubicka  <jh@suse.cz>

	* cgraph.c (cgraph_function_body_availability): Functions declared
	inline are always safe to assume that it is not going to be replaced.

2009-03-28  Richard Guenther  <rguenther@suse.de>

	PR tree-optimization/38513
	* tree-ssa-pre.c (eliminate): Remove redundant stores.
	* tree-ssa-sccvn.c (copy_reference_ops_from_ref): Handle
	EXC_PTR_EXPR and FILTER_EXPR.
	(get_ref_from_reference_ops): Likewise.

2009-03-28  Richard Guenther  <rguenther@suse.de>

	PR tree-optimization/38968
	* tree-vect-analyze.c (vect_compute_data_ref_alignment):
	Use FLOOR_MOD_EXPR to compute misalignment.

2009-03-28  Richard Guenther  <rguenther@suse.de>

	PR tree-optimization/37795
	* tree.h (combine_comparisons): Declare.
	* fold-const.c (combine_comparisons): Export.
	* tree-ssa-ifcombine.c (ifcombine_ifandif): Optimize two successive
	comparisons.
	(ifcombine_iforif): Use combine_comparisons.

2009-03-28  Jan Hubicka  <jh@suse.cz>

	* tree-eh.c (inlinable_call_p): New function.
	(make_eh_edges): Use it.
	(verify_eh_edges): Use it.
	(stmt_can_throw_external, stmt_can_throw_internal): Use it.
	* except.c (reachable_next_level): Add inlinable_function argument
	(sjlj_find_directly_reachable_regions): Update.
	(add_reachable_handler): Do not set saw_any_handlers.
	(reachable_next_level): Handle MUST_NOT_THROW more curefully.
	(foreach_reachable_handler, can_throw_internal_1, can_throw_external_1):
	Add new inlinable call parameter.
	(can_throw_internal, can_throw_external): Update.
	* except.h (can_throw_internal_1, can_throw_external_1,
	foreach_reachable_handler): Update declaration.

2009-03-28  Joseph Myers  <joseph@codesourcery.com>

	* config/arm/t-arm-coff, config/h8300/coff.h,
	config/i386/i386-aout.h, config/i386/i386-coff.h,
	config/libgloss.h, config/m68k/coff.h, config/m68k/m68k-aout.h,
	config/pdp11/2bsd.h, config/rs6000/aix41.h,
	config/rs6000/aix41.opt, config/rs6000/t-newas, config/sh/coff.h,
	fix-header.c, fixproto, gen-protos.c, protoize.c, scan-decls.c,
	scan-types.sh, scan.c, scan.h, sort-protos, sys-protos.h,
	sys-types.h: Remove.
	* Makefile.in: Remove protoize and fixproto support and references
	in comments.
	(SYSCALLS.c.X-warn, TARGET_GETGROUPS_T, STMP_FIXPROTO,
	PROTOIZE_INSTALL_NAME, UNPROTOIZE_INSTALL_NAME, FIXPROTO_DEFINES):
	Remove.
	(ALL_HOST_OBJS): Remove $(PROTO_OBJS).
	(MOSTLYCLEANFILES): Remove protoize$(exeext) and
	unprotoize$(exeext).
	(rest.encap): Don't depend on $(STMP_FIXPROTO)
	(.PHONY): Don't depend on proto.
	(libgcc-support): Don't depend on $(STMP_FIXPROTO).
	(proto, PROTO_OBJS, protoize$(exeext), unprotoize$(exeext),
	protoize.o, unprotoize.o, SYSCALLS.c.X, test-protoize-simple,
	deduced.h, GEN_PROTOS_OBJS, build/gen-protos$(build_exeext),
	build/gen-protos.o, build/scan.o, xsys-protos.h,
	build/fix-header$(build_exeext), build/fix-header.o,
	build/scan-decls.o, fixhdr.ready, stmp-fixproto,
	stmp-install-fixproto): Remove.
	(mostlyclean): Don't remove xsys-protos.hT, SYSCALLS.c.X,
	SYSCALLS.c or fixproto files.
	(install-common): Don't install protoize.
	(install-headers-tar, install-headers-cpio, install-headers-cp):
	Don't depend on $(STMP_FIXPROTO).
	(install-mkheaders): Don't depend on $(STMP_FIXPROTO).  Don't
	install fixproto files or write out fixproto settings.
	(uninstall): Don't uninstall protoize.
	* config.gcc (use_fixproto): Remove.
	(arm-*-coff*, armel-*-coff*, h8300-*-*, i[34567]86-*-aout*,
	i[34567]86-*-coff*, m68k-*-aout*, m68k-*-coff*, pdp11-*-bsd,
	rs6000-ibm-aix4.[12]*, powerpc-ibm-aix4.[12]*, sh-*-*): Remove.
	* config/m32r/t-linux (STMP_FIXPROTO): Remove.
	* config/m68k/m68k.c: Remove M68K_TARGET_COFF-conditional code.
	* config/mips/t-iris (FIXPROTO_DEFINES): Remove.
	* config/pa/t-pa-hpux (FIXPROTO_DEFINES): Remove.
	* config/pdp11/pdp11.c: Remove TWO_BSD-conditional code.
	* config/t-svr4 (FIXPROTO_DEFINES): Remove.
	* config/t-vxworks (STMP_FIXPROTO): Remove.
	* configure.ac (AC_TYPE_GETGROUPS, TARGET_GETGROUPS_T,
	STMP_FIXPROTO): Remove.
	* config.in, configure: Regenerate.
	* crtstuff.c (gid_t, uid_t): Don't undefine.
	* doc/install.texi: Change m68k-coff to m68k-elf in example.
	(arm-*-coff, arm-*-aout: Remove target entries.
	(*-ibm-aix*): Mention removal of support for AIX 4.2 and older.
	Remove mention of AIX 4.1.
	(m68k-*-*): Remove mention of m68k-*-aout and m68k-*-coff*.
	* doc/invoke.texi (Running Protoize): Remove.
	* doc/trouble.texi (Actual Bugs): Remove mention of fixproto.
	(Protoize Caveats): Remove.
	* tsystem.h: Update comments on headers assumed to exist.

2009-03-27  Vladimir Makarov  <vmakarov@redhat.com>

	* genautomata.c: Add a new year to the copyright.  Add a new
	reference.
	(struct insn_reserv_decl): Add comments for member bypass_list.
	(find_bypass): Remove.
	(insert_bypass): New.
	(process_decls): Use insert_bypass.
	(output_internal_insn_latency_func): Output all bypasses with the
	same input insn in one switch case.

	* rtl.def (define_bypass): Describe bypass choice.
	* doc/md.texi (define_bypass): Ditto.

2009-03-27  Richard Guenther  <rguenther@suse.de>

	* gimplify.c (mark_addressable): Export.
	* tree-flow.h (mark_addressable): Declare.
	* tree-ssa-loop-manip.c (create_iv): Mark the base addressable.
	* tree-ssa.c (verify_phi_args): Verify that address taken
	variables have TREE_ADDRESSABLE set.

2009-03-27  Richard Guenther  <rguenther@suse.de>

	* fold-const.c (build_fold_addr_expr_with_type_1): Rename back to ...
	(build_fold_addr_expr_with_type): ... this.  Remove in_fold handling.
	Do not mark decls TREE_ADDRESSABLE.
	(build_fold_addr_expr): Adjust.
	(fold_addr_expr): Remove.
	(fold_unary): Use build_fold_addr_expr.
	(fold_comparison): Likewise.
	(split_address_to_core_and_offset): Likewise.
	* coverage.c (tree_coverage_counter_addr): Mark the array decl
	TREE_ADDRESSABLE.
	* gimplify.c (mark_addressable): Do not exclude RESULT_DECLs.
	(gimplify_modify_expr_to_memcpy): Mark source and destination
	addressable.
	* omp-low.c (create_omp_child_function): Mark the object decl
	TREE_ADDRESSABLE.
	(lower_rec_input_clauses): Mark the var we take the address of
	TREE_ADDRESSABLE.
	(lower_omp_taskreg): Mark the sender decl TREE_ADDRESSABLE.

2009-03-27  H.J. Lu  <hongjiu.lu@intel.com>

	PR middle-end/39315
	* cfgexpand.c (expand_one_stack_var_at): Change alignment
	limit to MAX_SUPPORTED_STACK_ALIGNMENT.

2009-03-27  Richard Guenther  <rguenther@suse.de>

	PR tree-optimization/39120
	* tree-ssa-structalias.c (handle_rhs_call): Fill out return
	constraints.
	(handle_lhs_call): Process return constraints.  Add escape
	constraints if necessary.
	(handle_const_call): Fill out return constraints.  Make nested
	case more precise.  Avoid consttmp if possible.
	(handle_pure_call): Fill out return constraints.  Avoid
	callused if possible.
	(find_func_aliases): Simplify call handling.

2009-03-27  Richard Guenther  <rguenther@suse.de>

	PR tree-optimization/39120
	* tree-ssa-structalias.c (do_sd_constraint): Do not use CALLUSED
	as a representative.
	(solve_graph): Do propagate CALLUSED.
	(handle_pure_call): Use a scalar constraint from CALLUSED for
	the return value.
	(find_what_p_points_to): CALLUSED shall not appear in poins-to
	solutions.

2009-03-27  H.J. Lu  <hongjiu.lu@intel.com>

	PR c/39323
	* c-common.c (handle_aligned_attribute): Properly check alignment
	overflow.  Use (1U << i) instead of (1 << i).

	* emit-rtl.c (get_mem_align_offset): Use "unsigned int" for align.

	* expr.h (get_mem_align_offset): Updated.

	* tree.h (tree_decl_common): Change align to "unsigned int" and
	move it before pointer_alias_set.

2009-03-27  H.J. Lu  <hongjiu.lu@intel.com>
	    Jakub Jelinek  <jakub@redhat.com>

	PR target/38034
	* config/ia64/sync.md (cmpxchg_rel_<mode>): Replace input
	gr_register_operand with gr_reg_or_0_operand.
	(cmpxchg_rel_di): Likewise.
	(sync_lock_test_and_set<mode>): Likewise.

2009-03-27  H.J. Lu  <hongjiu.lu@intel.com>

	* jump.c (rtx_renumbered_equal_p): Use subreg_get_info.
	(true_regnum): Likewise.

	* rtlanal.c (subreg_info): Moved to ...
	* rtl.h (subreg_info): Here.  New.
	(subreg_get_info): New.

	* rtlanal.c (subreg_get_info): Make it extern.

2009-03-27  H.J. Lu  <hongjiu.lu@intel.com>

	PR target/39472
	* config/i386/i386.c (ix86_abi): New.
	(override_options): Handle -mabi=.
	(ix86_function_arg_regno_p): Replace DEFAULT_ABI with ix86_abi.
	(ix86_call_abi_override): Likewise.
	(init_cumulative_args): Likewise.
	(function_arg_advance): Likewise.
	(function_arg_64): Likewise.
	(function_arg): Likewise.
	(ix86_pass_by_reference): Likewise.
	(ix86_function_value_regno_p): Likewise.
	(ix86_build_builtin_va_list_abi): Likewise.
	(setup_incoming_varargs_64): Likewise.
	(is_va_list_char_pointer): Likewise.
	(ix86_init_machine_status): Likewise.
	(ix86_reg_parm_stack_space): Use enum calling_abi on call_abi.
	(ix86_function_type_abi): Return enum calling_abi.  Rewrite
	for 64bit.  Replace DEFAULT_ABI with ix86_abi.
	(ix86_function_abi): Make it static and return enum calling_abi.
	(ix86_cfun_abi): Return enum calling_abi.  Replace DEFAULT_ABI
	with ix86_abi.
	(ix86_fn_abi_va_list): Updated.

	* config/i386/i386.h (ix86_abi): New.
	(STACK_BOUNDARY): Replace DEFAULT_ABI with ix86_abi.
	(CONDITIONAL_REGISTER_USAGE): Likewise.
	(CUMULATIVE_ARGS): Change call_abi type to enum calling_abi.
	(machine_function): Likewise.

	* config/i386/i386.md (untyped_call): Replace DEFAULT_ABI
	with ix86_abi.
	* config/i386/cygming.h (TARGET_64BIT_MS_ABI): Likewise.
	(STACK_BOUNDARY): Likewise.
	* config/i386/mingw32.h (EXTRA_OS_CPP_BUILTINS): Likewise.

	* config/i386/i386.opt (mabi=): New.

	* config/i386/i386-protos.h (ix86_cfun_abi): Changed to
	return enum calling_abi.
	(ix86_function_type_abi): Likewise.
	(ix86_function_abi): Removed.

	* doc/invoke.texi: Document -mabi= option for x86.

2009-03-27  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>

	* builtins.c (real_dconstp): Delete.
	(fold_builtin_logarithm): Remove inaccurate log(e) special case.

2009-03-27  Dodji Seketeli  <dodji@redhat.com>
	    Jakub Jelinek  <jakub@redhat.com>

	PR debug/37959
	* dwarf2out.c (dwarf_attr_name): Handle DW_AT_explicit attribute.
	(gen_subprogram_die): When a function is explicit, generate the
	DW_AT_explicit attribute.
	* langhooks.h (struct lang_hooks_for_decls): Add
	function_decl_explicit_p langhook.
	* langhooks-def.h (LANG_HOOKS_FUNCTION_DECL_EXPLICIT_P): Define.
	(LANG_HOOKS_DECLS): Add LANG_HOOKS_FUNCTION_DECL_EXPLICIT_P.

2009-03-27  Jakub Jelinek  <jakub@redhat.com>

	* builtins.c (fold_builtin_memory_op): Optimize memmove
	into memcpy if we can prove source and destination don't overlap.

	* tree-inline.c: Include gt-tree-inline.h.
	(clone_fn_id_num): New variable.
	(clone_function_name): New function.
	(tree_function_versioning): Use it.
	* Makefile.in (GTFILES): Add tree-inline.c.

2009-03-27  Mark Mitchell  <mark@codesourcery.com>

	* BASE-VER: Change to 4.5.0.

2009-03-27  Xinliang David Li  <davidxl@google.com>

	PR tree-optimization/39557
	* tree-ssa.c (warn_uninitialized_vars): free postdom info.

2009-03-27  Xinliang David Li  <davidxl@google.com>

	PR tree-optimization/39548
	* tree-ssa-copy.c (copy_prop_visit_phi_node): Add copy 
	candidate check.

2009-03-27  H.J. Lu  <hongjiu.lu@intel.com>

	* c-common.c (pointer_int_sum): Use %wd on return from
	tree_low_cst.

2009-03-27  H.J. Lu  <hongjiu.lu@intel.com>

	* c-common.c (pointer_int_sum): Use HOST_WIDE_INT_PRINT_DEC
	on return from tree_low_cst.

2009-03-27  Andrew Pinski  <andrew_pinski@playstation.sony.com>

	PR c++/36799
	* ginclude/stdarg.h (va_copy): Define also for
	__GXX_EXPERIMENTAL_CXX0X__.

2009-03-27  Manuel Lopez-Ibanez  <manu@gcc.gnu.org>

	PR c++/35652
	* builtins.h (c_strlen): Do not warn here.
	* c-typeck.c (build_binary_op): Adjust calls to pointer_int_sum.
	* c-common.c (pointer_int_sum): Take an explicit location.
	Warn about offsets out of bounds.
	* c-common.h (pointer_int_sum): Adjust declaration.

2009-03-26  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>

	* doc/invoke.texi (i386 and x86-64 Windows Options): Fix texinfo
	markup glitch.

2009-03-26  Jakub Jelinek  <jakub@redhat.com>

	PR c++/39554
	* opts.c (warn_if_disallowed_function_p): Don't assume
	get_callee_fndecl must return non-NULL.

2009-03-26  Vladimir Makarov  <vmakarov@redhat.com>

	PR rtl-optimization/39522
	* reload1.c (reload_as_needed): Invalidate reg_last_reload_reg too
	when reg_reloaded_valid is set.

2009-03-26  Ulrich Weigand  <Ulrich.Weigand@de.ibm.com>

	* config/spu/divv2df3.c: New file.
	* config/spu/t-spu-elf (LIB2FUNCS_STATIC_EXTRA): Add it.
	(DPBIT_FUNCS): Filter out _div_df.

2009-03-26  Bernd Schmidt  <bernd.schmidt@analog.com>

	* config/bfin/bfin.c (bfin_optimize_loop): If the LSETUP goes before
	a jump insn, count that jump in the distance to the loop start.

2009-03-25  Kaz Kojima  <kkojima@gcc.gnu.org>

	PR target/39523
	* config/sh/sh.c (calc_live_regs): Fix condition for global
	registers except PIC_OFFSET_TABLE_REGNUM.

2009-03-25  Kai Tietz  <kai.tietz@onevision.com>

	PR/39518
	* doc/invoke.texi (-mconsole): New.
	(-mcygwin): New.
	(-mno-cygwin): New.
	(-mdll): New.
	(-mnop-fun-dllimport): New.
	(-mthread): New.
	(-mwin32): New.
	(-mwindows): New.
	(sub section "i386 and x86-64 Windows Options"): New.

2009-03-25  Ralf Corsépius <ralf.corsepius@rtems.org>

	* config/arm/rtems-elf.h: Remove LINK_GCC_C_SEQUENCE_SPEC.
	* config/rs6000/t-rtems: Remove MULTILIB_EXTRA_OPTS.

2009-03-25  Richard Guenther  <rguenther@suse.de>

	PR middle-end/39497
	* Makefile.in (dfp.o-warn): Use -fno-strict-aliasing instead
	of -Wno-error.

2009-03-25  Andrey Belevantsev  <abel@ispras.ru>

	* config/ia64/ia64.c (ia64_set_sched_flags): Zero spec_info->mask when
	neither of haifa/selective schedulers are working.

2009-03-25  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>

	* doc/invoke.texi (Debugging Options): Fix description of
	-fno-merge-debug-strings.

2009-03-24  Hans-Peter Nilsson  <hp@axis.com>

	* config/cris/libgcc.ver: New version-script.
	* config/cris/t-linux (SHLIB_MAPFILES): Use it.

	* configure.ac <GAS features, nop mnemonic>: Add pattern
	crisv32-*-* for "nop".
	<GAS features, Thread-local storage>: Add item for CRIS and CRIS v32.
	* configure: Regenerate.

2009-03-24  Ira Rosen  <irar@il.ibm.com>

	PR tree-optimization/39529
	* tree-vect-transform.c (vect_create_data_ref_ptr): Call
	mark_sym_for_renaming for the tag copied to the new vector
	pointer.

2009-03-24  Arthur Loiret  <aloiret@debian.org>

	* config.host (alpha*-*-linux*): Use driver-alpha.o and alpha/x-alpha.
	* config/alpha/linux.h (host_detect_local_cpu): Declare, add to
	EXTRA_SPEC_FUNCTIONS.
	(MCPU_MTUNE_NATIVE_SPECS, DRIVER_SELF_SPECS): New macros.
	* config/alpha/driver-alpha.c, config/alpha/x-alpha: New.
	* doc/invoke.texi (DEC Alpha Options): Document 'native' value for
	-march and -mtune options.

2009-03-24  Ralf Corsépius <ralf.corsepius@rtems.org>

	* config/m68k/t-rtems: Add m5329 multilib.

2009-03-24  Dodji Seketeli  <dodji@redhat.com>
	    Jakub Jelinek  <jakub@redhat.com>

	PR debug/39524
	* dwarf2out.c (gen_variable_die): Avoid adding duplicate declaration
	nodes.

2009-03-23  Jakub Jelinek  <jakub@redhat.com>

	PR c/39495
	* c-parser.c (c_parser_omp_for_loop): Call c_parser_binary_expression
	instead of c_parser_expression_conv, if original_code isn't one of the
	4 allowed comparison codes, fail.

2009-03-23  Richard Guenther  <rguenther@suse.de>

	* cgraph.h (struct cgraph_node): Reorder fields for 64-bit hosts.
	* tree.h (struct tree_type): Likewise.
	* reload.h (struct insn_chain): Likewise.
	* dwarf2out.c (struct dw_loc_descr_struct): Likewise.
	* function.h (struct function): Likewise.
	* tree-ssa-structalias.c (struct equiv_class_label): Likewise.

2009-03-23  Jakub Jelinek  <jakub@redhat.com>

	PR tree-optimization/39516
	* lambda-code.c (perfect_nestify): Fix type of the uboundvar variable.

2009-03-23 Bingfeng Mei  <bmei@broadcom.com>

	* config.gcc (need_64bit_hwint): Make clear that need_64bit_hwint 
	should be set true if BITS_PER_WORD of target is bigger than 32

2009-03-22  Hans-Peter Nilsson  <hp@axis.com>

	* config/cris/linux.h (CRIS_LINK_SUBTARGET_SPEC):
	Translate -B-options to -rpath-link.  Correct existing
	rpath-link and conditionalize on !nostdlib.

2009-03-22  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>

	* doc/extend.texi (Function Attributes, Variable Attributes):
	Fix typos.
	* doc/invoke.texi (Debugging Options, Optimize Options)
	(i386 and x86-64 Options, MCore Options): Likewise.

2009-03-20  Jakub Jelinek  <jakub@redhat.com>

	PR debug/37890
	* dwarf2out.c (gen_namespace_die): Add context_die argument and use
	it for block local namespace aliases.
	(gen_decl_die): Pass context_die to gen_namespace_die.

2009-03-19  Jakub Jelinek  <jakub@redhat.com>

	PR c/39495
	* c-omp.c (c_finish_omp_for): Allow NE_EXPR with TREE_TYPE (decl)'s
	minimum or maximum value.

2009-03-19  Alexandre Oliva  <aoliva@redhat.com>

	* reginfo.c (globalize_reg): Recompute derived reg sets.

2009-03-19  Ozkan Sezer <sezeroz@gmail.com>

	PR target/39063
	* libgcc2.c (mprotect): Do not use signed arguments for
	VirtualProtect, use DWORD arguments.  Also fix the 'may
	be used uninitialized' warning for the np variable.

2009-03-19  Jakub Jelinek  <jakub@redhat.com>

	PR target/39496
	* config/i386/i386.c (ix86_function_regparm): Don't optimize local
	functions using regparm calling conventions when not optimizing.
	(ix86_function_sseregparm): Similarly for sseregparm calling
	conventions.

2009-03-19  Li Feng  <nemokingdom@gmail.com>

	PR middle-end/39500
	* tree-data-ref.c (analyze_subscript_affine_affine): There is no
	dependence if the first conflict is after niter iterations.

2009-03-19  Hans-Peter Nilsson  <hp@axis.com>

	PR middle-end/38609
	* config/cris/cris.h (FRAME_POINTER_REQUIRED): Force for all
	functions with dynamic stack-pointer adjustments.

2009-03-19  Ben Elliston  <bje@au.ibm.com>

	* doc/invoke.texi (RS/6000 and PowerPC Options): Fix -msdata-data
	option; change to -msdata=data.

2009-03-18  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>

	* c.opt: Unify help texts for -Wdeprecated, -Wsystem-headers,
	and -fopenmp.

2009-03-18  Eric Botcazou  <ebotcazou@adacore.com>

	PR target/35180
	* config/sparc/sparc.md (do_builtin_setjmp_setup): Prettify asm output.

2009-03-18  Sandra Loosemore  <sandra@codesourcery.com>

	* doc/invoke.texi (Code Gen Options): Expand discussion of
	-fno-common.

2009-03-18  Jakub Jelinek  <jakub@redhat.com>

	* dse.c (struct group_info): Reorder fields for 64-bit hosts.
	* matrix-reorg.c (struct matrix_info): Likewise.
	* tree-ssa-loop-ivopts.c (struct ivopts_data): Likewise.
	* rtl.h (struct mem_attrs): Likewise.
	* df.h (struct df): Likewise.
	* tree-data-ref.h (struct data_dependence_relation): Likewise.
	* ira-int.h (struct ira_allocno): Likewise.
	* df-scan.c (struct df_collection_rec): Likewise.
	* ira.c (struct equivalence): Likewise.
	* function.c (struct temp_slot): Likewise.
	* cfgloop.h (struct loop): Likewise.

	PR debug/39485
	* function.c (use_register_for_decl): When not optimizing, disregard
	register keyword for variables with types containing methods.

2009-03-18  Sebastian Pop  <sebastian.pop@amd.com>

	PR middle-end/39447
	* graphite.c (exclude_component_ref): Renamed contains_component_ref_p.
	(is_simple_operand): Call contains_component_ref_p before calling data
	reference analysis that would fail on COMPONENT_REFs.

	* tree-vrp.c (search_for_addr_array): Fix formatting.

2009-03-18  Richard Guenther  <rguenther@suse.de>

	* tree-vect-transform.c (vect_loop_versioning): Fold the
	generated comparisons.
	* tree-vectorizer.c (set_prologue_iterations): Likewise.
	(slpeel_tree_peel_loop_to_edge): Likewise.

2009-03-17  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>

	PR middle-end/37805
	* opts.c (print_specific_help): In addition to `undocumented',
	accept `separate' and `joined' flags if passed alone.  Describe
	output by the first matched one of those.
	(common_handle_option): Skip over empty strings.
	* gcc.c (display_help): Fix help string for `--help='.
	* doc/invoke.texi (Option Summary, Overall Options): With
	`--help=', classes and qualifiers can both be repeated, but
	only the latter can be negated.  One should not pass only
	negated qualifiers.  Fix markup and examples.

	Revert
	2008-10-14  Jakub Jelinek  <jakub@redhat.com>
	PR middle-end/37805
	* opts.c (common_handle_option): Don't ICE on -fhelp=joined
	and -fhelp=separate.

2009-03-17  Jing Yu  <jingyu@google.com>

	PR middle-end/39378
	* function.h (struct rtl_data): Move is_thunk from here...
	(struct function): ...to here.
	* cp/method.c (use_thunk): Change is_thunk from crtl to cfun.
	* varasm.c (assemble_start_function): Change is_thunk from crtl to
	cfun.
	* config/alpha/alpha.c (alpha_sa_mask): Change is_thunk from crtl to
	cfun.
	(alpha_does_function_need_gp, alpha_start_function): Likewise.
	(alpha_output_function_end_prologue): Likewise.
	(alpha_end_function, alpha_output_mi_thunk_osf): Likewise.
	* config/rs6000/rs6000.c (rs6000_ra_ever_killed): Likewise.
	(rs6000_output_function_epilogue): Likewise.
	* config/arm/arm.h (ARM_DECLARE_FUNCTION_NAME): Likewise.

2009-03-17  Uros Bizjak  <ubizjak@gmail.com>

	PR target/39482
	* config/i386/i386.md (*truncdfsf_mixed): Avoid combining registers
	from different units in a single alternative.
	(*truncdfsf_i387): Ditto.
	(*truncxfsf2_mixed): Ditto.
	(*truncxfdf2_mixed): Ditto.

2009-03-17  Jakub Jelinek  <jakub@redhat.com>

	* dwarf2out.c (dwarf2out_imported_module_or_decl_1): Allow
	non-NAMESPACE_DECL IMPORTED_DECL_ASSOCIATED_DECL.

	PR debug/39474
	* tree-ssa-live.c (remove_unused_locals): Don't remove local
	unused non-artificial variables when not optimizing.

	PR debug/39471
	* dwarf2out.c (dwarf2out_imported_module_or_decl_1): Emit
	DW_TAG_imported_module even if decl is IMPORTED_DECL with
	NAMESPACE_DECL in its DECL_INITIAL.

	PR middle-end/39443
	* optabs.c (set_user_assembler_libfunc): New function.
	* expr.h (set_user_assembler_libfunc): New prototype.
	* c-common.c: Include libfuncs.h.
	(set_builtin_user_assembler_name): Call set_user_assembler_libfunc
	for memcmp, memset, memcpy, memmove and abort.
	* Makefile.in (c-common.o): Depend on libfuncs.h.

	PR debug/39412
	* dwarf2out.c (gen_inlined_enumeration_type_die,
	gen_inlined_structure_type_die, gen_inlined_union_type_die,
	gen_tagged_type_instantiation_die): Removed.
	(gen_decl_die): For TYPE_DECL_IS_STUB with non-NULL decl_origin
	do nothing.

2009-03-17  Janis Johnson  <janis187@us.ibm.com>

	PR testsuite/38526
	* Makefile.in (site.exp): Rename TEST_GCC_EXEC_PREFIX and comment
	its use.
	(check-%): Don't set GCC_EXEC_PREFIX when invoking runtest.
	(check-parallel-%): Ditto.
	(check-consistency): Ditto.

2009-03-17  Kai Tietz  <kai.tietz@onevision.com>

	* ipa-struct-reorg.c (create_general_new_stmt): Initialize
	local variable rhs by NULL_TREE.

2009-03-17  H.J. Lu  <hongjiu.lu@intel.com>

	PR target/39477
	* doc/extend.texi: Correct register behavior for regparm on Intel 386.

2009-03-17  H.J. Lu  <hongjiu.lu@intel.com>

	PR target/39476
	* config/i386/i386.c (ix86_function_regparm): Rewrite for 64bit.

2009-03-17  H.J. Lu  <hongjiu.lu@intel.com>

	PR target/39473
	* config/i386/i386.c (ix86_expand_call): Check extra clobbers
	for ms->sysv ABI calls only in 64bit mode.

	* config/i386/i386.md (untyped_call): Support 32bit.

2009-03-16  H.J. Lu  <hongjiu.lu@intel.com>

	* doc/extend.texi: Replace x86_65 with x86_64.

2009-03-16  Jakub Jelinek  <jakub@redhat.com>

	PR tree-optimization/39455
	* tree-ssa-loop-niter.c (number_of_iterations_lt_to_ne): Fix types
	mismatches for POINTER_TYPE_P (type).
	(number_of_iterations_le): Likewise.

2009-03-16  Hariharan Sandanagobalane <hariharan@picochip.com>

	* config/picochip/picochip.c: Removed profiling support.
	* config/picochip/picochip.md: Removed profiling instruction.
	* config/picochip/picochip.h: Removed profiling builtin.

2009-03-16  Joseph Myers  <joseph@codesourcery.com>

	* doc/install.texi (--with-host-libstdcxx): Document.

2009-03-14  Anatoly Sokolov  <aesok@post.ru>

	PR target/34299
	* config/avr/avr.c (avr_handle_fndecl_attribute): Move code for
	generate a warning if the function name does not begin with
	"__vector" and the function has either the 'signal' or 'interrupt'
	attribute, from here to ...
	(avr_declare_function_name): ...here. New function.
	* config/avr/avr.h (ASM_DECLARE_FUNCTION_NAME): Redefine.
	* config/avr/avr-protos.h (avr_declare_function_name): Declare.

2009-03-14  Jakub Jelinek  <jakub@redhat.com>

	PR bootstrap/39454
	* cse.c (fold_rtx): Don't modify original const_arg1 when
	canonicalizing SHIFT_COUNT_TRUNCATED shift count, do it on a
	separate variable instead.
	* rtlanal.c (nonzero_bits1) <case ASHIFTRT>: Don't assume anything
	from out of range shift counts.
	(num_sign_bit_copies1) <case ASHIFTRT, case ASHIFT>: Similarly.

2008-03-13  Catherine Moore  <clm@codesourcery.com>

	* gcc/config/i386/x-mingw32 (host-mingw32.o): Replace
	diagnostic.h with $(DIAGNOSTIC_H).

2008-03-12  Jakub Jelinek  <jakub@redhat.com>

	PR target/39431
	* config/i386/predicates.md (cmpxchg8b_pic_memory_operand): New
	predicate.
	* config/i386/sync.md (sync_compare_and_swap<mode>,
	sync_compare_and_swap_cc<mode>): For DImode with -m32 -fpic check
	if operands[1] is cmpxchg8b_pic_memory_operand, if not force address
	into a register.
	(sync_double_compare_and_swapdi_pic,
	sync_double_compare_and_swap_ccdi_pic): Require operand 1 to be
	cmpxchg8b_pic_memory_operand instead of just memory_operand.

2009-03-12  H.J. Lu  <hongjiu.lu@intel.com>

	PR target/39445
	* config/i386/i386.c (ix86_expand_push): Don't set memory alignment.

2009-03-12  H.J. Lu  <hongjiu.lu@intel.com>

	PR target/39327
	* config/i386/sse.md (avx_addsubv8sf3): Correct item bits.
	(avx_addsubv4df3): Likewise.
	(*avx_addsubv4sf3): Likewise.
	(sse3_addsubv4sf3): Likewise.

2009-03-12  H.J. Lu  <hongjiu.lu@intel.com>

	PR target/38824
	* config/i386/i386.md: Compare REGNO on the new peephole2 patterns.

2009-03-12  Vladimir Makarov  <vmakarov@redhat.com>

	PR debug/39432
	* ira-int.h (struct allocno): Fix comment for calls_crossed_num.
	* ira-conflicts.c (ira_build_conflicts): Prohibit call used
	registers for allocnos created from user-defined variables.

2009-03-11  Ulrich Weigand  <Ulrich.Weigand@de.ibm.com>

	PR target/39181
	* config/spu/spu.c (spu_expand_mov): Handle invalid subregs
	of non-integer mode as well.

2009-03-11  Adam Nemet  <anemet@caviumnetworks.com>

	* gimplify.c (gimplify_call_expr): Don't set CALL_CANNOT_INLINE_P
	for functions for which the parameter types are unknown.

2009-03-11  Jakub Jelinek  <jakub@redhat.com>

	PR target/39137
	* cfgexpand.c (get_decl_align_unit): Use LOCAL_DECL_ALIGNMENT macro.
	* defaults.h (LOCAL_DECL_ALIGNMENT): Define if not yet defined.
	* config/i386/i386.h (LOCAL_DECL_ALIGNMENT): Define.
	* config/i386/i386.c (ix86_local_alignment): For
	-m32 -mpreferred-stack-boundary=2 use 32-bit alignment for
	long long variables on the stack to avoid dynamic realignment.
	Allow the first argument to be a decl rather than type.
	* doc/tm.texi (LOCAL_DECL_ALIGNMENT): Document.

2009-03-11  Nick Clifton  <nickc@redhat.com>

	PR target/5362
	* config/mcore/mcore.opt: Remove deprecated m4align and m8align
	options.
	Add description to mno-lsim option.
	* config/mcore/mcore.h: Remove comment about deprecated m4align
	option.
	(TARGET_DEFAULT): Remove deprecated MASK_M8ALIGN.
	* doc/invoke.texi: Add description of mno-lsim and
	mstack-increment options.

	* config/fr30/fr30.opt: Document the -mno-lsim option.
	* doc/invoke.texi: Add descriptions of the FR30's -msmall-model
	and -mno-lsim options.

2009-03-11  Ulrich Weigand  <Ulrich.Weigand@de.ibm.com>

	* fold-const.c (fold_comparison): Only call fold_inf_compare
	if the mode supports infinities.

2009-03-11  Jason Merrill  <jason@redhat.com>

	PR debug/39086
	* tree-nrv.c (tree_nrv): Don't do this optimization if the front
	end already did.  Notice GIMPLE_CALL modifications of the result.
	Don't copy debug information from an ignored decl or a decl from
	another function.

2009-03-10  Richard Guenther  <rguenther@suse.de>
	    Nathan Froyd  <froydnj@codesourcery.com>

	PR middle-end/37850
	* libgcc2.c (__mulMODE3): Use explicit assignments to form the result.
	(__divMODE3): Likewise.

2009-03-09  Jakub Jelinek  <jakub@redhat.com>

	PR tree-optimization/39394
	* gimplify.c (gimplify_type_sizes): Gimplify DECL_SIZE and
	DECL_SIZE_UNIT of variable length FIELD_DECLs.

2009-03-09  Andreas Krebbel  <Andreas.Krebbel@de.ibm.com>

	* recog.c (verfiy_changes): Disallow renaming of hard regs in
	inline asms for register asm ("") declarations.

2009-03-09  Eric Botcazou  <ebotcazou@adacore.com>

	* fold-const.c (fold_unary): Fix comment.

2009-03-07  Jan Hubicka  <jh@suse.cz>

	PR target/39361
	* tree-inline.c (setup_one_parameter): Do replacement of const
	argument by constant in SSA form.

2009-03-07  Ulrich Weigand  <Ulrich.Weigand@de.ibm.com>

	PR middle-end/38028
	* function.c (assign_parm_setup_stack): Use STACK_SLOT_ALIGNMENT to
	determine alignment passed to assign_stack_local.
	(assign_parms_unsplit_complex): Likewise.
	* except.c (sjlj_build_landing_pads): Likewise.

2009-03-06  Jakub Jelinek  <jakub@redhat.com>

	PR middle-end/39360
	* tree-flow.h (add_referenced_var): Return bool instead of void.
	* tree-dfa.c (add_referenced_var): Return result of
	referenced_var_check_and_insert call.
	* tree-inline.c (expand_call_inline): Call add_referenced_var instead
	of referenced_var_check_and_insert.

	PR debug/39372
	* dwarf2out.c (add_abstract_origin_attribute): Return origin_die.
	(gen_variable_die): Emit DW_AT_location on abstract static variable's
	DIE, don't emit it if abstract origin already has it.
	* tree-cfg.c (remove_useless_stmts_bind): GIMPLE_BINDs with any
	BLOCK_NONLOCALIZED_VARS in its gimple_bind_block aren't useless.

2009-03-06  Jan-Benedict Glaw  <jbglaw@lug-owl.de>

	* genpreds.c (needs_variable): Fix parentheses at variable name
	detection.
	(write_tm_constrs_h): Indent generated code.

2009-03-06  Ramana Radhakrishnan  <ramana.radhakrishnan@arm.com>

	* doc/extend.texi (Function Attributes): Add documentation
	for isr attributes.

2009-03-06  Jakub Jelinek  <jakub@redhat.com>

	PR debug/39387
	* dwarf2out.c (dwarf2out_imported_module_or_decl_1): For IMPORTED_DECL
	take locus from its DECL_SOURCE_LOCATION instead of input_location.

2009-03-05  Bernd Schmidt  <bernd.schmidt@analog.com>

	* config/bfin/bfin.c (bfin_discover_loop): When retrying fails, mark
	the loop as bad.

2009-03-05  Jakub Jelinek  <jakub@redhat.com>

	PR debug/39379
	* tree-cfg.c (remove_useless_stmts_bind): Don't remove GIMPLE_BINDs
	with blocks containing IMPORTED_DECLs in BLOCK_VARS.

2009-03-05  Uros Bizjak  <ubizjak@gmail.com>

	* config/i386/i386.md (R8_REG, R9_REG): New constants.
	* config/i386/i386.h (CONDITIONAL_REGISTER_USAGE): Use named
	constants instead of magic numbers.
	(HARD_REGNO_CALLER_SAVE_MODE): Ditto.
	(QI_REG_P): Ditto.
	* config/i386/i386.c (x86_64_int_parameter_registers): Ditto.
	(x86_64_ms_abi_int_parameter_registers): Ditto.
	(x86_64_int_return_registers): Ditto.
	(ix86_maybe_switch_abi): Ditto.
	(ix86_expand_call): Ditto for clobbered_registers array.
	(ix86_hard_regno_mode_ok): Ditto.
	(x86_extended_QIreg_mentioned_p): Ditto.

2009-03-05  J"orn Rennecke  <joern.rennecke@arc.com>

	PR tree-optimization/39349
	* cse.c (cse_insn): Fix loop to stop at VOIDmode.

	* combine.c (gen_lowpart_for_combine): Use omode when generating
	clobber.

2009-03-04  J"orn Rennecke  <joern.rennecke@arc.com>

	PR rtl-optimization/39235
	* loop-iv.c (get_simple_loop_desc): Use XCNEW.

2009-03-04  Zdenek Dvorak  <ook@ucw.cz>

	* graphite.c (nb_reductions_in_loop): Update simple_iv arguments.

2009-03-04  Richard Guenther  <rguenther@suse.de>

	PR tree-optimization/39362
	* tree-ssa-sccvn.c (visit_use): Stores and copies from SSA_NAMEs
	that occur in abnormal PHIs should be varying.

2009-03-04  Zdenek Dvorak  <ook@ucw.cz>

	* tree-scalar-evolution.c (analyze_scalar_evolution_in_loop):
	Extend comments.
	(simple_iv):  Take loop as an argument instead of statement.
	* tree-scalar-evolution.h (simple_iv): Declaration changed.
	* tree-ssa-loop-niter.c (number_of_iterations_exit): Update calls
	to simple_iv.
	* tree-ssa-loop-ivopts.c (determine_biv_step, find_givs_in_stmt_scev):
	Ditto.
	* tree-parloops.c (loop_parallel_p, canonicalize_loop_ivs): Ditto.
	* matrix-reorg.c (analyze_transpose): Ditto.
	* tree-data-ref.c (dr_analyze_innermost): Ditto.
	* tree-vect-analyze.c (vect_analyze_data_refs): Ditto.
	* tree-predcom.c (ref_at_iteration): Ditto.
	* tree-ssa-loop-prefetch.c (idx_analyze_ref): Ditto.

2009-03-04  Richard Guenther  <rguenther@suse.de>

	PR tree-optimization/39358
	* tree-ssa-structalias.c (do_sd_constraint): Fix check for
	escaped_id and callused_id.
	(solve_graph): Likewise.

2009-03-04  Richard Guenther  <rguenther@suse.de>

	PR tree-optimization/39339
	* tree-sra.c (try_instantiate_multiple_fields): Make it
	no longer ICE on the above.

2009-03-03  Joseph Myers  <joseph@codesourcery.com>

	* emit-rtl.c (adjust_address_1): Reduce offset to a signed value
	that fits within Pmode.

2009-03-03  Steve Ellcey  <sje@cup.hp.com>

	PR middle-end/10109
	* tm.texi (LIBCALL_VALUE): Update description.

2009-03-03  Steve Ellcey  <sje@cup.hp.com>

	PR middle-end/34443
	* doc/extend.texi (section): Update description.

2009-03-03  H.J. Lu  <hongjiu.lu@intel.com>

	PR middle-end/39345
	* tree-inline.c (remapped_type): New.
	(can_be_nonlocal): Call remapped_type instead of remap_type.

2009-03-03  Jakub Jelinek  <jakub@redhat.com>

	PR fortran/39354
	* gimplify.c (goa_stabilize_expr): Handle tcc_comparison,
	TRUTH_ANDIF_EXPR and TRUTH_ORIF_EXPR.

2009-03-03  Richard Guenther  <rguenther@suse.de>

	PR middle-end/39272
	* tree.c (tree_nonartificial_location): New function.
	* tree.h (tree_nonartificial_location): Declare.
	* builtins.c (expand_builtin_memory_chk): Provide location
	of the call location for artificial function pieces.
	(maybe_emit_chk_warning): Likewise.
	(maybe_emit_sprintf_chk_warning): Likewise.
	(maybe_emit_free_warning): Likewise.
	* expr.c (expand_expr_real_1): Likewise.

2009-03-03  Jakub Jelinek  <jakub@redhat.com>

	PR tree-optimization/39343
	* tree-ssa-ccp.c (maybe_fold_offset_to_address): Don't check if
	COMPONENT_REF t has ARRAY_TYPE.

2009-03-02  Sebastian Pop  <sebastian.pop@amd.com>

	PR middle-end/39335
	* tree-parloops.c (canonicalize_loop_ivs): Call fold_convert
	when the type precision of the induction variable should be
	larger than the type precision of nit.
	(gen_parallel_loop): Update use of canonicalize_loop_ivs.
	* graphite.c (graphite_loop_normal_form): Same.
	* tree-flow.h (canonicalize_loop_ivs): Update declaration.

2009-03-02  Uros Bizjak  <ubizjak@gmail.com>

	* config/i386/i386.md (ST?_REG, MM?_REG): New constants.
	(*call_1_rex64_ms_sysv): Use named constants instead of magic
	numbers to describe clobbered registers.
	(*call_value_0_rex64_ms_sysv): Ditto.
	* config/i386/mmx.md (mmx_emms): Ditto.
	(mmx_femms): Ditto.

2009-03-02  Richard Sandiford  <rdsandiford@googlemail.com>

	* config/mips/mips.c (mips_mdebug_abi_name): Fix the handling
	of ABI_64.

2009-03-02  Ulrich Weigand  <Ulrich.Weigand@de.ibm.com>

	* config/spu/spu.c (TARGET_SECTION_TYPE_FLAGS): Define.
	(spu_section_type_flags): New function.

2009-03-02  Uros Bizjak  <ubizjak@gmail.com>

	* config/i386/i386.h (CONDITIONAL_REGISTER_USAGE): Do not copy
	reg_class_contents of FLOAT_REGS into a temporary.

2009-03-02  Richard Guenther  <rguenther@suse.de>
	    Ira Rosen  <irar@il.ibm.com>

	PR tree-optimization/39318
	* tree-vect-transform.c (vectorizable_call): Transfer the EH region
	information to the vectorized statement.

2009-03-01  Uros Bizjak  <ubizjak@gmail.com>

	* config/i386/i386.h (CONDITIONAL_REGISTER_USAGE): Do not shadow "i"
	variable.  Use defined names instead of magic constants for REX SSE
	registers.

2009-03-01  Richard Guenther  <rguenther@suse.de>

	PR tree-optimization/39331
	* omp-low.c (lower_send_shared_vars): Do not receive new
	values for the reference of DECL_BY_REFERENCE parms or results.

2009-03-01  Jan Hubicka  <jh@suse.cz>

	PR debug/39267
	* tree.h (BLOCK_NONLOCALIZED_VARS, BLOCK_NUM_NONLOCALIZED_VARS,
	BLOCK_NONLOCALIZED_VAR): New macros.
	(tree_block): Add nonlocalized_vars.
	* dwarf2out.c (gen_formal_parameter_die, gen_variable_die,
	gen_decl_die): Add origin argument.  Allow generation of die with
	origin at hand only.
	(gen_member_die, gen_type_die_with_usage, force_decl_die,
	declare_in_namespace, gen_namescpace_die, dwarf2out_decl): Update use
	of gen_*.
	(gen_block_die): Fix checking for unused blocks.
	(process_scope_var): Break out from .... ; work with origins only.
	(decls_for_scope) ... here; process nonlocalized list.
	(dwarf2out_ignore_block): Look for nonlocalized vars.
	* tree-ssa-live.c (remove_unused_scope_block_p): Look for nonlocalized
	vars.
	(dump_scope_block): Dump them.
	* tree-inline.c (remap_decls): Handle nonlocalized vars.
	(remap_block): Likewise.
	(can_be_nonlocal): New predicate.
	(copy_bind_expr, copy_gimple_bind): Update use of remap_block.

2009-03-01  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>

	* configure: Regenerate.

2009-03-01  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>

	* optc-gen.awk: No need to duplicate option flags twice.
	Reuse help texts for duplicate options which do not have any.

	* gcc.c (display_help): Document --version.

	* gcc.c (main): If print_help_list and verbose_flag, ensure
	driver output comes before subprocess output.

	* optc-gen.awk: Assign all remaining fields to help string,
	space-separated, for multi-line help in *.opt.

	* doc/invoke.texi (Warning Options): -Wsync-nand is C/C++ only.
	-Wno-pedantic-ms-format is for MinGW targets only.

	* doc/options.texi (Option file format): Fix bad indentation,
	restoring dropped sentence.

2009-02-28  Jan Hubicka  <jh@suse.cz>

	* tree-inline.c (tree_function_versioning): Output debug info.

2009-02-28  Jan Hubicka  <jh@suse.cz>

	PR debug/39267
	* tree-inline.c (setup_one_parameter): Do not copy propagate
	arguments when not optimizing.

2009-02-28  H.J. Lu  <hongjiu.lu@intel.com>

	PR target/39327
	* config/i386/sse.md (avx_addsubv8sf3): Correct item bits.
	(avx_addsubv4df3): Likewise.
	(*avx_addsubv4sf3): Likewise.
	(sse3_addsubv4sf3): Likewise.
	(*avx_addsubv2df3): Likewise.
	(sse3_addsubv2df3): Likewise.
	(avx_unpckhps256): Correct item selectors.
	(avx_unpcklps256): Likewise.
	(avx_unpckhpd256): Likewise.
	(avx_unpcklpd256): Likewise.

2009-02-28  Jan Hubicka  <jh@suse.cz>

	* tree-inline.c (expand_call_inline): Avoid duplicate declarations of
	static vars.
	(copy_arguments_for_versioning): If var is declared don't declare it.
	(tree_function_versioning): First setup substitutions and then copy
	args.

2009-02-27  Jan Hubicka  <jh@suse.cz>

	PR debug/39267
	* cgraph.h (varpool_output_debug_info): Remove.
	* cgraphunit.c (varpool_output_debug_info): Remove.
	* dwarf2out.c (deferred_locations_struct): New struct
	(deferred_locations): New type.
	(deferred_locations_list): New static var.
	(deffer_location): New function.
	(gen_variable_die): Use it.
	(decls_for_scope): Output info on local static vars.
	(dwarf2out_finish): Process deferred locations.
	* varpool.c (varpool_output_debug_info): Remove.

2009-02-27  Jan Hubicka  <jh@suse.cz>

	PR debug/39267
	* tree.h (TREE_PROTECTED): Fix comment.
	(BLOCK_HANDLER_BLOCK): Remove.
	(struct tree_block): Remove handler_block add body_block.
	(inlined_function_outer_scope_p): New.
	(is_body_block): Remove.
	* dbxout.c (dbxout_block): Remove BLOCK_HANDLER_BLOCK.
	* dwarf2out.c (is_inlined_entry_point): Remove.
	(add_high_low_attributes): Use inlined_function_outer_scope_p.
	(gen_block_die): Use is_inlined_entry_point check.  Remove body block
	code.
	* langhooks.h (struct lang_hooks): Remove no_bodu_blocks.
	* gimplify.c (gimplify_expr): Gimplify body blocks.
	* tree-ssa-live.c (remove_unused_scope_block_p): Allow removing wrapper
	block with multiple subblocks.
	(dump_scope_block): Prettier output; dump more flags and info.
	(dump_scope_blocks): New.
	(remove_unused_locals): Use dump_scope_blocks.
	* tree-flow.h (dump_scope_blocks): Declare.
	* tree-cfg.c (execute_build_cfg): Dump scope blocks.
	* stmt.c (is_body_block): Remove.
	* tree-inline.c (remap_block): Copy BODY_BLOCK info.
	* langhooks-def.h (LANG_HOOKS_NO_BODY_BLOCKS): Remove.

2009-02-27  Sebastian Pop  <sebastian.pop@amd.com>

	PR middle-end/39308
	* graphite.c (graphite_loop_normal_form): Do not call 
	number_of_iterations_exit from a gcc_assert.

2009-02-27  Andreas Krebbel  <Andreas.Krebbel@de.ibm.com>

	* gcc/config/s390/s390.c (s390_swap_cmp): Look for conditional
	jumps if COND is NULL.
	(find_cond_jump): New function.
	(s390_z10_optimize_cmp): Handling for reg-reg compares added.
	* gcc/config/s390/s390.md: Remove z10_cobra attribute value.

2009-02-26  Uros Bizjak  <ubizjak@gmail.com>

	* config/alpha/alpha.h (alpha_expand_mov): Return false if
	force_const_mem returns NULL_RTX.

2009-02-26  Jan Hubicka  <jh@suse.cz>

	PR debug/39267
	* cgraph.h (varpool_output_debug_info): Remove.
	* cgraphunit.c (varpool_output_debug_info): Remove.
	* dwarf2out.c (deferred_locations_struct): New struct
	(deferred_locations): New type.
	(deferred_locations_list): New static var.
	(deffer_location): New function.
	(gen_variable_die): Use it.
	(decls_for_scope): Output info on local static vars.
	(dwarf2out_finish): Process deferred locations.
	* varpool.c (varpool_output_debug_info): Remove.

2009-02-25  H.J. Lu  <hongjiu.lu@intel.com>

	PR rtl-optimization/39241
	* jump.c (rtx_renumbered_equal_p): Remove 2 superfluous calls
	to subreg_offset_representable_p.

2009-02-25  Paolo Bonzini  <bonzini@gnu.org>

	* regmove.c (regmove_optimize): Conform to struct rtl_opt_pass
	execute function prototype.  Get f and nregs from max_reg_num
	and get_insns.  Remove the first backward pass as it's dead,
	guard the forward pass by flag_expensive_optimizations.
	(rest_of_handle_regmove): Delete.
	(pass_regmove): Replace it with regmove_optimize.

2009-02-25  Martin Jambor  <mjambor@suse.cz>

	PR tree-optimization/39259
	* tree-inline.c (initialize_cfun): Remove asserts for calls_setjmp and
	calls_alloca function flags.
	(copy_bb): Set calls_setjmp and alls_alloca function flags if such
	calls are detected.

2009-02-25  Paolo Bonzini  <bonzini@gnu.org>

	* regmove.c (discover_flags_reg, flags_set_1, mark_flags_life_zones,
	flags_set_1_rtx, flags_set_1_set): Delete.
	(regmove_optimize): Do not call mark_flags_life_zones.

2009-02-24  Julian Brown  <julian@codesourcery.com>

	PR target/35965
	* config/arm/arm.c (require_pic_register): Only set
	cfun->machine->pic_reg once per function.

2009-02-24  Sandra Loosemore  <sandra@codesourcery.com>

	* doc/invoke.texi (Link Options): Document an easier way to pass
	options that take arguments to the GNU linker using -Xlinker and -Wl.

2009-02-24  Steve Ellcey  <sje@cup.hp.com>

	PR target/33785
	* doc/tm.texi (TARGET_C99_FUNCTIONS): Fix description.

2009-02-24  Richard Guenther  <rguenther@suse.de>

	PR debug/39285
	* dwarf2out.c (gen_enumeration_type_die): Handle CONST_DECLs.

2009-02-24  Richard Guenther  <rguenther@suse.de>
	    Zdenek Dvorak  <ook@ucw.cz>

	PR tree-optimization/39233
	* tree-ssa-loop-ivopts.c (add_candidate_1): Do not except pointers
	from converting them to a generic type.

2009-02-23  Sebastian Pop  <sebastian.pop@amd.com>

	PR tree-optimization/39260
	* graphite.c (harmful_stmt_in_bb): Stop a SCoP when the basic block
	contains a condition with a real type.
	(build_scop_conditions_1): Conditions are always last_stmt of a bb.

2009-02-23  Jason Merrill  <jason@redhat.com>

	PR c++/38880
	* varasm.c (initializer_constant_valid_p) [PLUS_EXPR]: Check
	narrowing_initializer_constant_valid_p.
	(narrowing_initializer_constant_valid_p): Don't return 
	null_pointer_node for adding a pointer to itself.

2009-02-23  Jan Hubicka  <jh@suse.cz>

	PR c/12245
	* ggc.h (htab_create_ggc): Use ggc_free to free hashtable when
	resizing.

2009-02-23  Jan Hubicka  <jh@suse.cz>

	PR tree-optimization/37709
	* tree.c (block_ultimate_origin): Move here from dwarf2out.
	* tree.h (block_ultimate_origin): Declare.
	* dwarf2out.c (block_ultimate_origin): Move to tree.c
	* tree-ssa-live.c (remove_unused_scope_block_p):
	Eliminate blocks containig no instructions nor live variables nor
	nested blocks.
	(dump_scope_block): New function.
	(remove_unused_locals): Enable removal of dead blocks by default;
	enable dumping at TDF_DETAILS.

2009-02-21  H.J. Lu  <hongjiu.lu@intel.com>

	* config/i386/i386.c (classify_argument): Don't allow COImode
	and OImode.
	(function_arg_advance_32): Don't allow OImode.
	(function_arg_32): Likewise.
	(function_value_32): Likewise.
	(return_in_memory_32): Likewise.
	(function_arg_64): Remove OImode comment.

2009-02-21  H.J. Lu  <hongjiu.lu@intel.com>

	PR target/39261
	* config/i386/i386.c (ix86_expand_vector_init_one_nonzero): Use
	ix86_expand_vector_set for V4DImode in 64bit mode only.
	(ix86_expand_vector_init_one_var): Likewise.

2009-02-21  Sebastian Pop  <sebastian.pop@amd.com>

	* graphite.c (graphite_trans_loop_block): Adjust tile size to 51.

2009-02-21  Richard Sandiford  <rdsandiford@googlemail.com>

	PR bootstrap/39257
	* loop-iv.c: Revert last change.
	* emit-rtl.c: Likewise.

2009-02-21  H.J. Lu  <hongjiu.lu@intel.com>

	PR target/39256
	* config/i386/i386.c (type_natural_mode): Remove an extra
	space in the warning message.
	(function_value_32): Handle 32-byte vector modes.
	(return_in_memory_32): Likewise.

2009-02-21  Richard Sandiford  <rdsandiford@googlemail.com>

	* loop-iv.c (truncate_value): New function.
	(iv_subreg, get_iv_value, iv_number_of_iterations): Use it instead
	of lowpart_subreg.
	(lowpart_subreg): Move to...
	* emit-rtl.c: ...here.

2009-02-21  Danny Smith  <dannysmith@users.sourceforge.net>

	* config/i386/winnt.c (i386_pe_asm_output_aligned_decl_common): Revert
	accidental and undocumented change at revision 140860.

2009-02-21  Joseph Myers  <joseph@codesourcery.com>

	* config/arm/arm.c (arm_gimplify_va_arg_expr): Update prototype to
	take gimple_seq * arguments.
	(arm_mangle_type): Use CONST_CAST_TREE on type argument passed to
	types_compatible_p langhook.

2009-02-20  Mark Mitchell  <mark@codesourcery.com>
	    Joseph Myers  <joseph@codesourcery.com>

	* config/arm/arm.c (arm_builtin_va_list): New function.
	(arm_expand_builtin_va_start): Likewise.
	(arm_gimplify_va_arg_expr): Likewise.
	(TARGET_BUILD_BUILTIN_VA_LIST): Define.
	(TARGET_BUILD_BUILTIN_VA_START): Likewise.
	(TARGET_BUILD_BUILTIN_VA_ARG_EXPR): Likewise.
	(va_list_type): New variable.
	(arm_mangle_type): Mangle va_list_type appropriately.

2009-02-20  Jakub Jelinek  <jakub@redhat.com>

	PR middle-end/39157
	* Makefile.in (loop-invariant.o): Depend on $(PARAMS_H).
	* params.h (LOOP_INVARIANT_MAX_BBS_IN_LOOP): Define.
	* params.def (loop-invariant-max-bbs-in-loop): New parameter.
	* opts.c (decode_options): Set loop-invariant-max-bbs-in-loop
	parameter to 1000 for -O1 by default.
	* doc/invoke.texi (loop-invariant-max-bbs-in-loop): Document new
	parameter.
	* loop-invariant.c: Include params.h.
	(move_loop_invariants): Don't call move_single_loop_invariants on
	very large loops.

2009-02-20  Jaka Mocnik  <jaka@xlab.si>

	* calls.c (emit_library_call_value_1): Use slot_offset instead of
	offset when calculating bounds for indexing stack_usage_map.  Fixes
	a buffer overflow with certain target setups.

2009-02-20  Jakub Jelinek  <jakub@redhat.com>

	PR target/39240
	* calls.c (expand_call): Clear try_tail_call if caller and callee
	disagree in promotion of function return value.

2009-02-19  Jakub Jelinek  <jakub@redhat.com>

	PR target/39175
	* c-common.c (c_determine_visibility): If visibility changed and
	DECL_RTL has been already set, call make_decl_rtl to update symbol
	flags.

2009-02-19  H.J. Lu  <hongjiu.lu@intel.com>

	PR c++/39188
	* varasm.c (assemble_variable): Don't check DECL_NAME when
	globalizing a variable.

2009-02-19  Joseph Myers  <joseph@codesourcery.com>

	PR c/38483
	* builtins.c (gimplify_va_arg_expr): Evaluate the va_list
	expression before any __builtin_trap call.
	* c-typeck.c (build_function_call): Convert and check function
	arguments before generating a call to a trap.  Evaluate the
	function arguments before the trap.

2009-02-19  Uros Bizjak  <ubizjak@gmail.com>

	PR target/39228
	* config/i386/i386.md (isinfxf2): Split from isinf<mode>2.
	(UNSPEC_FXAM_MEM): New unspec.
	(fxam<mode>2_i387_with_temp): New insn and split pattern.
	(isinf<mode>2): Use MODEF mode iterator.  Force operand[1] through
	memory using fxam<mode>2_i387_with_temp to remove excess precision.

2009-02-19  Richard Guenther  <rguenther@suse.de>

	PR tree-optimization/39207
	PR tree-optimization/39074
	* tree-ssa-structalias.c (storedanything_id, var_storedanything,
	storedanything_tree): New.
	(do_ds_constraint): Simplify ANYTHING shortcutting.  Update
	the STOREDANYTHING solution if the lhs solution contains ANYTHING.
	(build_succ_graph): Add edges from STOREDANYTHING to all
	non-direct nodes.
	(init_base_vars): Initialize STOREDANYTHING.
	(compute_points_to_sets): Free substitution info after
	building the succ graph.
	(ipa_pta_execute): Likewise.

	* tree-ssa-structalias.c (struct variable_info): Add may_have_pointers
	field.
	(do_ds_constraint): Do not add to special var or non-pointer
	field solutions.
	(type_could_have_pointers): Split out from ...
	(could_have_pointers): ... here.  For arrays use the element type.
	(create_variable_info_for): Initialize may_have_pointers.
	(new_var_info): Likewise.
	(handle_lhs_call): Make the HEAP variable unknown-sized.
	(intra_create_variable_infos): Use a type with pointers for
	PARM_NOALIAS, make it unknown-sized.

2009-02-18  H.J. Lu  <hongjiu.lu@intel.com>

	PR target/39224
	* config/i386/i386.c (ix86_return_in_memory): Properly check ABI.

2009-02-18  Jason Merrill  <jason@redhat.com>

	PR target/39179
	* tree-ssa-ccp.c (get_symbol_constant_value): Don't assume zero
	value if DECL_EXTERNAL.
	* tree-sra.c (sra_walk_gimple_assign): Likewise.
	* target.h (gcc_target::binds_local_p): Clarify "module".
	* tree.h (TREE_PUBLIC): Clarify "module".

2009-02-17  Xuepeng Guo  <xuepeng.guo@intel.com>

	PR target/38891
	* config/i386/i386.h (CONDITIONAL_REGISTER_USAGE): Move the hunk of
	initialization for MS_ABI prior to the hunk of !TARGET_MMX.

2009-02-17  H.J. Lu  <hongjiu.lu@intel.com>

	PR target/39082
	* c.opt (Wabi): Support C and ObjC.
	(Wpsabi): New.

	* c-opts.c (c_common_handle_option): Handle OPT_Wabi.

	* config/i386/i386.c (classify_argument): Warn once about the ABI
	change when passing union with long double.

	* doc/invoke.texi: Update -Wabi for warning psABI changes.

2009-02-18  Joseph Myers  <joseph@codesourcery.com>

	PR c/35447
	* c-parser.c (c_parser_compound_statement): Always enter and leave
	a scope.

2009-02-17  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>

	PR target/34587
	* config/darwin.h (SUPPORTS_INIT_PRIORITY): Define.

2009-02-18  Jakub Jelinek  <jakub@redhat.com>

	PR tree-optimization/36922
	* tree-data-ref.c (initialize_matrix_A): Handle BIT_NOT_EXPR.
	* tree-scalar-evolution.c (interpret_rhs_expr, instantiate_scev_1):
	Likewise.

2009-02-17  Richard Sandiford  <rdsandiford@googlemail.com>

	* config/mips/mips.c (mips_override_options): Set flag_dwarf2_cfi_asm
	to 0 for EABI64.

2009-02-17  Richard Sandiford  <rdsandiford@googlemail.com>

	* config/mips/mips.md (type): Reclassify lui_movf as "unknown".

2009-02-17  Richard Sandiford  <rdsandiford@googlemail.com>

	* config/mips/mips.c (mips_gimplify_va_arg_expr): Fix invalid
	tree sharing.

2009-02-17  Ruan Beihong  <ruanbeihong@gmail.com>
	    Richard Sandiford  <rdsandiford@googlemail.com>

	* config/mips/mips.c (CODE_FOR_loongson_biadd): Delete.
	* config/mips/loongson.md (reduc_uplus_<mode>): Rename to...
	(loongson_biadd): ...this.

2009-02-17  Richard Guenther  <rguenther@suse.de>

	PR tree-optimization/39202
	* tree-ssa-structalias.c (do_structure_copy): Before collapsing
	a var make sure to follow existing collapses.

2009-02-17  Richard Guenther  <rguenther@suse.de>

	PR middle-end/39214
	* langhooks.c (lhd_print_error_function): Check for NULL block.

2009-02-17  Richard Guenther  <rguenther@suse.de>

	PR tree-optimization/39204
	* tree-ssa-pre.c (phi_translate_1): Lookup the value-number
	of the PHI arg.

2009-02-17  Uros Bizjak  <ubizjak@gmail.com>

	* config/soft-fp/double.h: Update from glibc CVS.

2009-02-17  Richard Guenther  <rguenther@suse.de>

	PR tree-optimization/39207
	* tree-ssa-structalias.c (find_what_p_points_to): Do not emit
	strict-aliasing warnings for pointers pointing to NULL.

2009-02-16  Joseph Myers  <joseph@codesourcery.com>

	PR c/35446
	* c-parser.c (c_parser_braced_init): Call pop_init_level when
	skipping until next close brace.

2009-02-16  H.J. Lu  <hongjiu.lu@intel.com>

	PR target/37049
	* config/i386/i386.c (ix86_expand_push): Set memory alignment
	to function argument boundary.

2009-02-16  Hariharan Sandanagobalane  <hariharan@picochip.com>

	* config/picochip/picochip.md (lea_add): Allow any nonimmediate
	in the lea_add. Reload eventually constraints it properly.
	* config/picochip/constraints.md : Remove the target constraint
	"b", since it is not needed anymore.

2009-02-16  Jakub Jelinek  <jakub@redhat.com>

	* gthr-dce.h: Uglify function parameter and local variable names.
	* gthr-gnat.h: Likewise.
	* gthr-mipssde.h: Likewise.
	* gthr-nks.h: Likewise.
	* gthr-posix95.h: Likewise.
	* gthr-posix.h: Likewise.
	* gthr-rtems.h: Likewise.
	* gthr-single.h: Likewise.
	* gthr-solaris.h: Likewise.
	* gthr-tpf.h: Likewise.
	* gthr-vxworks.h: Likewise.
	* gthr-win32.h: Likewise.

2009-02-15  H.J. Lu  <hongjiu.lu@intel.com>

	PR target/39196
	* config/i386/i386.md: Restrict the new peephole2 to move
	between MMX/SSE registers.

2009-02-15  Richard Guenther  <rguenther@suse.de>

	Revert
	2009-02-13  Richard Guenther  <rguenther@suse.de>

	* configure.ac: Enable LFS.
	* configure: Re-generate.
	* config.in: Likewise.

2009-02-13  Ulrich Weigand  <Ulrich.Weigand@de.ibm.com>

	* config/spu/spu_internals.h (spu_sr, spu_sra, spu_srqw,
	spu_srqwbyte, spu_srqwbytebc): Define.
	* config/spu/spu-builtins.def (spu_sr, spu_sra, spu_srqw,
	spu_srqwbyte, spu_srqwbytebc): New overloaded builtins.
	* config/spu/spu.md ("shrqbybi_<mode>", "shrqbi_<mode>",
	"shrqby_<mode>"): New insn-and-split patterns.
	* config/spu/spu.c (expand_builtin_args): Determine and return
	number of operands using spu_builtin_description data.
	(spu_expand_builtin_1): Use it.

2009-02-13  Steve Ellcey  <sje@cup.hp.com>

	PR target/38056
	* config/ia64/ia64.c (ia64_function_ok_for_sibcall): Check
	TARGET_CONST_GP.

2009-02-13  H.J. Lu  <hongjiu.lu@intel.com>

	PR target/39149
	* config/i386/i386.c (override_options): Correct warning
	messages for -malign-loops, -malign-jumps and -malign-functions.

2009-02-13  H.J. Lu  <hongjiu.lu@intel.com>

	PR target/39152
	* config/i386/i386.md: Restrict the new peephole2 to move
	between the general purpose registers.

2009-02-13  H.J. Lu  <hongjiu.lu@intel.com>

	PR target/39162
	* config/i386/i386.c (type_natural_mode): Add a new argument.
	Return the original mode and warn ABI change if vector size is 32byte.
	(function_arg_advance): Updated.
	(function_arg): Likewise.
	(ix86_function_value): Likewise.
	(ix86_return_in_memory): Likewise.
	(ix86_sol10_return_in_memory): Likewise.
	(ix86_gimplify_va_arg): Likewise.
	(function_arg_32): Don't warn ABX ABI change here.
	(function_arg_64): Likewise.

2009-02-13  Bernd Schmidt  <bernd.schmidt@analog.com>

	* loop-iv.c (implies_p): In the final case, test that operands 0
	of the two comparisons match.

	* config/bfin/bfin.c (find_prev_insn_start): New function.
	(bfin_optimize_loop): Use it in some cases instead of PREV_INSN.
	(find_next_insn_start): Move.

2009-02-13  Richard Guenther  <rguenther@suse.de>

	* configure.ac: Enable LFS.
	* configure: Re-generate.
	* config.in: Likewise.

2009-02-13  Joseph Myers  <joseph@codesourcery.com>

	PR c/35444
	* c-parser.c (c_parser_parms_list_declarator): Discard pending
	sizes on syntax error after some arguments have been parsed.

2009-02-12  Jakub Jelinek  <jakub@redhat.com>

	* doc/invoke.texi (-fira): Remove.

2009-02-12  H.J. Lu  <hongjiu.lu@intel.com>

	* caller-save.c: Replace regclass.c with reginfo.c in comments.
	* recog.c: Likewise.
	* rtl.h: Likewise.

2009-02-12  Uros Bizjak  <ubizjak@gmail.com>

	* longlong.h (sub_ddmmss): New for ia64. Ported from GMP 4.2.
	(umul_ppmm): Likewise.
	(count_leading_zeros): Likewise.
	(count_trailing_zeros): Likewise.
	(UMUL_TIME): Likewise.

2009-02-12  H.J. Lu  <hongjiu.lu@intel.com>

	* config.gcc (ia64*-*-linux*): Add ia64/t-fprules-softfp and
	soft-fp/t-softfp to tmake_file.

	* config/ia64/ia64.c (ia64_soft_fp_init_libfuncs): New.
	(ia64_expand_compare): Use HPUX library for TFmode only for HPUX.
	(ia64_builtins) [IA64_BUILTIN_COPYSIGNQ, IA64_BUILTIN_FABSQ,
	IA64_BUILTIN_INFQ]: New.
	(ia64_init_builtins): Initialize __builtin_infq,
	__builtin_fabsq and __builtin_copysignq if not HPUX.
	(ia64_expand_builtin): Handle IA64_BUILTIN_COPYSIGNQ,
	IA64_BUILTIN_FABSQ and IA64_BUILTIN_INFQ.

	* config/ia64/lib1funcs.asm (__divtf3): Define only if
	SHARED is defined.
	(__fixtfti): Likewise.
	(__fixunstfti): Likewise.
	(__floattitf): Likewise.

	* config/ia64/libgcc-glibc.ver: New.
	* config/ia64/t-fprules-softfp: Likewise.
	* config/ia64/sfp-machine.h: Likewise.

	* config/ia64/linux.h (LIBGCC2_HAS_TF_MODE): New.
	(LIBGCC2_TF_CEXT): Likewise.
	(TF_SIZE): Likewise.
	(TARGET_INIT_LIBFUNCS): Likewise.

	* config/ia64/t-glibc (SHLINB_MAPFILES):
	Add $(srcdir)/config/ia64/libgcc-glibc.ver.

2009-02-12  H.J. Lu  <hongjiu.lu@intel.com>

	* config/i386/i386.c (construct_container): Rewrite processing
	BLKmode with X86_64_SSE_CLASS.

2009-02-12  Paolo Bonzini  <bonzini@gnu.org>

	PR target/39152
	* config/i386/i386.md: Replace simplify_replace_rtx with
	replace_rtx in the new peephole2.

2009-02-12  Nathan Sidwell  <nathan@codesourcery.com>

	* doc/invoke.texi (Optimize Options): Stop claiming inlining and
	loop unrolling do not happen at -O2.

2009-02-12  Michael Matz  <matz@suse.de>

	* gcc.c (ASM_DEBUG_SPEC): Check for -g0.

2009-02-12  Jakub Jelinek  <jakub@redhat.com>

	* dwarf2out.c (dwarf2out_finish): Force output of comp_unit_die
	for -g3.

2009-02-12  Ben Elliston  <bje@au.ibm.com>

	* config/rs6000/rs6000.md (allocate_stack): Use _stack form of
	patterns when updating the back chain.  Missed in the 2009-02-10
	change.

2009-02-11  Janis Johnson  <janis187@us.ibm.com>

	* doc/extend.texi (Decimal Floating Types): Update identifier of
	draft TR and list of missing support.

2009-02-11  Jakub Jelinek  <jakub@redhat.com>

	PR middle-end/39154
	* gimplify.c (omp_notice_variable): If adding GOVD_SEEN
	bit to variable length decl's flags, add it also to its
	pointer replacement variable.

2009-02-11  Uros Bizjak  <ubizjak@gmail.com>
	    Jakub Jelinek  <jakub@redhat.com>

	PR target/39118
	* config/i386/i386.md (UNSPEC_MEMORY_BLOCKAGE): New constant.
	(memory_blockage): New expander.
	(*memory_blockage): New insn pattern.
	* config/i386/i386.c (ix86_expand_prologue): Use memory_blockage
	instead of general blockage at the end of function prologue when
	frame pointer is used to access red zone area.  Do not emit blockage
	when profiling, it is emitted in generic code.
	(ix86_expand_epilogue): Emit memory_blockage at the beginning of
	function epilogue when frame pointer is used to access red zone area.

2009-02-11  Paolo Bonzini  <bonzini@gnu.org>

	PR target/38824
	* config/i386/i386.md: Add two new peephole2 to avoid mov followed
	by arithmetic with memory operands.
	* config/i386/predicates.md (commutative_operator): New.

2009-02-10  Janis Johnson  <janis187@us.ibm.com>

	* doc/extend.texi (Fixed-Point Types): Break long paragraphs into
	bulleted lists.

2009-02-10  Eric Botcazou  <ebotcazou@adacore.com>

	* alias.h (record_alias_subset): Declare.
	* alias.c (record_alias_subset): Make global.

2009-02-10  Nick Clifton  <nickc@redhat.com>

	* tree-parloops.c: Change license to GPLv3.
	* ipa-struct-reorg.c: Change license to GPLv3.
	* ipa-struct-reorg.h: Change license to GPLv3.

2009-02-10  Steve Ellcey  <sje@cup.hp.com>

	PR c/39084
	* c-decl.c (start_struct): Return NULL on error.

2009-02-10  Jakub Jelinek  <jakub@redhat.com>

	PR middle-end/39124
	* cfgloopmanip.c (remove_path): Call remove_bbs after
	cancel_loop_tree, not before it.

	PR target/39139
	* function.h (struct function): Add has_local_explicit_reg_vars bit.
	* gimplify.c (gimplify_bind_expr): Set it if local DECL_HARD_REGISTER
	VAR_DECLs were seen.
	* tree-ssa-live.c (remove_unused_locals): Recompute
	cfun->has_local_explicit_reg_vars.
	* tree-ssa-sink.c (statement_sink_location): Don't sink BLKmode
	copies or clearings if cfun->has_local_explicit_reg_vars.

2009-02-10  Uros Bizjak  <ubizjak@gmail.com>

	PR target/39118
	* config/i386/i386.c (expand_prologue): Emit blockage at the end
	of function prologue when frame pointer is used to access
	red zone area.

2009-02-10  Richard Guenther  <rguenther@suse.de>

	PR middle-end/39127
	* gimplify.c (gimple_regimplify_operands): Always look if
	we need to create a temporary.

2009-02-10  Richard Guenther  <rguenther@suse.de>

	PR tree-optimization/39132
	* tree-loop-distribution.c (todo): New global var.
	(generate_memset_zero): Trigger TODO_rebuild_alias.
	(tree_loop_distribution): Return todo.

2009-02-10  H.J. Lu  <hongjiu.lu@intel.com>

	PR target/39119
	* config/i386/i386.c (x86_64_reg_class): Remove X86_64_AVX_CLASS.
	(x86_64_reg_class_name): Removed.
	(classify_argument): Return 0 if bytes > 32.  Return 0 if the
	first one isn't X86_64_SSE_CLASS or any other ones aren't
	X86_64_SSEUP_CLASS when size > 16bytes.  Don't turn
	X86_64_SSEUP_CLASS into X86_64_SSE_CLASS if the preceded one
	is X86_64_SSEUP_CLASS.  Set AVX modes to 1 X86_64_SSE_CLASS
	and 3 X86_64_SSEUP_CLASS.
	(construct_container): Remove X86_64_AVX_CLASS.  Handle 4
	registers with 1 X86_64_SSE_CLASS and 3 X86_64_SSEUP_CLASS.

2009-02-10  Ben Elliston  <bje@au.ibm.com>

	* config/rs6000/rs6000.md (allocate_stack): Always use an update
	form instruction to update the stack back chain word, even if the
	user has disabled the generation of update instructions.
	(movdi_<mode>_update_stack): New.
	(movsi_update_stack): Likewise.
	* config/rs6000/rs6000.c (rs6000_emit_allocate_stack): Likewise,
	always use an update form instruction to update the stack back
	chain word.

2009-02-09  Sebastian Pop  <sebastian.pop@amd.com>

	PR middle-end/38953
	* graphite.c (if_region_set_false_region): After moving a region in
	the false branch of a condition, remove the empty dummy basic block.
	(gloog): Remove wrong fix for PR38953.

2009-02-09  Ulrich Weigand  <Ulrich.Weigand@de.ibm.com>

	* config/spu/spu.c (array_to_constant): Fix (latent) wrong-code
	generation due to implicit sign extension.

2009-02-09  Eric Botcazou  <ebotcazou@adacore.com>

	PR middle-end/38981
	* tree-ssa-coalesce.c (add_coalesce): Cap the costs of coalesce pairs
	at MUST_COALESCE_COST-1 instead of MUST_COALESCE_COST.

2009-02-09  Richard Guenther  <rguenther@suse.de>

	PR middle-end/35202
	* convert.c (convert_to_real): Disable (float)fn((double)x)
	to fnf(x) conversion if errno differences may occur and
	-fmath-errno is set.

2009-02-07  Anatoly Sokolov  <aesok@post.ru>

	* config/avr/avr.c (avr_mcu_t): Add ata6289 device.
	* config/avr/avr.h (LINK_SPEC, CRT_BINUTILS_SPECS): (Ditto.).
	* config/avr/t-avr (MULTILIB_MATCHES): (Ditto.).

2009-02-06  Joseph Myers  <joseph@codesourcery.com>

	PR c/35434
	* c-common.c (handle_alias_attribute): Disallow attribute for
	anything not a FUNCTION_DECL or VAR_DECL.

2009-02-06  Janis Johnson  <janis187@us.ibm.com>

	PR c/39035
	* real.c (do_compare): Special-case compare of zero against
	decimal float value.

2009-02-06  Joseph Myers  <joseph@codesourcery.com>

	PR c/36432
	* c-decl.c (grokdeclarator): Don't treat [] declarators in fields
	as indicating flexible array members unless the field itself is
	being declarared as the incomplete array.

2009-02-06  Jan Hubicka  <jh@suse.cz>

	PR tree-optimization/38844
	* ipa-inline.c (try_inline): Stop inlining recursion when edge
	is already inlined.

2009-02-06  Richard Guenther  <rguenther@suse.de>

	PR middle-end/38977
	* tree-cfg.c (need_fake_edge_p): Force a fake edge for
	fork because we may expand it as __gcov_fork.

2009-02-06  Nick Clifton  <nickc@redhat.com>

	* config/m32c/m32c.h (PCC_BITFIELD_TYPE_MATTERS): Define to zero.

2009-02-06  Paolo Bonzini  <bonzini@gnu.org>

	PR tree-optimization/35659
	* tree-ssa-sccvn.c (vn_constant_eq, vn_reference_eq, vn_nary_op_eq
	vn_phi_eq): Shortcut if hashcode does not match.
	(vn_reference_op_compute_hash): Do not call iterative_hash_expr for
	NULL operands.
	* tree-ssa-pre.c (pre_expr_hash): Look at hashcode if available,
	and avoid iterative_hash_expr.
	(FOR_EACH_VALUE_ID_IN_SET): New.
	(value_id_compare): Remove.
	(sorted_array_from_bitmap_set): Use FOR_EACH_VALUE_ID_IN_SET to
	sort expressions by value id.

2009-02-05  Kaz Kojima  <kkojima@gcc.gnu.org>

	PR target/38991
	* config/sh/predicates.md (general_movsrc_operand): Don't check
	the subreg of system registers here.

2009-02-05  Jakub Jelinek  <jakub@redhat.com>

	PR c++/39106
	* cgraphunit.c (cgraph_function_versioning): Clear also DECL_VIRTUAL_P
	on the copied decl.

2009-02-05  Paolo Bonzini  <bonzini@gnu.org>

	PR rtl-optimization/39110
	* rtlanal.c (rtx_addr_can_trap_p_1): Shortcut unaligned
	addresses, not aligned ones.

2009-02-05  Daniel Berlin  <dberlin@dberlin.org>
	    Richard Guenther  <rguenther@suse.de>

	PR tree-optimization/39100
	* tree-ssa-structalias.c (do_ds_constraint): Actually do what the
	comment says and add edges.

2009-02-05  Joseph Myers  <joseph@codesourcery.com>

	PR c/35435
	* c-common.c (handle_tls_model_attribute): Ignore attribute for
	non-VAR_DECLs without checking DECL_THREAD_LOCAL_P.

2009-02-04  Tobias Grosser  <grosser@fim.uni-passau.de>	

	* graphite.c (bb_in_sese_p, sese_build_livein_liveouts_use,
	sese_build_livein_liveouts_bb, sese_build_livein_liveouts,
	register_bb_in_sese, new_sese, free_sese): Moved.
	(dot_scop_1, build_scop_loop_nests, build_loop_iteration_domains,
	outermost_loop_in_scop, build_scop_iteration_domain,
	expand_scalar_variables_ssa_name, get_vdef_before_scop,
	limit_scops): Use bb_in_sese_p instead of bb_in_scop_p.
	Use loop_in_sese_p instead of loop_in_scop_p.
	(new_graphite_bb, gloog): Do not initialize SCOP_BBS_B.
	(new_scop, free_scop): Remove SCOP_LOOP2CLOOG_LOOP and SCOP_BBS_B.
	(scopdet_basic_block_info): Fix bug in scop detection.
	(new_loop_to_cloog_loop_str, hash_loop_to_cloog_loop,
	eq_loop_to_cloog_loop): Remove.
	(nb_loops_around_loop_in_scop, nb_loop
	ref_nb_loops): Moved here...
	* graphite.h (ref_nb_loops): ... from here.
	(struct scop): Remove bbs_b bitmap and loop2cloog_loop.
	(loop_domain_dim, loop_iteration_vector_dim): Remove.
	(SCOP_BBS_B, bb_in_scop_p, loop_in_scop_p): Removed.
	* testsuite/gcc.dg/graphite/scop-19.c: New

2009-02-04  Paolo Bonzini  <bonzini@gnu.org>
	    Hans-Peter Nilsson  <hp@axis.com>

	PR rtl-optimization/37889
	* rtlanal.c (rtx_addr_can_trap_p_1): Add offset and size arguments.
	Move offset handling from PLUS to before the switch.  Use new
	arguments when considering SYMBOL_REFs too.
	(rtx_addr_can_trap_p): Pass dummy offset and size.
	(enum may_trap_p_flags): Remove.
	(may_trap_p_1): Pass size from MEM_SIZE.

	PR rtl-optimization/38921
	* loop-invariant.c (find_invariant_insn): Use may_trap_or_fault_p.
	* rtl.h (may_trap_after_code_motion_p): Delete prototype.
	* rtlanal.c (may_trap_after_code_motion_p): Delete.
	(may_trap_p, may_trap_or_fault_p): Pass 0/1 as flags.

2009-02-04  H.J. Lu  <hongjiu.lu@intel.com>

	AVX Programming Reference (January, 2009)
	* config/i386/sse.md (*vpclmulqdq): New.

2009-02-04  Jakub Jelinek  <jakub@redhat.com>

	PR tree-optimization/38977
	PR gcov-profile/38292
	* calls.c (special_function_p): Disregard __builtin_ prefix.

2009-02-04  Hariharan Sandanagobalane  <hariharan@picochip.com>

	* config/picochip/picochip.c (GO_IF_LEGITIMATE_ADDRESS): Disallow
	non-indexable addresses even before reload.

2009-02-03  Joseph Myers  <joseph@codesourcery.com>

	PR c/29129
	* c-decl.c (grokdeclarator): Mark [*] arrays in field declarators
	as having variable size.  Do not give an error for unnamed
	parameters with [*] declarators.  Give a warning for type names
	with [*] declarators and mark them as variable size.
	* c-parser.c (c_parser_sizeof_expression): Do not give an error
	for sizeof applied to [*] type names.

2009-02-03  Andrew Pinski  <andrew_pinski@playstation.sony.com>

	PR C++/36607
	* convert.c (convert_to_integer): Treat OFFSET_TYPE like INTEGER_TYPE.

2009-02-03  Jakub Jelinek  <jakub@redhat.com>

	* gcc.c (process_command): Update copyright notice dates.
	* gcov.c (print_version): Likewise.
	* gcov-dump.c (print_version): Likewise.
	* mips-tfile.c (main): Likewise.
	* mips-tdump.c (main): Likewise.

2009-02-03  Joseph Myers  <joseph@codesourcery.com>

	PR c/35433
	* c-typeck.c (composite_type): Set TYPE_SIZE and TYPE_SIZE_UNIT
	for composite type involving a zero-length array type.

2009-02-03  Jakub Jelinek  <jakub@redhat.com>

	PR target/35318
	* function.c (match_asm_constraints_1): Skip over
	initial optional % in the constraint.

	PR inline-asm/39059
	* c-parser.c (c_parser_postfix_expression): If fixed point is not
	supported, don't accept FIXED_CSTs.
	* c-decl.c (finish_declspecs): Error if fixed point is not supported
	and _Sat is used without _Fract/_Accum.  Set specs->type to
	integer_type_node for cts_fract/cts_accum if fixed point is not
	supported.

2009-02-02  Catherine Moore  <clm@codesourcery.com>

	* sde.h (SUBTARGET_ARM_SPEC): Don't assemble -fpic code as -mabicalls.

2009-02-02  Richard Sandiford  <rdsandiford@googlemail.com>

	* config/mips/mips.h (FILE_HAS_64BIT_SYMBOLS): New macro.
	(ABI_HAS_64BIT_SYMBOLS): Use it.
	(DWARF2_ADDR_SIZE): Use it instead of ABI_HAS_64BIT_SYMBOLS.

2009-02-02  Paul Brook  <paul@codesourcery.com>

	* config/arm/arm.md (arm_addsi3): Add r/r/k alternative.

2009-02-02  Jakub Jelinek  <jakub@redhat.com>

	PR inline-asm/39058
	* recog.h (asm_operand_ok): Add constraints argument.
	* recog.c (asm_operand_ok): Likewise.  If it is set, for digits
	recurse on matching constraint.
	(check_asm_operands): Pass constraints as 3rd argument to
	asm_operand_ok.  Don't look up matching constraint here.
	* stmt.c (expand_asm_operands): Pass NULL as 3rd argument
	to asm_operand_ok.

2009-02-02  Ben Elliston  <bje@au.ibm.com>

	* doc/tm.texi (Storage Layout): Fix TARGET_ALIGN_ANON_BITFIELD and
	TARGET_NARROW_VOLATILE_BITFIELD macro names.

2009-01-31  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>

	* doc/install.texi (hppa*-hp-hpux*): Update binutils and linker
	information.  Remove some obsolete information.  Reorganize.

	* config/pa/fptr.c: Revert license to GPL 2.
	* config/pa/milli64.S: Likewise.

2009-01-31  Dave Korn  <dave.korn.cygwin@gmail.com>

	PR target/38904
	* mkmap-flat.awk (END):  Use pe_dll command-line arg to pass
	LIBRARY name in, instead of hard-coding it.
	* config.gcc (i[34567]86-*-pe | i[34567]86-*-cygwin*):  Add an
	extra target make frag to tmake_files according to EH model.
	(i[34567]86-*-mingw* | x86_64-*-mingw*):  Likewise.
	* config/i386/t-dw2-eh, config/i386/t-sjlj-eh:  Add new target
	frags that define makefile variable EH_MODEL appropriately.
	* config/i386/cygming.h (DWARF2_UNWIND_INFO):  Add comment.
	* config/i386/cygwin.h (LIBGCC_EH_EXTN):  Define to nothing or
	to "-sjlj" according to type of EH configured.
	(LIBGCC_SONAME):  Concatenate it to shared library base name.
	* config/i386/mingw32.h (LIBGCC_EH_EXTN):  Define to "_dw2" or
	to "_sjlj" according to type of EH configured.
	(LIBGCC_SONAME):  Concatenate it to shared library base name.
	* config/i386/t-cygming (SHLIB_SONAME):  Use EH_MODEL.
	(SHLIB_LINK):  Add missing semicolon to if-else construct.
	(SHLIB_MKMAP_OPTS):  Pass library name to mkmap-flat.awk as
	string value of "pe_dll" command-line option.
	* config/i386/t-cygwin (SHLIB_EH_EXTENSION):  New helper.
	(SHLIB_SONAME):  Use it when overriding t-cygming default.
	(SHLIB_IMPLIB):  Override t-cygming default.
	(SHLIB_MKMAP_OPTS):  Pass library name to mkmap-flat.awk as
	string value of "pe_dll" command-line option.

2009-01-31  Dave Korn  <dave.korn.cygwin@gmail.com>

	PR target/38952
	* config/i386/i386.c (ix86_builtin_setjmp_frame_value): New.
	(TARGET_BUILTIN_SETJMP_FRAME_VALUE): Override default to point at it.

2009-01-31  Richard Guenther  <rguenther@suse.de>

	PR tree-optimization/38937
	* tree-ssa-structalias.c (do_sd_constraint): Do not shortcut
	computing the transitive closure.

2009-01-30  Richard Guenther  <rguenther@suse.de>

	PR tree-optimization/39041
	* tree-ssa-forwprop.c (forward_propagate_addr_expr_1):
	Propagate variable indices only if the types match for this stmt.

2009-01-30  Jakub Jelinek  <jakub@redhat.com>

	PR target/39013
	* c-decl.c (pop_scope): Set DECL_EXTERNAL for functions declared
	inline but never defined.

2009-01-30  Wolfgang Gellerich  <gellerich@de.ibm.com>

	* config/s390/s390.md (*insv<mode>_reg_extimm): Removed.
	(*insv_h_di_reg_extimm): New insn.
	(*insv_l<mode>_reg_extimm): New insn.

2009-01-30  Hariharan Sandanagobalane  <hariharan@picochip.com>

	* config/picochip/picochip.c (flag_conserve_stack): set
	PARAM_LARGE_STACK_FRAME and PARAM_STACK_FRAME_GROWTH to zero under
	fconserve-stack. Reduce call-overhead used by inliner.

2009-01-30  Hariharan Sandanagobalane  <hariharan@picochip.com>

	PR/38157
	* common.opt (flag_conserve_stack): Initialised to zero.

2009-01-30  Kai Tietz  <kai.tietz@onevision.com>

	PR/39002
	* config/i386/i386.c (ix86_can_use_return_insn_p): Check for nsseregs.
	(ix86_expand_epilogue): Take nsseregs in account to use proper restore
	method.

2009-01-29  H.J. Lu  <hongjiu.lu@intel.com>

	* ira-color.c (allocno_reload_assign): Update comments.
	* regmove.c (regmove_optimize): Likewise.

	* ra.h: Removed.

2009-01-29  Robert Millan  <rmh@aybabtu.com>

	* gcc/config.gcc: Recognize GNU/kOpenSolaris (*-*-kopensolaris*-gnu).
	* gcc/config/i386/kopensolaris-gnu.h: New file.  Undefine
	`MD_UNWIND_SUPPORT'.
	* gcc/config/kopensolaris-gnu.h: New file (based on kfreebsd-gnu.h).

2009-01-29  Kazu Hirata  <kazu@codesourcery.com>

	PR tree-optimization/39007
	* tree-loop-distribution.c (generate_builtin): Use
	recompute_dominator to compute the immediate dominator of the
	basic block just after the loop.

2009-01-29  Rainer Orth  <ro@TechFak.Uni-Bielefeld.DE>

	* config/i386/sol2-10.h [!HAVE_AS_IX86_DIFF_SECT_DELTA]
	(ASM_OUTPUT_DWARF_PCREL): Define.

2009-01-29  Vladimir Makarov  <vmakarov@redhat.com>

	* doc/tm.texi (TARGET_IRA_COVER_CLASSES): Modify description.
	* doc/passes.texi: Remove entries about regclass, local-alloc, and
	global.  Modify entries about regmove and IRA.

	* ra-conflict.c: Remove the file.

	* reload.c (push_reload, find_dummy_reload): Remove flag_ira.

	* tree-pass.h (pass_local_alloc, pass_global_alloc): Remove.
	(pass_regclass_init): Rename to pass_reginfo_init.

	* cfgloopanal.c (estimate_reg_pressure_cost): Remove flag_ira.

	* toplev.h (flag_ira): Remove.

	* caller-save.c (setup_save_areas): Remove flag_ira.

	* ira-color.c (ira_reuse_stack_slot, ira_mark_new_stack_slot): Ditto.

	* global.c: Remove the file.

	* opts.c (decode_options): Remove flag_ira.

	* hard-reg-set.h (losing_caller_save_reg_set): Remove.

	* regmove.c: Modify file description.
	(find_use_as_address, try_auto_increment): Define them only if
	AUTO_INC_DEC is defined.
	(replacement_quality, replace_in_call_usage, fixup_match_1,
	stable_and_no_regs_but_for_p): Remove.
	(reg_set_in_bb): Make it static.
	(regmove_optimize): Remove flag_ira and code which worked for
	!flag_ira.

	* local-alloc.c: Remove the file.

	* common.opt (fira): Remove.

	* ira.c: Include except.h.
	(eliminable_regset): Move from global.c.
	(mark_elimination): Ditto.  Remove flag_ira.
	(reg_renumber, struct equivalence, reg_equiv, equiv_mem,
	equiv_mem_modified, validate_equiv_mem_from_store,
	validate_equiv_mem, equiv_init_varies_p, equiv_init_movable_p,
	contains_replace_regs, memref_referenced_p, memref_used_between_p,
	no_equiv, recorded_label_ref): Move from local-alloc.c.
	(update_equiv_regs): Ditto.  Make it static.
	(print_insn_chain, print_insn_chains): Move it from global.c.
	(pseudo_for_reload_consideration_p): Ditto.  Remove flag_ira.
	(build_insn_chain): Ditto.  Make it static.
	(ra_init_live_subregs): Move from ra-conflict.c.  Make it static.
	Rename to init_live_subregs.
	(gate_ira): Remove flag_ira.

	* regclass.c: Rename reginfo.c.  Change file description.
	(FORBIDDEN_INC_DEC_CLASSES): Remove.
	(reg_class_superclasses, forbidden_inc_dec_class, in_inc_dec): Remove.
	(init_reg_sets_1): Remove code for evaluation of
	reg_class_superclasses and losing_caller_save_reg_set.
	(init_regs): Remove init_reg_autoinc.
	(struct costs, costs, init_cost, ok_for_index_p_nonstrict,
	ok_for_base_p_nonstrict): Remove.
	(regclass_init): Rename to reginfo_init.  Don't initialize init_cost.
	(pass_regclass_init): Rename to pass_reginfo_init.  Modify
	corresponding entries.
	(dump_regclass, record_operand_costs, scan_one_insn,
	init_reg_autoinc, regclass, record_reg_classes, copy_cost,
	record_address_regs, auto_inc_dec_reg_p): Remove.
	(gt-regclass.h): Rename to gt-reginfo.h.

	* rtl.h (dump_global_regs, retry_global_alloc,
	build_insn_chain, dump_local_alloc, update_equiv_regs): Remove.

	* Makefile.in (RA_H): Remove.
	(OBJS-common): Remove global.o, local-alloc.o, and ra-conflict.o.
	Rename regclass.o to reginfo.o.
	(regclass.o): Rename to reginfo.o.  Rename gt-regclass.h to
	gt-reginfo.h.
	(global.o, local-alloc.o, ra-conflict.o): Remove entries.
	(GTFILES): Rename regclass.c to	reginfo.c.

	* passes.c (init_optimization_passes): Remove pass_local_alloc and
	pass_global_alloc.  Rename pass_regclass_init to pass_reginfo_init.

	* reload1.c (compute_use_by_pseudos, reload, count_pseudo,
	count_spilled_pseudo, find_reg, alter_reg, delete_output_reload):
	Remove flag_ira.
	(finish_spills): Ditto.  Remove code for !flag_ira.
	
2009-01-29  Kenneth Zadeck  <zadeck@naturalbridge.com>

	PR middle-end/35854
	* doc/invoke.texi (rtl debug options): Complete rewrite.
	* auto-inc-dec.c (pass_inc_dec): Rename pass from "auto-inc-dec"
	to auto_inc_dec".
	* mode-switching.c (pass_mode_switching): Rename pass from
	"mode-sw" to "mode_sw".
	* except.c (pass_convert_to_eh_ranges): Rename pass from
	"eh-ranges" to "eh_ranges".
	* lower-subreg.c (pass_lower_subreg): Renamed pass from "subreg"
	to "subreg1".
		
	
2009-01-29  Andrey Belevantsev  <abel@ispras.ru>
	    Alexander Monakov  <amonakov@ispras.ru>

	PR middle-end/38857
	* sel-sched.c (count_occurrences_1): Check that *cur_rtx is a hard
	register.
	(move_exprs_to_boundary): Change return type and pass through
	should_move from move_op.  Relax assert.  Update usage ...
	(schedule_expr_on_boundary): ... here.  Use should_move instead of
	cant_move.
	(move_op_orig_expr_found): Indicate that insn was disconnected from
	stream.
	(code_motion_process_successors): Do not call after_merge_succs
	callback if original expression was not found when traversing any of
	the branches.
	(code_motion_path_driver): Change return type.  Update prototype.
	(move_op): Update comment.  Add a new parameter (should_move).  Update
	prototype.  Set *should_move based on indication provided by
	move_op_orig_expr_found.

2009-01-28  Pat Haugen  <pthaugen@us.ibm.com>

	* doc/invoke.texi (avoid-indexed-addresses): Document new option.
	* config/rs6000/rs6000-protos.h (avoiding_indexed_address_p): Declare.
	* config/rs6000/rs6000.opt (avoid-indexed-addresses): New option.
	* config/rs6000/rs6000.c (rs6000_override_options): Default
	avoid-indexed-addresses on for Power6, off for everything else.
	(avoiding_indexed_address_p): New function.
	(rs6000_legitimize_address): Use it.
	(rs6000_legitimate_address): Likewise.
	* config/rs6000/rs6000.md (movXX_updateX): Likewise

2009-01-28  Kazu Hirata  <kazu@codesourcery.com>

	PR tree-optimization/38997
	* tree-loop-distribution.c (generate_memset_zero): Use
	POINTER_PLUS_EXPR for a pointer addition.

2009-01-28  Andreas Krebbel  <krebbel1@de.ibm.com>

	* config/s390/s390.md (bswap<mode>2): New pattern added.

2009-01-28  Wolfgang Gellerich  <gellerich@de.ibm.com>

	* config/s390/s390.md (*tls_load_31): Added type attribute.

2009-01-28  Wolfgang Gellerich  <gellerich@de.ibm.com>

	* config/s390/s390.md: Fix a few comments.

2009-01-28  Wolfgang Gellerich  <gellerich@de.ibm.com>

	* config/s390/s390.md (*tmsi_reg): Fixed z10prop attribute.
	(*tm<mode>_full): Fixed z10prop attribute.
	(*tst<mode>_extimm): Fixed z10prop attribute.
	(*tst<mode>_cconly_extimm): Fixed z10prop attribute.
	(*tstqiCCT_cconly): Fixed z10prop attribute.
	(*cmpsi_ccu_zerohi_rlsi): Fixed z10prop attribute.
	(*movsi_larl): Fixed z10prop attribute.
	(*movsi_zarch): Fixed z10prop attribute.
	(*movsi_eas): Fixed z10prop attribute.
	(*movhi): Fixed z10prop attribute.
	(*movqi): Fixed z10prop attribute.
	(*movstrictqi): Fixed z10prop attribute.
	(*mov<mode>): Fixed z10prop attribute.
	(*movcc): Fixed z10prop attribute.
	(*sethighpartdi_64): Fixed z10prop attribute.
	(*zero_extendhi<mode>2_z10): Fixed z10prop attribute.
	(*negdi2_sign_cc): Fixed z10prop attribute.
	(*negdi2_sign): Fixed z10prop attribute.
	(*absdi2_sign_cc): Fixed z10prop attribute.
	(*absdi2_sign): Fixed z10prop attribute.
	(*negabsdi2_sign_cc): Fixed z10prop attribute.
	(*negabsdi2_sign): Fixed z10prop attribute.
	(*cmp_and_trap_signed_int<mode>): Fixed z10prop attribute.
	(*cmp_and_trap_unsigned_int<mode>): Fixed z10prop attribute.
	(doloop_si64): Fixed z10prop attribute.
	(doloop_si31): Fixed z10prop attribute.
	(doloop_long): Fixed z10prop attribute.
	(indirect_jump): Fixed z10prop attribute.
	(nop): Fixed z10prop attribute.
	(main_base_64): Fixed z10prop attribute.
	(reload_base_64): Fixed z10prop attribute.

2009-01-28  Jakub Jelinek  <jakub@redhat.com>

	PR rtl-optimization/38740
	* reorg.c (gate_handle_delay_slots): Avoid dbr scheduling
	if !optimize.
	* config/mips/mips.c (mips_reorg): Likewise.

2009-01-28  Richard Guenther  <rguenther@suse.de>

	PR tree-optimization/38926
	* tree-ssa-pre.c (add_to_value): Assert we add only expressions
	with the correct value id to a value.
	(do_regular_insertion): Use the value number of edoubleprime
	for the value number of the expr.

	Revert
	2008-08-21  Richard Guenther  <rguenther@suse.de>

	* tree-ssa-pre.c (insert_into_preds_of_block): Before inserting
	a PHI ask VN if it is already available.
	* tree-ssa-sccvn.h (vn_phi_lookup): Declare.
	* tree-ssa-sccvn.c (vn_phi_lookup): Export.

2009-01-28  Jakub Jelinek  <jakub@redhat.com>

	PR middle-end/38934
	* tree-vrp.c (extract_range_from_assert): For LE_EXPR and LT_EXPR
	set to varying whenever max has TREE_OVERFLOW set, similarly
	for GE_EXPR and GT_EXPR and TREE_OVERFLOW min.

2009-01-28  Richard Guenther  <rguenther@suse.de>

	PR middle-end/38908
	* tree-ssa.c (warn_uninitialized_var): Do not warn for seemingly
	uninitialized aggregate uses in call arguments.

2009-01-28  Paolo Bonzini  <bonzini@gnu.org>

	PR tree-optimization/38984
	* tree-ssa-structalias.c (get_constraints_for_1): Do not use
	the nothing_id variable if -fno-delete-null-pointer-checks.

2009-01-28  Uros Bizjak  <ubizjak@gmail.com>

	PR target/38988
	* config/i386/i386.md (set_rip_rex64): Wrap operand 1 in label_ref.
	(set_got_offset_rex64): Ditto.

2009-01-27  H.J. Lu  <hongjiu.lu@intel.com>

	PR target/38941
	* doc/extend.texi: Improve local variable with asm reg.

2009-01-27  Adam Nemet  <anemet@caviumnetworks.com>

	* c.opt (Wpacked-bitfield-compat): Change init value to -1.
	* c-opts.c (c_common_post_options): If -W*packed-bitfield-compat
	was not supplied then set warn_packed_bitfield_compat to the
	default value of 1.
	* stor-layout.c (place_field): Check warn_packed_bitfield_compat
	against 1.

2009-01-27  Richard Guenther  <rguenther@suse.de>

	PR tree-optimization/38503
	* cfgexpand.c (expand_gimple_basic_block): Ignore
	GIMPLE_CHANGE_DYNAMIC_TYPE during expansion.
	* tree-ssa-structalias.c (set_uids_in_ptset): Do not prune
	variables that cannot have TBAA applied.
	(compute_points_to_sets): Do not remove GIMPLE_CHANGE_DYNAMIC_TYPE
	statements.

2009-01-27  Uros Bizjak  <ubizjak@gmail.com>

	PR middle-end/38969
	* calls.c (initialize_argument_information): Do not wrap complex
	arguments in SAVE_EXPR.

2009-01-26  Andreas Tobler  <a.tobler@schweiz.org>

	* config/t-vxworks (LIBGCC2_INCLUDES): Fix typo.
	(INSTALL_LIBGCC): Revert typo commit.

2009-01-26  Richard Guenther  <rguenther@suse.de>

	PR tree-optimization/38745
	* tree-ssa-alias.c (update_alias_info_1): Exclude RESULT_DECL
	from special handling.

2009-01-26  Richard Guenther  <rguenther@suse.de>

	PR tree-optimization/38745
	* tree-ssa.c (execute_update_addresses_taken): Do not include
	variables that cannot possibly be a register in not_reg_needs.
	Do not clear TREE_ADDRESSABLE on vars that may not become
	registers.
	* tree-ssa.c (update_alias_info_1): Include those in the set
	of addressable vars.

2009-01-26  Richard Guenther  <rguenther@suse.de>

	PR middle-end/38851
	* Makefile.in (tree-ssa-dse.o): Add langhooks.h.
	* tree-ssa-dse.c: Include langhooks.h
	(execute_simple_dse): Remove stores with zero size.

2009-01-24  Jakub Jelinek  <jakub@redhat.com>

	PR c/38957
	* c-typeck.c (c_finish_return): Handle POINTER_PLUS_EXPR the same way
	as PLUS_EXPR.

2009-01-24  Julian Brown  <julian@codesourcery.com>

	* config/arm/t-linux-eabi (LIB2FUNCS_STATIC_EXTRA): Add
	config/arm/linux-atomic.c.
	* config/arm/linux-atomic.c: New.

2009-01-24  Eric Botcazou  <ebotcazou@adacore.com>

	* config/sparc/linux.h (DBX_REGISTER_NUMBER): Delete.
	* config/sparc/linux64.h (DBX_REGISTER_NUMBER): Likewise.
	* config/sparc/sysv4.h (DBX_REGISTER_NUMBER): Likewise.

2009-01-24  H.J. Lu  <hongjiu.lu@intel.com>

	PR c/38938
	* c-opts.c (c_common_handle_option): Update warn_pointer_sign
	properly.

2009-01-24  Sebastian Pop  <sebastian.pop@amd.com>

	PR tree-optimization/38953
	* graphite.c (graphite_verify): Add a call to verify_loop_closed_ssa.
	(scop_adjust_phis_for_liveouts): Initialize false_i to zero.
	(gloog): Split the exit of the scop when the scop exit is a loop exit.
	(graphite_transform_loops): Only call cleanup_tree_cfg if gloog
	changed the CFG.

2009-01-24  Paul Brook  <paul@codesourcery.com>

	* config/arm/neon.md (neon_type): Move to arm.md.
	(neon_mov<VSTRUCT>): Add neon_type attribute.
	* config/arm/arm.md (neon_type): Move to here.
	(conds): Add "unconditioal" and use as default for NEON insns.

2009-01-24  Ben Elliston  <bje@au.ibm.com>

	* bitmap.h (BITMAP_FREE): Eliminate `implicit conversion from
	void *' warning from -Wc++-compat.
	* Makefile.in (dominance.o-warn): Remove.

2009-01-23  Paolo Bonzini  <bonzini@gnu.org>

	PR tree-optimization/38932
	* fold-const.c (fold_unary_ignore_overflow): New.
	* tree.h (fold_unary_ignore_overflow): Declare.
	* tree-ssa-ccp.c (ccp_fold): Use fold_unary_ignore_overflow.
	* tree-ssa-sccvn.c (visit_reference_op_load,
	simplify_unary_expression): Likewise.

2009-01-22  Adam Nemet  <anemet@caviumnetworks.com>

	* c-decl.c (finish_struct): Move code to set DECL_PACKED after
	DECL_BIT_FIELD is alreay known.  Also inherit packed for bitfields
	regardless of their type.
	* c-common.c (handle_packed_attribute): Don't ignore packed on
	bitfields.
	* c.opt (Wpacked-bitfield-compat): New warning option.
	* stor-layout.c (place_field): Warn if offset of a field changed.
	* doc/extend.texi (packed): Mention the ABI change.
	* doc/invoke.texi (-Wpacked-bitfield-compat): Document.
	(Warning Options): Add it to the list.

2009-01-22  H.J. Lu  <hongjiu.lu@intel.com>

	* c-opts.c (c_common_post_options): Fix a typo in comments.

2009-01-22  Steve Ellcey  <sje@cup.hp.com>

	PR middle-end/38615
	* gimplify.c (gimplify_init_constructor): Fix promotion of const
	variables to static.
	* doc/invoke.texi (-fmerge-all-constants): Update description.

2009-01-22  Uros Bizjak  <ubizjak@gmail.com>

	PR target/38931
	* config/i386/i386.md (*movsi_1): Use type "mmx" for alternative 2.
	(*movdi_1_rex64): Use type "mmx" for alternative 5.

2009-01-22  Richard Earnshaw  <rearnsha@arm.com>

	* arm.h (DATA_ALIGNMENT): Align structures, unions and arrays to
	a word boundary.
	(LOCAL_ALIGNMENT): Similarly.

2009-01-22  Mark Shinwell  <shinwell@codesourcery.com>
	    Joseph Myers  <joseph@codesourcery.com>

	* config/arm/arm.c (all_architectures): Add iWMMXt2 entry.
	* config/arm/arm-cores.def: New ARM_CORE entry for iWMMXt2.
	* config/arm/arm-tune.md: Regenerate.
	* doc/invoke.texi (ARM Options): Document -mcpu=iwmmxt2 and
	-march=iwmmxt2.

2009-01-22  Mark Shinwell  <shinwell@codesourcery.com>

	* config/arm/bpabi.h (SUBTARGET_EXTRA_ASM_SPEC): Bump EABI
	version number to five.

2009-01-22  Dodji Seketeli  <dodji@redhat.com>

	PR c++/38930
	* c-decl.c (clone_underlying_type): Revert PR c++/26693 changes.
	* c-common.c (set_underlying_type): Likewise.
	(is_typedef_decl ): Likewise
	* tree.h: Likewise
	(set_underlying_type): Likewise.
	(is_typedef_type): Likewise.

2009-01-21  Vladimir Makarov  <vmakarov@redhat.com>

	PR middle-end/38587
	* ira-color.c (coalesce_spill_slots): Don't coalesce allocnos
	crossing setjmps.

2009-01-21  Dave Korn  <dave.korn.cygwin@gmail.com>

	PR bootstrap/37660
	* config/i386/cygwin.h (SHARED_LIBGCC_SPEC):  New helper macro.
	(LIBGCC_SPEC):  Don't define.
	(REAL_LIBGCC_SPEC):  Define instead, using SHARED_LIBGCC_SPEC.

2009-01-21  Uros Bizjak  <ubizjak@gmail.com>

	PR rtl-optimization/38879
	* alias.c (base_alias_check): Unaligned access via AND address can
	alias all surrounding object types except those with sizes equal
	or wider than the size of unaligned access.

2009-01-21  Dodji Seketeli  <dodji@redhat.com>

	PR c++/26693
	* c-decl.c (clone_underlying_type): Move this ...
	* c-common.c (set_underlying_type): ... here.
	Also, make sure the function properly sets TYPE_STUB_DECL() on
	the newly created typedef variant type.
	(is_typedef_decl ): New entry point.
	* tree.h: Added a new member member_types_needing_access_check to
	struct tree_decl_non_common.
	(set_underlying_type): New entry point.
	(is_typedef_type): Likewise.

2009-01-21  Bingfeng Mei  <bmei@broadcom.com>

	* alias.c (walk_mems_1, walk_mems_2, insn_alias_sets_conflict_p):
	Check whether two instructions have memory references that
	belong to conflicting alias sets.  walk_mems_1 and walk_mems_2
	are helper functions for traversing.
	* alias.h (insn_alias_sets_confilict_p): New prototypes.
	* ddg.c (add_inter_loop_mem_dep): Call insn_alias_sets_conflict_p
	not to draw dependency edge for instructions with non-conflicting
	alias sets.

2009-01-20  Joseph Myers  <joseph@codesourcery.com>

	PR other/38758
	* longlong.h: Update copyright years.  Use soft-fp license notice.
	Sync __clz_tab declaration with glibc.

2009-01-20  Steve Ellcey  <sje@cup.hp.com>

	PR target/30687
	* doc/extend.texi (syscall_linkage): New.
	(version_id): Modify.

2009-01-20  Andrew Pinski  <andrew_pinski@playstation.sony.com>
	    Richard Guenther  <rguenther@suse.de>

	PR tree-optimization/38747
	PR tree-optimization/38748
	* tree-ssa-forwprop.c (forward_propagate_addr_expr_1): Disable the VCE
	conversion if the base address is an indirect reference and the
	aliasing sets could cause issues.

2009-01-20  Sebastian Pop  <sebastian.pop@amd.com>

	* common.opt (fgraphite, fgraphite-identity): Add comment for 
	explaining why these options are not documented.

2009-01-20  Sebastian Pop  <sebastian.pop@amd.com>

	* graphite.c (stmt_simple_for_scop_p): Also handle cases when
	gimple_call_lhs is NULL.

2009-01-20  Paolo Bonzini  <bonzini@gnu.org>

	PR target/38868
	* emit-rtl.c (adjust_address_1): Make sure memref is never
	overwritten.

2009-01-20  Ben Elliston  <bje@au.ibm.com>

	* libgcov.c (__gcov_execl, __gcov_execlp, __gcov_execle): Remove
	const qualifier from arg parameter. Remove unnecessary cast to char *.
	* gcov-io.h (__gcov_execl, __gcov_execlp, __gcov_execle): Remove
	const qualifier from arg 2.

2009-01-19  Iain Sandoe  <iain.sandoe@sandoe-acoustics.co.uk>

	* config/darwin.h: Add static-libgfortran to LINK_SPEC.

2009-01-19  Vladimir Makarov  <vmakarov@redhat.com>

	PR c/38869
	* rtl.h (reinit_regs): New prototype.
	* regclass.c: Include ira.h.
	(reinit_regs): New.
	* Makefile.in (regclass.o): Add ira.h.
	* config/i386/i386.c (ix86_maybe_switch_abi): Use reinit_regs.

2009-01-18  H.J. Lu  <hongjiu.lu@intel.com>

	PR target/38736
	* c-common.c (handle_aligned_attribute): Use
	ATTRIBUTE_ALIGNED_VALUE instead of BIGGEST_ALIGNMENT for
	default alignment value.

	* c-cppbuiltin.c (c_cpp_builtins): Define __BIGGEST_ALIGNMENT__.

	* defaults.h (ATTRIBUTE_ALIGNED_VALUE): New.
	* config/i386/i386.h (ATTRIBUTE_ALIGNED_VALUE): Likewise.

	* doc/extend.texi: Update __attribute__ ((aligned)).  Document
	__BIGGEST_ALIGNMENT__.

	* doc/tm.texi: Document ATTRIBUTE_ALIGNED_VALUE.

2009-01-18  Richard Guenther  <rguenther@suse.de>

	PR tree-optimization/38819
	* tree-flow.h (operation_could_trap_helper_p): Declare.
	* tree-eh.c (operation_could_trap_helper_p): Export.
	* tree-ssa-sccvn.h (vn_nary_may_trap): Declare.
	* tree-ssa-sccvn.c (vn_nary_may_trap): New function.
	* tree-ssa-pre.c (insert_into_preds_of_block): Check if we
	are about to insert a possibly trapping instruction and fail
	in this case.

2009-01-18  Andreas Schwab  <schwab@suse.de>

	* doc/install.texi (Configuration): Remove obsolete paragraph
	about use of --with-gnu-ld with --with-gnu-as.

2009-01-18  Kazu Hirata  <kazu@codesourcery.com>

	* doc/extend.texi, doc/gimple.texi, doc/invoke.texi,
	doc/md.texi, doc/sourcebuild.texi, doc/tm.texi: Fix typos.
	Follow spelling conventions.

2009-01-18  Ben Elliston  <bje@au.ibm.com>

	* bitmap.c (bitmap_obstack_alloc_stat): Adjust cast to eliminate
	C++ warning about implicit conversion from void * to struct
	bitmap_head_def *.
	(bitmap_obstack_free): Likewise for bitmap_element *.
	* Makefile.in (bitmap.o-warn): Remove.

2009-01-17  Dave Korn  <dave.korn.cygwin@gmail.com>

	* Makefile.in (BACKENDLIBS):  Reorder to match dependencies.

2009-01-17  Sebastian Pop  <sebastian.pop@amd.com>
	    Tobias Grosser  <tobi.grosser@amd.com>

	* graphite.c (graphite_trans_scop_block): Do not block single
	nested loops.

2009-01-16  Alexandre Oliva  <aoliva@redhat.com>

	* ebitmap.h (ebitmap_iter_init): Initialize all fields.
	* ipa-struct-reorg.c (gen_struct_type): Replace known-true
	test with assertion.

2009-01-16  Richard Guenther  <rguenther@suse.de>

	PR tree-optimization/38835
	PR middle-end/36227
	* fold-const.c (fold_binary): Remove PTR + INT -> (INT)(PTR p+ INT)
	and INT + PTR -> (INT)(PTR p+ INT) folding.
	* tree-ssa-address.c (create_mem_ref): Properly use POINTER_PLUS_EXPR.

2009-01-16  Adam Nemet  <anemet@caviumnetworks.com>

	PR target/38554
	* expmed.c (expand_shift): With SHIFT_COUNT_TRUNCATED, don't lift
	the subreg from a lowpart subreg if it is also casting the value.

2009-01-16  Sebastian Pop  <sebastian.pop@amd.com>
	    Tobias Grosser  <tobi.grosser@amd.com>

	* graphite.c (compare_prefix_loops): New.
	(build_scop_canonical_schedules): Rewritten.
	(graphite_transform_loops): Move build_scop_canonical_schedules
	after build_scop_iteration_domain.

2009-01-16  Sebastian Pop  <sebastian.pop@amd.com>
	    Tobias Grosser  <tobi.grosser@amd.com>

	* graphite.c (add_conditions_to_domain): Add the loops to 
	the dimension of the iteration domain.  Do copy the domain
	only when it exists.
	(build_scop_conditions_1): Do not call add_conditions_to_domain.
	(add_conditions_to_constraints): New.
	(can_generate_code_stmt, can_generate_code): Removed.
	(gloog): Do not call can_generate_code.
	(graphite_transform_loops): Call add_conditions_to_constraints
	after building the iteration domain.

2009-01-16  Jakub Jelinek  <jakub@redhat.com>

	PR tree-optimization/38789
	* tree-ssa-threadedge.c
	(record_temporary_equivalences_from_stmts_at_dest): Ignore calls to
	__builtin_constant_p.

2009-01-16  Kenneth Zadeck  <zadeck@naturalbridge.com>

	* dce.c (delete_unmarked_insns): Reversed the order that insns are
	examined before deleting them.
	
2009-01-16  Richard Earnshaw  <rearnsha@arm.com>

	* function.c (aggregate_value_p): Correctly extract the function
	type from CALL_EXPR_FN lookup.

2009-01-16  Hariharan Sandanagobalane  <hariharan@picochip.com>

	* config/picochip/picochip.c (picochip_override_options): Revert
	CFI asm flag disable commited previously.

2009-01-15  Sebastian Pop  <sebastian.pop@amd.com>
	    Tobias Grosser  <tobi.grosser@amd.com>
	    Jan Sjodin  <jan.sjodin@amd.com>

	* graphite.c (scan_tree_for_params): On substractions negate
	all the coefficients of the term.
	(clast_to_gcc_expression_red): New.  Handle reduction expressions
	of more than two operands.
	(clast_to_gcc_expression): Call clast_to_gcc_expression_red.
	(get_vdef_before_scop): Handle also the case of default definitions.

2009-01-15  Richard Sandiford  <rdsandiford@googlemail.com>

	* caller-save.c (add_used_regs_1, add_used_regs): New functions.
	(insert_one_insn): Use them instead of REG_DEAD and REG_INC notes.
	Also use them when walking CALL_INSN_FUNCTION_USAGE.

2009-01-15  H.J. Lu  <hongjiu.lu@intel.com>
	    Joey Ye  <joey.ye@intel.com>

	PR middle-end/37843
	* cfgexpand.c (expand_stack_alignment): Don't update stack
	boundary nor check incoming stack boundary here.
	(gimple_expand_cfg): Update stack boundary and check incoming
	stack boundary here.

2009-01-15  Kenneth Zadeck  <zadeck@naturalbridge.com>

	* dce.c (find_call_stack_args, delete_unmarked_insns): Fixed comments.
	
2009-01-14  Jakub Jelinek  <jakub@redhat.com>

	PR rtl-optimization/38245
	* calls.c (expand_call): Add stack arguments to
	CALL_INSN_FUNCTION_USAGE even for pure calls (when
	ACCUMULATE_OUTGOING_ARGS) and even for args partially passed
	in regs and partially in memory or BLKmode arguments.
	(emit_library_call_value_1): Add stack arguments to
	CALL_INSN_FUNCTION_USAGE even for pure calls (when
	ACCUMULATE_OUTGOING_ARGS).
	* dce.c: Include tm_p.h.
	(find_call_stack_args): New function.
	(deletable_insn_p): Call it for CALL_P insns.  Add ARG_STORES
	argument.
	(mark_insn): Call find_call_stack_args for CALL_Ps.
	(prescan_insns_for_dce): Walk insns backwards in bb rather than
	forwards.  Allocate and free arg_stores bitmap if needed, pass it
	down to deletable_insn_p, don't mark stores set in arg_stores
	bitmap, clear the bitmap at the beginning of each bb.
	* Makefile.in (dce.o): Depend on $(TM_P_H).

2009-01-14  Michael Meissner  <gnu@the-meissners.org>

	PR target/22599
	* config/i386/i386.c (print_operand): Add tests for 'D', 'C', 'F', 'f'
	to make sure the insn is a conditional test (bug 22599).  Reformat a
	few long lines.

2009-01-14  Sebastian Pop  <sebastian.pop@amd.com>

	PR middle-end/38431
	* graphite.c (get_vdef_before_scop, scop_adjust_vphi): New.
	(scop_adjust_phis_for_liveouts): Call scop_adjust_vphi.
	(gloog): Do not call cleanup_tree_cfg.
	(graphite_transform_loops): Call cleanup_tree_cfg after all 
	scops have been code generated.

2009-01-14  Basile Starynkevitch  <basile@starynkevitch.net>
	* doc/gty.texi (Invoking the garbage collector): Added new node
	and section documenting ggc_collect.

2009-01-14  Richard Guenther  <rguenther@suse.de>

	PR tree-optimization/38826
	PR middle-end/38477
	* tree-ssa-structalias.c (emit_alias_warning): Emit the pointer
	initialization notes only if we actually emitted a warning.
	(intra_create_variable_infos): Add constraints for a result decl
	that is passed by hidden reference.
	(build_pred_graph): Mark all related variables non-direct on
	address-taking.

2009-01-14  Nick Clifton  <nickc@redhat.com>

	* ira-conflicts.c: Include addresses.h for the definition of
	base_reg_class.
	(ira_build_conflicts): Use base_reg_class instead of BASE_REG_CLASS.
	* Makefile.in: Add a dependency of ira-conflicts.o on addresses.h.

2009-01-13  Vladimir Makarov  <vmakarov@redhat.com>

	PR target/38811
	* Makefile.in (ira-lives.o): Add except.h.

	* ira-lives.c: Include except.h.
	(process_bb_node_lives): Process can_throw_internal.

2009-01-13  Jakub Jelinek  <jakub@redhat.com>

	PR rtl-optimization/38774
	* combine.c (simplify_set): When undoing cc_use change, don't do
	PUT_CODE on the newly created comparison, but instead put back the
	old comparison.

2009-01-13  Joseph Myers  <joseph@codesourcery.com>

	* doc/invoke.texi (ARM Options): Update lists of -mcpu and -march
	values.  Remove duplicate arm8 entry.

2009-01-13  Sebastian Pop  <sebastian.pop@amd.com>

	PR tree-optimization/38786
	* graphite.c (expand_scalar_variables_ssa_name): New, outlined from
	the SSA_NAME case of expand_scalar_variables_expr.
	Set the type of an expression to the type of its assign	statement.
	(expand_scalar_variables_expr): Also gather the scalar computation
	used to index the memory access.  Do not pass loop_p.
	Fix comment.  Stop recursion on tcc_constant or tcc_declaration.
	(expand_scalar_variables_stmt): Pass to expand_scalar_variables_expr
	the gimple_stmt_iterator where it inserts new code.
	Do not pass loop_p.
	(copy_bb_and_scalar_dependences): Do not pass loop_p.
	(translate_clast): Update call to copy_bb_and_scalar_dependences.

2009-01-13  Sebastian Pop  <sebastian.pop@amd.com>

	* graphite.h (debug_value): Removed.
	* graphite.c (debug_value): Removed.

2009-01-13  Richard Earnshaw  <rearnsha@arm.com>

	* config/arm/arm.c (output_move_double): Don't synthesize thumb-2
	ldrd/strd with two 32-bit instructions.

2009-01-13  Richard Earnshaw  <rearnsha@arm.com>

	* config/arm/arm.c (struct processors): Pass for speed down into
	cost helper functions.
	(const_ok_for_op): Handle COMPARE and inequality nodes.
	(arm_rtx_costs_1): Rewrite.
	(arm_size_rtx_costs): Update prototype.
	(arm_rtx_costs): Pass speed down to helper functions.
	(arm_slowmul_rtx_costs): Rework cost calculations.
	(arm_fastmul_rtx_costs, arm_xscale_rtx_costs): Likewise.
	(arm_9e_rtx_costs): Likewise.

2009-01-13  Uros Bizjak  <ubizjak@gmail.com>

	* config/alpha/alpha.c (alpha_legitimate_address_p): Explicit
	relocations of local symbols wider than UNITS_PER_WORD are not valid.
	(alpha_legitimize_address): Do not split local symbols wider than
	UNITS_PER_WORD into HIGH/LO_SUM parts.

2009-01-13  Danny Smith  <dannysmith@users.sourceforge.net>

	PR bootstrap/38580
	* gcc.c (process_command): Replace call to execvp with calls
	to pex_one and exit.

2009-01-03  Anatoly Sokolov  <aesok@post.ru>

	PR target/29141
	* config/avr/t-avr (LIB1ASMFUNCS): Add _tablejump_elpm.
	* config/avr/libgcc.S (__do_global_ctors, __do_global_dtors): Add
	variant for devices with 3-byte PC.
	(__tablejump_elpm__): New.

2009-01-12  Jakub Jelinek  <jakub@redhat.com>

	PR c/32041
	* c-parser.c (c_parser_postfix_expression): Allow `->' in
	offsetof member-designator, handle it as `[0].'.

2009-01-12  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>

	* pa.c (pa_asm_output_mi_thunk): Use pc-relative branch to thunk
	function when not using named sections on targets with named sections
	if branch distance is less than 262132.

2009-01-12  Richard Earnshaw  <rearnsha@arm.com>

	* combine.c (combine_instructions):  Recompute
	optimize_this_for_speed_p  for each BB in the main combine loop.

2009-01-12  Tomas Bily  <tbily@suse.cz>

	PR middlend/38385
	* tree-loop-distribution.c (prop_phis): New function.
	(generate_builtin): Call prop_phis.
	* testsuite/gcc.dg/tree-ssa/pr38385.c: New file.

2009-01-12  Jakub Jelinek  <jakub@redhat.com>

	PR tree-optimization/38807
	* tree-ssa-reassoc.c (remove_visited_stmt_chain): Don't look at
	gimple_visited_p unless stmt is GIMPLE_ASSIGN.

2009-01-11  Adam Nemet  <anemet@caviumnetworks.com>

	* expmed.c (store_bit_field_1): Properly truncate the paradoxical
	subreg of op0 to the original op0.

2009-01-11  Laurent GUERBY  <laurent@guerby.net>

	* doc/sourcebuild.texi (Source Tree): Move up intl and fixinc.
	
2009-01-11  Markus Schoepflin  <markus.schoepflin@comsoft.de>

	PR debug/7055
	* gcc/mips-tfile.c (parse_def): Fix parsing of def strings
	starting with digits.

2009-01-10  Jakub Jelinek  <jakub@redhat.com>

	PR target/38695
	* config/arm/arm.c (arm_is_long_call_p): Don't call
	arm_function_in_section_p if decl isn't a FUNCTION_DECL.

2009-01-09  Steven Bosscher  <steven@gcc.gnu.org>

	* regrename.c (regrename_optimize): Fix dumping.
	(find_oldest_value_reg): Preserve REG_POINTER.
	(copy_hardreg_forward_1): Likewise.

2009-01-09  Diego Novillo  <dnovillo@google.com>

	* gimple.h (struct gimple_statement_base) <uid>: Document
	the restrictions on its use.
	(gimple_uid): Tidy.
	(gimple_set_uid): Tidy.

2009-01-09  Jakub Jelinek  <jakub@redhat.com>

	* config/i386/i386.c (ix86_expand_movmem, ix86_expand_setmem): Add
	zero guard even if align_bytes != 0 and count is smaller than
	size_needed.

2009-01-09  Vladimir Makarov  <vmakarov@redhat.com>

	PR rtl-optimization/38495
	* ira-emit.c (print_move_list, ira_debug_move_list): New functions.
	(add_range_and_copies_from_move_list): Print all added ranges.
	Add ranges to memory optimized destination.

2009-01-09  Jakub Jelinek  <jakub@redhat.com>

	PR target/38686
	PR target/38708
	* config/i386/i386.c (override_options): Reject
	-mstringop-strategy=rep_8byte with -m32.
	(ix86_expand_movmem): For size_needed == 1 set epilogue_size_needed
	to 1.  Do count comparison against epilogue_size_needed at compile
	time even when count_exp was constant forced into register.  For
	size_needed don't jump to epilogue, instead just avoid aligning
	and invoke the body algorithm.  If need_zero_guard, add zero guard
	even if count is non-zero, but smaller than size_needed + number of
	bytes that could be stored for alignment.
	(ix86_expand_setmem): For size_needed == 1 set epilogue_size_needed
	to 1.  If need_zero_guard, add zero guard even if count is non-zero,
	but smaller than size_needed + number of bytes that could be stored
	for alignment.  Compare size_needed with epilogue_size_needed instead
	of desired_align - align, don't adjust size_needed, pass
	epilogue_size_needed to the epilogue expanders.

	PR c/35742
	* c-pretty-print.c (pp_c_expression): Handle GOTO_EXPR like BIND_EXPR.

2009-01-09  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>

	* pa.c (last_address): Change to unsigned.
	(update_total_code_bytes): Change argument to unsigned.  Don't
	check if insn addresses are set.
	(pa_output_function_epilogue): Set last_address to UINT_MAX if insn
	addresses are not set.
	(pa_asm_output_mi_thunk): Handle wrap when updating last_address.

2009-01-09  Nick Clifton  <nickc@redhat.com>

	* config/sh/symbian.c: Replace uses of DECL_INLINE with
	DECL_DECLARED_INLINE_P.

2009-01-09  Jakub Jelinek  <jakub@redhat.com>

	PR middle-end/38347
	* dojump.c (do_jump_by_parts_zero_rtx): Use mode instead of
	GET_MODE (op0) in operand_subword_force calls.

	PR middle-end/38771
	* fold-const.c (fold_unary): For COMPOUND_EXPR and COND_EXPR,
	fold_convert arg0 operands to TREE_TYPE (op0) first.

2009-01-08  Vladimir Makarov  <vmakarov@redhat.com>

	* params.def (ira-max-conflict-table-size): Decrease default value
	to 1000.

2009-01-08  Jakub Jelinek  <jakub@redhat.com>

	PR tree-optimization/37031
	* lambda-code.c (lambda_collect_parameters): Call pointer_set_destroy
	on parameter_set.
	(build_access_matrix): Reserve correct size for AM_MATRIX vector,
	allocate it using gc instead of heap, use VEC_quick_push instead of
	VEC_safe_push.
	* graphite.c (build_access_matrix): Allocate AM_MATRIX vector using gc
	instead of heap, use VEC_quick_push instead of VEC_safe_push.
	* tree-data-ref.h (struct access_matrix): Change matrix to gc
	allocated vector from heap allocated.
	* lambda.h: Add DEF_VEC_ALLOC_P for gc allocated lambda_vector.
	* tree-loop-linear.c (linear_transform_loops): Allocate nest
	vector only after perfect_loop_nest_depth call.

2009-01-08  Sebastian Pop  <sebastian.pop@amd.com>
	    Jan Sjodin  <jan.sjodin@amd.com>

	PR tree-optimization/38559
	* graphite.c (debug_value, copy_constraint,
	swap_constraint_variables, scale_constraint_variable, ): New.
	(get_lower_bound, get_upper_bound): Removed.
	(graphite_trans_bb_strip_mine): Clean up this code that works
	only for constant number of iterations.  Fully copy upper and
	lower bound constraints, not only the constant part of them.
	* graphite.h (debug_value): Declared.

2009-01-08  Ira Rosen  <irar@il.ibm.com>

	PR tree-optimization/37194
	* tree-vect-transform.c (vect_estimate_min_profitable_iters):
	Don't add the cost of cost model guard in prologue to scalar 
	outside cost in case of known number of iterations.

2009-01-07  Nathan Froyd  <froydnj@codesourcery.com>
	    Alan Modra  <amodra@bigpond.net.au>

	* config/rs6000/rs6000.c (rs6000_legitimize_address): Check for
	non-word-aligned REG+CONST addressing.

2009-01-07  Uros Bizjak  <ubizjak@gmail.com>

	PR target/38706
	* config/alpha/alpha.c (alpha_end_function): For TARGET_ABI_OSF, call
	free_after_compilation when outputting a thunk.
	(alpha_output_mi_thunk_osf): Assert that we are processing a thunk.
	Do not call free_after_compilation here.

2009-01-07  Uros Bizjak  <ubizjak@gmail.com>

	* config/i386/i386.c (ix86_target_string): Use ARRAY_SIZE.
	(ix86_valid_target_attribute_inner_p): Ditto.

2009-01-07  Jan Sjodin  <jan.sjodin@amd.com>

	PR tree-optimization/38492
	PR tree-optimization/38498
	* tree-check.c (operator_is_linear, scev_is_linear_expression): New.
	* tree-chrec.h (scev_is_linear_expression): Declared.
	* graphite.c (graphite_cannot_represent_loop_niter): New.
	(scopdet_basic_block_info): Call graphite_cannot_represent_loop_niter.
	(graphite_loop_normal_form): Use gcc_assert.
	(scan_tree_for_params): Use CASE_CONVERT.
	(phi_node_is_iv, bb_contains_non_iv_scalar_phi_nodes): New.
	(build_scop_conditions_1): Call bb_contains_non_iv_scalar_phi_nodes.
	Use gcc_assert.  Discard scops that contain unhandled cases.
	(build_scop_conditions): Return a boolean status for unhandled cases.
	(strip_mine_profitable_p): Print the loop number, not its depth.
	(is_interchange_valid): Pass the depth of the loop nest, don't
	recompute it wrongly.
	(graphite_trans_bb_block): Same.
	(graphite_trans_bb_block): Print tentative of loop blocking.
	(graphite_trans_scop_block): Do not print that the loop has been
	blocked.
	(graphite_transform_loops): Do not handle scops that contain condition
	scalar phi nodes.

2009-01-07  H.J. Lu  <hongjiu.lu@intel.com>

	AVX Programming Reference (December, 2008)
	* config/i386/avxintrin.h (_mm256_stream_si256): New.
	(_mm256_stream_pd): Likewise.
	(_mm256_stream_ps): Likewise.

	* config/i386/i386.c (ix86_builtins): Add IX86_BUILTIN_MOVNTDQ256,
	IX86_BUILTIN_MOVNTPD256 and IX86_BUILTIN_MOVNTPS256.
	(ix86_special_builtin_type): Add VOID_FTYPE_PV4DI_V4DI.
	(bdesc_special_args): Add __builtin_ia32_movntdq256,
	__builtin_ia32_movntpd256 and __builtin_ia32_movntps256.
	(ix86_init_mmx_sse_builtins): Handle VOID_FTYPE_PV4DI_V4DI.
	(ix86_expand_special_args_builtin): Likewise.

	* config/i386/sse.md (AVXMODEDI): New.
	(avx_movnt<mode>): Likewise.
	(avx_movnt<mode>): Likewise.
	(<sse>_movnt<mode>): Remove AVX support.
	(sse2_movntv2di): Likewise.

2009-01-07  Richard Guenther  <rguenther@suse.de>

	PR middle-end/38751
	* fold-const.c (extract_muldiv): Remove obsolete comment.
	(fold_plusminus_mult_expr): Undo MINUS_EXPR
	to PLUS_EXPR canonicalization for the canonicalization.

2009-01-07  Gerald Pfeifer  <gerald@pfeifer.com>

	* doc/install.texi (alpha*-dec-osf*): Remove note on 32-bit
	hosted cross-compilers generating less efficient code.

2009-01-06  Richard Sandiford  <rdsandiford@googlemail.com>

	* function.h (rtl_data): Add a dbr_scheduled_p field.
	* reorg.c (dbr_schedule): Set it.
	(gate_handle_delay_slots): Check it.
	* config/mips/mips.c (mips_base_delayed_branch): Delete.
	(mips_reorg): Check flag_delayed_branch instead of
	mips_base_delayed_branch.
	(mips_override_options): Don't set mips_base_delayed_branch
	or flag_delayed_branch.

2009-01-06  Richard Sandiford  <rdsandiford@googlemail.com>

	PR rtl-optimization/38426.
	* ira.c (ira): Set current_function_is_leaf earlier.

2009-01-06  Jakub Jelinek  <jakub@redhat.com>

	PR rtl-optimization/38722
	* combine.c (try_combine): Don't modify PATTERN (i3) and notes
	too early, only set a flag and modify after last possible
	undo_all point.

2009-01-06  Janis Johnson  <janis187@us.ibm.com>

	PR c/34252
	* ginclude/float.h: Rename DECnn_DEN to DECnn_SUBNORMAL_MIN.
	* real.c (decimal_single_format): Correct values of emin and emax.
	(decimal_double_format): Ditto.
	(decimal_quad_format): Ditto.
	* c-cppbuiltin.c (builtin_define_decimal_float_constants): Adjust
	computation of DECnn_MIN and DECnn_MAX for corrected values of
	emin and emax.  Define __DECnn_SUBNORMAL_MIN__ instead of
	__DECnn_MIN__, and adjust its computation for the corrected value
	of emin.

2009-01-06  Jan Hubicka  <jh@suse.cz>

	PR target/38744
	* config/i386/i386.c (ix86_expand_call): Use ARRAY_SIZE.

2009-01-06  Gerald Pfeifer  <gerald@pfeifer.com>

	* doc/contrib.texi (Contributors): Slightly adjust the end note.
	Add Robert Clark to the list of testers.

2009-01-06  Jan Hubicka  <jh@suse.cz>
	    Kai Tietz  <kai.tietz@onevision.com>

	* config/i386/i386.md (*msabi_syvabi): Add SSE regs clobbers.
	* config/i386/i386.c (ix86_expand_call): Add clobbers.

2009-01-06  Jan Hubicka  <jh@suse.cz>
	    Kai Tietz  <kai.tietz@onevision.com>

	* config/i386/i386.h (CONDITIONAL_CALL_USAGE): SSE regs are not used
	for w64 ABI.
	* config/i386/i386.c (struct ix86_frame): Add padding0 and nsseregs.
	(ix86_nsaved_regs): Count only general purpose regs.
	(ix86_nsaved_sseregs): New.
	(ix86_compute_frame_layout): Update nsseregs; set preferred alignment
	to 16 for w64; compute padding and size of sse reg save area.
	(ix86_emit_save_regs, ix86_emit_save_regs_using_mov): Save only
	general purpose regs.
	(ix86_emit_save_sse_regs_using_mov): New.
	(ix86_expand_prologue): Save SSE regs if needed.
	(ix86_emit_restore_regs_using_mov): Use only general purpose regs.
	(ix86_emit_restore_sse_regs_using_mov): New.
	(ix86_expand_epilogue): Save SSE regs if needed.

2009-01-06  Jan Hubicka  <jh@suse.cz>
	    Kai Tietz  <kai.tietz@onevision.com>

	* config/i386/i386.h (ACCUMULATE_OUTGOING_ARGS): Enable for MSABI
	* config/i386/i386.c (init_cumulative_args): Disallow calls of MSABI
	functions when accumulate outgoing args is off.

2009-01-06  H.J. Lu  <hongjiu.lu@intel.com>

	PR bootstrap/38742
	* ira-color.c (ira_reuse_stack_slot): Check ENABLE_IRA_CHECKING
	before using pseudos_have_intersected_live_ranges_p.

	* ira-int.h (ira_assert): Always define.

2009-01-06  H.J. Lu  <hongjiu.lu@intel.com>

	AVX Programming Reference (December, 2008)
	* config/i386/avxintrin.h (_mm_permute2_pd): Removed.
	(_mm256_permute2_pd): Likewise.
	(_mm_permute2_ps): Likewise.
	(_mm256_permute2_ps): Likewise.
	* config/i386/i386.md (UNSPEC_VPERMIL2): Likewise.
	* config/i386/sse.md (avx_vpermil2<mode>3): Likewise.

	* config/i386/i386.c (ix86_builtins): Remove
	IX86_BUILTIN_VPERMIL2PD, IX86_BUILTIN_VPERMIL2PS,
	IX86_BUILTIN_VPERMIL2PD256 and IX86_BUILTIN_VPERMIL2PS256.
	(ix86_builtin_type): Remove V8SF_FTYPE_V8SF_V8SF_V8SI_INT,
	V4DF_FTYPE_V4DF_V4DF_V4DI_INT, V4SF_FTYPE_V4SF_V4SF_V4SI_INT
	and V2DF_FTYPE_V2DF_V2DF_V2DI_INT.
	(bdesc_args): Remove __builtin_ia32_vpermil2pd,
	__builtin_ia32_vpermil2ps, __builtin_ia32_vpermil2pd256 and
	__builtin_ia32_vpermil2ps256.
	(ix86_init_mmx_sse_builtins): Updated.
	(ix86_expand_args_builtin): Likewise.

2009-01-05  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>

	* pa.c (output_call): Relocate non-jump insns in the delay slot of
	long absolute calls when generating PA 2.0 code.

2009-01-05  Vladimir Makarov  <vmakarov@redhat.com>

	PR rtl-optimization/38583
	* params.h (IRA_MAX_CONFLICT_TABLE_SIZE): New macro.

	* params.def (ira-max-conflict-table-size): New.

	* doc/invoke.texi (ira-max-conflict-table-size): Decribe.
	
	* ira.h (ira_conflicts_p): New external definition.
	
	* ira-conflicts.c (build_conflict_bit_table): Do not build too big
	table.  Report this.  Return result of building.
	(ira_build_conflicts): Use ira_conflicts_p.  Check result of
	building conflict table.

	* ira-color.c (fast_allocation): Use num instead of ira_allocnos_num.
	(ira_color): Use ira_conflicts_p.
	
	* global.c: Include ira.h.
	(pseudo_for_reload_consideration_p, build_insn_chain): Use
	ira_conflicts_p.

	* Makefile.in (global.o): Add ira.h.
	
	* ira-build.c (mark_all_loops_for_removal,
	propagate_some_info_from_allocno): New.
	(remove_unnecessary_allocnos): Call
	propagate_some_info_from_allocno.
	(remove_low_level_allocnos): New.
	(remove_unnecessary_regions): Add parameter.  Call
	mark_all_loops_for_removal and remove_low_level_allocnos.  Pass
	parameter to remove_unnecessary_regions.
	(ira_build): Remove all regions but root if the conflict table was
	not built.  Update conflict hard regs for allocnos crossing calls.

	* ira.c (ira_conflicts_p): New global.
	(ira): Define and use ira_conflicts_p.

	* reload1.c (compute_use_by_pseudos, reload, count_pseudo,
	count_spilled_pseudo, find_reg, alter_reg, finish_spills,
	emit_input_reload_insns, delete_output_reload): Use ira_conflicts_p.
	
2009-01-06  Ben Elliston  <bje@au.ibm.com>

	* gengtype-lex.l (YY_NO_INPUT): Define.

2009-01-05  Andrew Pinski  <andrew_pinski@playstation.sony.com>

	PR c/34911
	* c-common.c (handle_vector_size_attribute): Also reject
	BOOLEAN_TYPE types.

2009-01-05  Sebastian Pop  <sebastian.pop@amd.com>

	PR tree-optimization/38492
	* graphite.c (rename_map_elt, debug_rename_elt,
	debug_rename_map_1, debug_rename_map, new_rename_map_elt,
	rename_map_elt_info, eq_rename_map_elts,
	get_new_name_from_old_name, bb_in_sese_p): Moved around.
	(sese_find_uses_to_rename_use): Renamed sese_build_livein_liveouts_use.
	(sese_find_uses_to_rename_bb): Renamed sese_build_livein_liveouts_bb.
	(sese_build_livein_liveouts): New.
	(new_sese, free_sese): New.
	(new_scop): Call new_sese.
	(free_scop): Call free_sese.
	(rename_variables_from_edge, rename_phis_end_scop): Removed.
	(register_old_new_names): Renamed register_old_and_new_names.
	(register_scop_liveout_renames, add_loop_exit_phis,
	insert_loop_close_phis, struct igp,
	default_liveout_before_guard, add_guard_exit_phis,
	insert_guard_phis, copy_renames): New.
	(translate_clast): Call insert_loop_close_phis and insert_guard_phis.
	(sese_add_exit_phis_edge): Renamed scop_add_exit_phis_edge.
	(rewrite_into_sese_closed_ssa): Renamed scop_insert_phis_for_liveouts.
	(scop_adjust_phis_for_liveouts): New.
	(gloog): Call scop_adjust_phis_for_liveouts.

	* graphite.h (struct sese): Documented.  Added fields liveout,
	num_ver and livein.
	(SESE_LIVEOUT, SESE_LIVEIN, SESE_LIVEIN_VER, SESE_NUM_VER): New.
	(new_sese, free_sese, sese_build_livein_liveouts): Declared.
	(struct scop): Added field liveout_renames.
	(SCOP_LIVEOUT_RENAMES): New.

2009-01-05  Harsha Jagasia  <harsha.jagasia@amd.com>

	PR tree-optimization/38510
	* graphite.c (recompute_all_dominators): Call mark_irreducible_loops.
	(translate_clast): Call recompute_all_dominators before
	graphite_verify.
	(gloog): Call recompute_all_dominators before graphite_verify.

2009-01-05  Harsha Jagasia  <harsha.jagasia@amd.com>
	    Jan Sjodin  <jan.sjodin@amd.com>

	PR tree-optimization/38500
	* graphite.c (create_sese_edges): Call fix_loop_structure after
	splitting blocks.

2009-01-05  Joel Sherrill  <joel.sherrill@oarcorp.com>

	* config.gcc: Add m32r*-*-rtems*.
	* config/m32r/rtems.h: New file.

2009-01-05  Ben Elliston  <bje@au.ibm.com>

	* Makefile.in (.po.gmo): Use mkinstalldirs, not test -d || mkdir.
	(.po.pox): Likewise.
	(po/gcc.pot): Likewise.

2009-01-04  David S. Miller  <davem@davemloft.net>

	* config/sparc/sparc.h (SECONDARY_MEMORY_NEEDED_RTX): Delete.
	(STARTING_FRAME_OFFSET): Always set to zero.

2009-01-04  Richard Sandiford  <rdsandiford@googlemail.com>

	* tree.def (LSHIFT_EXPR, RSHIFT_EXPR): Add commentary.
	* tree-cfg.c (verify_gimple_assign_binary): Allow shifts of
	fixed-point types, and vectors of the same.

2009-01-04  Richard Sandiford  <rdsandiford@googlemail.com>

	* config/mips/sync.md (*mb_barrier): Rename to...
	(*memory_barrier): ...this.

2009-01-04  Jonathan Wakely  <jwakely.gcc@gmail.com>

	* doc/extend.texi (Function Attributes): Move @cindex after @item
	for 'artificial' and 'flatten'. Fix grammar for 'externally_visible'
	and put in alphabetical order. Fix 'target' name and put in order.
	* doc/invoke.texi (-Wstrict-null-sentinel, -fipa-matrix-reorg): Fix
	typos.

2009-01-04  Uros Bizjak  <ubizjak@gmail.com>

	* config/s390/s390.md (UNSPEC_MB): Rename from UNSPECV_MB.
	(memory_barrier): Expand as unspec instead of unspec_volatile.
	Remove mem:BLK from insn operands.  Use Pmode scratch register.
	(*memory_barrier): Define as unspec instead of unspec_volatile.
	Use (match_dup 0) as input operand.

	* config/sparc/sparc.md (UNSPEC_MEMBAR): Rename from UNSPECV_MEMBAR.
	* config/sparc/sync.md (memory_barrier): Expand as unspec instead of
	unspec_volatile.  Remove mem:BLK from insn operands.  Use Pmode
	scratch register.  Remove operand 1.
	(*stbar): Define as unspec instead of unspec_volatile.
	Use (match_dup 0) as input operand, remove (const_int 8).
	(*membar): Define as unspec instead of unspec_volatile.
	Use (match_dup 0) as input operand, remove input operand 2.

	* config/xtensa/xtensa.md (UNSPEC_MEMW): Rename from UNSPECV_MEMW.
	(memory_barrier): Expand as unspec instead of unspec_volatile.
	Remove mem:BLK from insn operands.  Use Pmode scratch register.
	(*memory_barrier): Define as unspec instead of unspec_volatile.
	Use (match_dup 0) as input operand.

	* config/ia64/sync.md (memory_barrier): Redefine as expander pattern.
	Remove mem:BLK from insn operands.  Use Pmode scratch register.
	Set volatile flag on operand 0.
	(*memory_barrier): New insn pattern.

	* config/rs6000/sync.md (memory_barrier): Remove mem:BLK from
	insn operands.
	(*memory_barrier): Use (match_dup 0) as input operand.

	* config/mips/sync.md (memory_barrier): Redefine as expander pattern.
	Remove mem:BLK from insn operands.  Use Pmode scratch register.
	Set volatile flag on operand 0.
	(*mb_internal): New insn pattern.

	* config/alpha/sync.md (*memory_barrier): Rename from *mb_internal.

2009-01-04  Steven Bosscher  <steven@gcc.gnu.org>

	PR middle-end/38586
	* function.c (struct temp_slot): Move to the section of the file
	that deals with temp slots.  Remove field 'address'.
	(temp_slot_address_table): New hash table of address -> temp slot.
	(struct temp_slot_address_entry): New struct, items for the table.
	(temp_slot_address_compute_hash, temp_slot_address_hash,
	temp_slot_address_eq, insert_temp_slot_address): Support functions
	for the new table.
	(find_temp_slot_from_address): Rewrite to use the new hash table.
	(remove_unused_temp_slot_addresses): Remove addresses of temp
	slots that have been made available.
	(remove_unused_temp_slot_addresses_1): Call-back for htab_traverse,
	worker function for remove_unused_temp_slot_addresses.
	(assign_stack_temp_for_type): Don't clear the temp slot address list.
	Add the temp slot address to the address -> temp slot map.
	(update_temp_slot_address): Update via insert_temp_slot_address.
	(free_temp_slots): Call remove_unused_temp_slot_addresses.
	(pop_temp_slots): Likewise.
	(init_temp_slots): Allocate the address -> temp slot map, or empty
	the map if it is already allocated.
	(prepare_function_start): Initialize temp slot processing.

2009-01-04  Steven Bosscher  <steven@gcc.gnu.org>

	PR middle-end/38584
	* cfgexpand.c (estimate_stack_frame_size): Simplify the estimate:
	Calculate the size of all stack vars assuming no packing of stack
	vars will happen, replacing a quadratic algorithm with a linear one.

2009-01-03  Jakub Jelinek  <jakub@redhat.com>

	PR target/38707
	* expmed.c (store_bit_field_1): Don't modify op0 if movstrict insn
	can't be used.

2009-01-03  Diego Novillo  <dnovillo@google.com>

	* doc/contrib.texi: Update contributions.

2009-01-03  Jakub Jelinek  <jakub@redhat.com>

	PR c++/38705
	* builtins.c (fold_builtin_memory_op): Give up if either operand
	is volatile.  Set srctype or desttype to non-qualified version
	of the other type.

	PR c/38700
	* builtins.c (fold_builtin_expect): Only check DECL_WEAK for VAR_DECLs
	and FUNCTION_DECLs.

2009-01-02  Kenneth Zadeck  <zadeck@naturalbridge.com>

	PR rtl-optimization/35805
	* df-problems.c (df_lr_finalize): Add recursive call to resolve lr
	problem if fast dce is able to remove any instructions.
	* dce.c (dce_process_block): Fix dump message.
	
2009-01-02  Mark Mitchell  <mark@codesourcery.com>

	PR 33649
	* tree-ssa-pre.c (compute_antic): Correct loop bounds.

2009-01-02  Jakub Jelinek  <jakub@redhat.com>

	PR middle-end/38690
	* tree-flow.h (op_code_prio, op_prio): New prototypes.
	* tree-pretty-print.c (op_code_prio): New function.
	(op_prio): No longer static.  Use op_code_prio.
	* gimple-pretty-print.c (dump_unary_rhs, dump_binary_rhs):
	Use op_prio and op_code_prio to determine if () should be
	printed around operand(s) or not.

	* gimple-pretty-print.c (dump_unary_rhs, dump_binary_rhs,
	dump_gimple_call, dump_gimple_switch, dump_gimple_cond,
	dump_gimple_label, dump_gimple_try, dump_symbols, dump_gimple_phi,
	dump_gimple_mem_ops, dump_bb_header, dump_bb_end, pp_cfg_jump): Use
	pp_character instead of pp_string for single letter printing.

2009-01-02  Richard Sandiford  <rdsandiford@googlemail.com>

	* doc/extend.texi: Fix '#pragma GCC option' typo.

2009-01-02  Richard Guenther  <rguenther@suse.de>

	* doc/install.texi (--enable-checking): Mention different
	default for stage1.
	(--enable-stage1-checking): Document.

2009-01-01  Andrew Pinski  <pinskia@gmail.com>

	PR middle-end/30142
	* tree-cfg.c (verify_expr): Add INDIRECT_REF case.  Change MODIFY_EXPR
	case to be an error.

2009-01-02  Ben Elliston  <bje@au.ibm.com>

	* config/fp-bit.h (pack_d): Constify argument.
	* config/fp-bit.c (makenan): Constify return type. Remove casts.
	(isnan): Constify argument.
	(isinf): Likewise.
	(iszero): Likewise.
	(pack_d): Likewise.
	(_fpadd_parts): Constify return type.
	(_fpmul_parts): Likewise.
	(_fpdiv_parts): Likewise.

2009-01-01  Jakub Jelinek  <jakub@redhat.com>

	PR c/36489
	* c-typeck.c (add_pending_init): Add IMPLICIT argument.  Only
	warn about overwriting initializer with side-effects or
	-Woverride-init if !IMPLICIT.
	(output_init_element): Likewise.  Pass IMPLICIT down to
	add_pending_init.
	(process_init_element): Add IMPLICIT argument.  Pass it down
	to output_init_element.
	(push_init_element, pop_init_level, set_designator): Adjust
	process_init_element callers.
	(set_nonincremental_init, set_nonincremental_init_from_string):
	Adjust add_pending_init callers.
	(output_pending_init_elements): Adjust output_init_element callers.
	* c-tree.h (process_init_element): Adjust prototype.
	* c-parser.c (c_parser_initelt, c_parser_initval): Adjust
	process_init_element callers.
