2012-01-06  Tobias Burnus <burnus@net-b.de>

	* trans-openmp.c (gfc_omp_clause_dtor, gfc_trans_omp_array_reduction):
	Update call to gfc_trans_dealloc_allocated.
	* trans.c (gfc_allocate_using_malloc): Fix spacing.
	(gfc_allocate_allocatable): For gfc_allocate_using_lib, jump to
	label_finish when an error occurs.
	(gfc_deallocate_with_status): Call caf_deregister for -fcoarray=lib.
	* trans.h (gfc_allocate_allocatable, gfc_deallocate_with_status):
	Update prototype.
	(gfor_fndecl_caf_deregister): New tree symbol.
	* trans-expr.c (gfc_conv_procedure_call): Update
	gfc_deallocate_with_status and gfc_trans_dealloc_allocated calls.
	* trans-array.c (gfc_array_allocate, gfc_trans_dealloc_allocated,
	structure_alloc_comps, gfc_trans_deferred_array): Ditto.
	(gfc_array_deallocate): Handle coarrays with -fcoarray=lib.
	* trans-array.h (gfc_array_deallocate, gfc_array_allocate,
	gfc_trans_dealloc_allocated): Update prototypes.
	* trans-stmt.c (gfc_trans_sync): Fix indentation.
	(gfc_trans_allocate): Fix errmsg padding and label handling.
	(gfc_trans_deallocate): Ditto and handle -fcoarray=lib.
	* expr.c (gfc_is_coarray): Fix algorithm for BT_CLASS.
	* libgfortran.h (GFC_STAT_STOPPED_IMAGE): Use large value
	to avoid other stats accidentally matching this one.
	* trans-decl.c (gfor_fndecl_caf_deregister): New global var.
	(gfc_build_builtin_function_decls): Fix prototype decl of caf_register
	and add decl for caf_deregister.
	(gfc_trans_deferred_vars): Handle CAF vars with -fcoarrays=lib.
	* trans-intrinsic.c (conv_intrinsic_move_alloc): Update call to
	gfc_deallocate_with_status.

2012-01-05  Paul Thomas  <pault@gcc.gnu.org>

	PR fortran/PR48946
	* resolve.c (resolve_typebound_static): If the typebound
	procedure is 'deferred' try to find the correct specific
	procedure in the derived type operator space itself.

2012-01-04  Mikael Morin  <mikael@gcc.gnu.org>

	PR fortran/50981
	* trans-array.h (gfc_walk_elemental_function_args): New argument.
	* trans-intrinsic.c (gfc_walk_intrinsic_function): Update call.
	* trans-stmt.c (gfc_trans_call): Ditto.
	* trans-array.c (gfc_walk_function_expr): Ditto.
	(gfc_walk_elemental_function_args): Get the dummy argument list
	if possible.  Check that the dummy and the actual argument are both
	optional, and set can_be_null_ref accordingly.

2012-01-04  Mikael Morin  <mikael@gcc.gnu.org>

	PR fortran/50981
	* trans.h (struct gfc_ss_info): New field data::scalar::can_be_null_ref
	* trans-array.c: If the reference can be NULL, save the reference
	instead of the value.
	* trans-expr.c (gfc_conv_expr): If we have saved a reference,
	dereference it.

2012-01-04  Mikael Morin  <mikael@gcc.gnu.org>

	* trans-expr.c (gfc_conv_expr): Move address taking...
	(gfc_conv_expr_reference): ... here.

2012-01-04  Thomas Koenig  <tkoenig@gcc.gnu.org>

	PR fortran/49693
	* trans-common.c (create_common): Update copyright years.  Mark
	variables as used to avoid warnings about unused variables in
	common blocks.

2012-01-03  Hans-Peter Nilsson  <hp@axis.com>

	* gfortran.h (struct gfc_expr): Add missing "struct"
	qualifier for member base_expr.

2012-01-02  Paul Thomas  <pault@gcc.gnu.org>

	PR fortran/51529
	* trans-array.c (gfc_array_allocate): Null allocated memory of
	newly allocted class arrays.

	PR fortran/46262
	PR fortran/46328
	PR fortran/51052
	* interface.c(build_compcall_for_operator): Add a type to the
	expression.
	* trans-expr.c (conv_base_obj_fcn_val): New function.
	(gfc_conv_procedure_call): Use base_expr to detect non-variable
	base objects and, ensuring that there is a temporary variable,
	build up the typebound call using conv_base_obj_fcn_val.
	(gfc_trans_class_assign): Pick out class procedure pointer
	assignments and do the assignment with no further prcessing.
	(gfc_trans_class_array_init_assign, gfc_trans_class_init_assign
	gfc_trans_class_assign): Move to top of file.
	* gfortran.h : Add 'base_expr' field to gfc_expr.
	* resolve.c (get_declared_from_expr): Add 'types' argument to
	switch checking of derived types on or off.
	(resolve_typebound_generic_call): Set the new argument.
	(resolve_typebound_function, resolve_typebound_subroutine):
	Set 'types' argument for get_declared_from_expr appropriately.
	Identify base expression, if not a variable, in the argument
	list of class valued calls. Assign it to the 'base_expr' field
	of the final expression. Strip away all references after the
	last class reference.

2012-01-02  Tobias Burnus  <burnus@net-b.de>

	PR fortran/51682
	* trans-intrinsic.c (trans_this_image, trans_image_index,
	trans_num_images, conv_intrinsic_cobound): Fold_convert the
	caf_num_images/caf_this_images variables to the correct int kind.

2012-01-01  Jakub Jelinek  <jakub@redhat.com>

	* gfortranspec.c (lang_specific_driver): Update copyright notice
	dates.

Copyright (C) 2012 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.
