2014-01-06  Adam Butcher  <adam@jessamine.co.uk>

	PR c++/59635
	* cp/lambda.c (maybe_add_lambda_conv_op): Handle marking conversion
	function as unimplemented for generic lambdas with varargs.

2014-01-03  Marc Glisse  <marc.glisse@inria.fr>

	PR c++/58950
	* cvt.c (convert_to_void): Handle VEC_PERM_EXPR and VEC_COND_EXPR.

2014-01-03  Tobias Burnus  <burnus@net-b.de>

	PR c++/58567
	* pt.c (tsubst_omp_for_iterator): Early return for error_mark_node.

2014-01-03  Paolo Carlini  <paolo.carlini@oracle.com>

	Core DR 1442
	PR c++/59165
	* parser.c (cp_parser_perform_range_for_lookup): Don't pass true
	as include_std to perform_koenig_lookup.
	(cp_parser_postfix_expression): Adjust.
	* pt.c (tsubst_copy_and_build): Likewise.
	* semantics.c (perform_koenig_lookup): Remove bool parameter.
	(omp_reduction_lookup): Adjust.
	* name-lookup.c (lookup_arg_dependent_1): Remove bool parameter.
	(lookup_arg_dependent): Likewise.
	(lookup_function_nonclass): Adjust.
	* name-lookup.h: Adjust declaration.
	* cp-tree.h: Likewise.

2014-01-02  Marc Glisse  <marc.glisse@inria.fr>

	PR c++/59087
	* parser.c (cp_parser_userdef_numeric_literal): Mention
	-fext-numeric-literals in the message.

2014-01-02  Marc Glisse  <marc.glisse@inria.fr>

	PR c++/59641
	* call.c (build_conditional_expr_1): Check the return value of
	force_rvalue.

2014-01-02  Marc Glisse  <marc.glisse@inria.fr>

	* call.c (convert_like_real): Check complain.

2014-01-02  Marc Glisse  <marc.glisse@inria.fr>

	PR c++/59378
	* typeck.c (build_x_vec_perm_expr): Handle non-dependent arguments
	in templates.

2014-01-02  Richard Sandiford  <rdsandiford@googlemail.com>

	Update copyright years

2014-01-02  Richard Sandiford  <rdsandiford@googlemail.com>

	* cp-array-notation.c, cp-cilkplus.c, vtable-class-hierarchy.c: Use
	the standard form for the copyright notice.

Copyright (C) 2014 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.
