; Processor-independent options for Darwin.

; Copyright (C) 2005, 2007, 2010 Free Software Foundation, Inc.
;
; This file is part of GCC.
;
; GCC is free software; you can redistribute it and/or modify it under
; the terms of the GNU General Public License as published by the Free
; Software Foundation; either version 3, or (at your option) any later
; version.
;
; GCC is distributed in the hope that it will be useful, but WITHOUT ANY
; WARRANTY; without even the implied warranty of MERCHANTABILITY or
; FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
; for more details.
;
; You should have received a copy of the GNU General Public License
; along with GCC; see the file COPYING3.  If not see
; <http://www.gnu.org/licenses/>.

mconstant-cfstrings
Target Report Var(darwin_constant_cfstrings) Init(1)
Generate compile-time CFString objects

Wnonportable-cfstrings
Target Report Var(darwin_warn_nonportable_cfstrings) Init(1) Warning
Warn if constant CFString objects contain non-portable characters

; Use new-style pic stubs if this is true, x86 only so far.
matt-stubs
Target Report Var(darwin_macho_att_stub) Init(1)
Generate AT&T-style stubs for Mach-O

mdynamic-no-pic
Target Common Report Mask(MACHO_DYNAMIC_NO_PIC)
Generate code suitable for executables (NOT shared libs)

mfix-and-continue
Target Report Var(darwin_fix_and_continue)
Generate code suitable for fast turn around debugging

; The Init here is for the convenience of GCC developers, so that
; cc1 and cc1plus don't crash if no -mmacosx-version-min is passed.  The
; driver will always pass a -mmacosx-version-min, so in normal use
; the Init is never used.
mmacosx-version-min=
Target Joined Report Var(darwin_macosx_version_min) Init("10.1")
The earliest MacOS X version on which this program will run

mone-byte-bool
Target RejectNegative Report Var(darwin_one_byte_bool)
Set sizeof(bool) to 1

fapple-kext
Target Report C++ Var(flag_apple_kext)
Generate code for darwin loadable kernel extensions

mkernel
Target Report Var(flag_mkernel)
Generate code for the kernel or loadable kernel extensions

iframework
Target RejectNegative C ObjC C++ ObjC++ Joined Separate 
-iframework <dir>	Add <dir> to the end of the system framework include path

Zallowable_client
Driver Separate

Zbundle_loader
Driver Separate

Zdylib_file
Driver Separate

Zexported_symbols_list
Driver Separate

Zfn_seg_addr_table_filename
Driver Separate

Zimage_base
Driver Separate

Zinit
Driver Separate

Zinstall_name
Driver Separate

Zmultiply_defined
Driver Separate

Zmultiplydefinedunused
Driver Separate

Zseg_addr_table
Driver Separate

Zsegs_read_only_addr
Driver Separate

Zsegs_read_write_addr
Driver Separate

Zumbrella
Driver Separate

Zunexported_symbols_list
Driver Separate

Zweak_reference_mismatches
Driver Separate

client_name
Driver Separate

compatibility_version
Driver Separate

current_version
Driver Separate

dylinker_install_name
Driver Separate

pagezero_size
Driver Separate

read_only_relocs
Driver Separate

seg1addr
Driver Separate

segs_read_only_addr
Driver Separate

segs_read_write_addr
Driver Separate

sub_library
Driver Separate

sub_umbrella
Driver Separate

undefined
Driver Separate
