# Copyright (C) 2016 Free Software Foundation, Inc.
#
# This file is part of GCC.
#
# GCC is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3, or (at your option)
# any later version.
#
# GCC is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with GCC; see the file COPYING3.  If not see
# <http://www.gnu.org/licenses/>.

# This is a target makefile fragment that attempts to get
# multilibs built for the range of CPU's, FPU's and ABI's that
# are relevant for the ARM architecture.  It should not be used in
# conjunction with another make file fragment and assumes --with-arch,
# --with-cpu, --with-fpu, --with-float, --with-mode have their default
# values during the configure step.  We enforce this during the
# top-level configury.

MULTILIB_OPTIONS     =
MULTILIB_DIRNAMES    =
MULTILIB_EXCEPTIONS  =
MULTILIB_MATCHES     =
MULTILIB_REUSE	     =
MULTILIB_REQUIRED    =

comma := ,
tm_multilib_list := $(subst $(comma), ,$(TM_MULTILIB_CONFIG))

HAS_APROFILE := $(filter aprofile,$(tm_multilib_list))
HAS_RMPROFILE := $(filter rmprofile,$(tm_multilib_list))

# Produce the combinatorial list of extensions.  Where there are
# multiple permutations for a combination, the ordering is the
# selected by the forward ordering of the original list.  This matches
# the canonical ordering generated by the canonicalizer in the driver.
#
# For example,
#   $(call all_feat_combs, a b)
# will produce
#   +a +a+b +b
# but will not include
#   +b+a
# The rule is recursive and can be called with any (reasonable) list of
# extensions.
all_feat_combs	= +$(firstword $(1)) \
		  $(if $(wordlist 2, $(words $(1)), $(1)), \
		    $(foreach OPT, \
		      $(call all_feat_combs, \
		        $(wordlist 2, $(words $(1)), $(1))), \
		      +$(firstword $(1))$(OPT) $(OPT)),)

ifneq (,$(HAS_APROFILE))
include $(srcdir)/config/arm/t-aprofile
endif
ifneq (,$(HAS_RMPROFILE))
include $(srcdir)/config/arm/t-rmprofile
endif
SEP := $(and $(HAS_APROFILE),$(HAS_RMPROFILE),/)


MULTILIB_OPTIONS       += marm/mthumb
MULTILIB_DIRNAMES      += arm thumb

MULTILIB_OPTIONS       += march=armv5te+fp/$(MULTI_ARCH_OPTS_A)$(SEP)$(MULTI_ARCH_OPTS_RM)
MULTILIB_DIRNAMES      += v5te $(MULTI_ARCH_DIRS_A) $(MULTI_ARCH_DIRS_RM)

MULTILIB_OPTIONS       += mfloat-abi=soft/mfloat-abi=softfp/mfloat-abi=hard
MULTILIB_DIRNAMES      += nofp softfp hard

MULTILIB_REQUIRED      += mthumb/mfloat-abi=soft
MULTILIB_REQUIRED      += marm/march=armv5te+fp/mfloat-abi=hard
