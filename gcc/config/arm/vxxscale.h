/* Definitions of target machine for GNU compiler,
   targetting the XSCALE/VxWorks run time environments. 
   Common definitions for both the COFF (VxWorks5.4/T2.1)
   and ELF (VxWorks5.5/T2.2) targets.
   Copyright (C) 2003 Free Software Foundation, Inc.
   
This file is part of GCC.

GCC is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2, or (at your option)
any later version.

GCC is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with GCC; see the file COPYING.  If not, write to
the Free Software Foundation, 59 Temple Place - Suite 330,
Boston, MA 02111-1307, USA.  */

#define SUBTARGET_CPU_DEFAULT TARGET_CPU_xscale

#undef  CPP_PREDEFINES
#define CPP_PREDEFINES "-DCPU=XSCALE -D__vxworks -Acpu=xscale -Amachine=xscale"

#undef  TARGET_DEFAULT
#define TARGET_DEFAULT (ARM_FLAG_SOFT_FLOAT | ARM_FLAG_APCS_32)

#undef  ASM_FILE_START
#define ASM_FILE_START(STREAM) 						\
  do 									\
    {									\
      fprintf (STREAM, "%s Generated by gcc %s for Xscale/VxWorks\n",	\
	       ASM_COMMENT_START, version_string);			\
    }									\
  while (0)

/* Set up a trampoline, without forgetting to flush the Icache. */
#undef  INITIALIZE_TRAMPOLINE
#define INITIALIZE_TRAMPOLINE(TRAMP, FNADDR, CXT)                      \
{                                                                      \
  emit_move_insn (gen_rtx (MEM, SImode, plus_constant ((TRAMP), 8)),   \
                 (CXT));                                               \
  emit_move_insn (gen_rtx (MEM, SImode, plus_constant ((TRAMP), 12)),  \
                 (FNADDR));                                            \
  emit_library_call (gen_rtx_SYMBOL_REF (Pmode, "__clear_cache"),      \
                    0, VOIDmode, 2, TRAMP, Pmode,                      \
                    plus_constant (TRAMP, TRAMPOLINE_SIZE), Pmode);    \
}

/* Clear the instruction cache from `BEG' to `END', resorting to the
   appropriate VxWorks service.  */
#define CLEAR_INSN_CACHE(BEG, END)                                     \
{                                                                      \
  extern int cacheTextUpdate (void *, size_t);                         \
  cacheTextUpdate ((void *) (BEG), (size_t) ((END) - (BEG)));            \
}

/* VxWorks does all the library stuff itself.  */
#undef  LIB_SPEC
#define LIB_SPEC 	""

/* VxWorks uses object files, not loadable images.  make linker just
   combine objects. */
#undef  LINK_SPEC
#define LINK_SPEC 	"-r"

/* VxWorks provides the functionality of crt0.o and friends itself.  */
#undef  STARTFILE_SPEC
#define STARTFILE_SPEC 	""

#undef  ENDFILE_SPEC
#define ENDFILE_SPEC 	""

#define EH_FRAME_IN_DATA_SECTION
/* ??? To be investigated, in order to avoid link time errors against
   __EH_FRAME_BEGIN__, only defined through the use of crtstuff.  */
