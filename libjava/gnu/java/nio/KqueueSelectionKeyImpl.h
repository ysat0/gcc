
// DO NOT EDIT THIS FILE - it is machine generated -*- c++ -*-

#ifndef __gnu_java_nio_KqueueSelectionKeyImpl__
#define __gnu_java_nio_KqueueSelectionKeyImpl__

#pragma interface

#include <java/nio/channels/spi/AbstractSelectionKey.h>
extern "Java"
{
  namespace gnu
  {
    namespace java
    {
      namespace nio
      {
          class KqueueSelectionKeyImpl;
          class KqueueSelectorImpl;
          class VMChannelOwner;
      }
    }
  }
  namespace java
  {
    namespace nio
    {
      namespace channels
      {
          class SelectableChannel;
          class SelectionKey;
          class Selector;
      }
    }
  }
}

class gnu::java::nio::KqueueSelectionKeyImpl : public ::java::nio::channels::spi::AbstractSelectionKey
{

public:
  KqueueSelectionKeyImpl(::gnu::java::nio::KqueueSelectorImpl *, ::java::nio::channels::SelectableChannel *);
  virtual ::java::nio::channels::SelectableChannel * channel();
  virtual jint interestOps();
  virtual ::java::nio::channels::SelectionKey * interestOps(jint);
  virtual jint readyOps();
  virtual ::java::nio::channels::Selector * selector();
  virtual ::java::lang::String * toString();
  virtual jint hashCode();
  virtual jboolean equals(::java::lang::Object *);
public: // actually package-private
  virtual jboolean isReadActive();
  virtual jboolean isReadInterested();
  virtual jboolean isWriteActive();
  virtual jboolean isWriteInterested();
  virtual jboolean needCommitRead();
  virtual jboolean needCommitWrite();
  jint __attribute__((aligned(__alignof__( ::java::nio::channels::spi::AbstractSelectionKey)))) interestOps__;
  jint readyOps__;
  jint activeOps;
  jint key;
  jint fd;
private:
  ::gnu::java::nio::KqueueSelectorImpl * selector__;
  ::java::nio::channels::SelectableChannel * channel__;
  ::gnu::java::nio::VMChannelOwner * natChannel;
public:
  static ::java::lang::Class class$;
};

#endif // __gnu_java_nio_KqueueSelectionKeyImpl__
