
// DO NOT EDIT THIS FILE - it is machine generated -*- c++ -*-

#ifndef __gnu_javax_net_ssl_provider_SSLSocketFactory__
#define __gnu_javax_net_ssl_provider_SSLSocketFactory__

#pragma interface

#include <javax/net/ssl/SSLSocketFactory.h>
#include <gcj/array.h>

extern "Java"
{
  namespace gnu
  {
    namespace javax
    {
      namespace net
      {
        namespace ssl
        {
          namespace provider
          {
              class SSLSocket;
              class SSLSocketFactory;
              class SessionContext;
          }
        }
      }
    }
  }
  namespace java
  {
    namespace net
    {
        class InetAddress;
        class Socket;
    }
    namespace security
    {
        class SecureRandom;
    }
  }
  namespace javax
  {
    namespace net
    {
      namespace ssl
      {
          class X509KeyManager;
          class X509TrustManager;
      }
    }
  }
}

class gnu::javax::net::ssl::provider::SSLSocketFactory : public ::javax::net::ssl::SSLSocketFactory
{

public: // actually package-private
  SSLSocketFactory(::javax::net::ssl::X509TrustManager *, ::javax::net::ssl::X509KeyManager *, ::java::security::SecureRandom *, ::gnu::javax::net::ssl::provider::SessionContext *);
public:
  virtual JArray< ::java::lang::String * > * getDefaultCipherSuites();
  virtual JArray< ::java::lang::String * > * getSupportedCipherSuites();
  virtual ::java::net::Socket * createSocket(::java::net::Socket *, ::java::lang::String *, jint, jboolean);
  virtual ::java::net::Socket * createSocket();
  virtual ::java::net::Socket * createSocket(::java::lang::String *, jint);
  virtual ::java::net::Socket * createSocket(::java::lang::String *, jint, ::java::net::InetAddress *, jint);
  virtual ::java::net::Socket * createSocket(::java::net::InetAddress *, jint);
  virtual ::java::net::Socket * createSocket(::java::net::InetAddress *, jint, ::java::net::InetAddress *, jint);
private:
  ::gnu::javax::net::ssl::provider::SSLSocket * setup(::gnu::javax::net::ssl::provider::SSLSocket *);
  ::javax::net::ssl::X509TrustManager * __attribute__((aligned(__alignof__( ::javax::net::ssl::SSLSocketFactory)))) trustManager;
  ::javax::net::ssl::X509KeyManager * keyManager;
  ::java::security::SecureRandom * random;
  ::gnu::javax::net::ssl::provider::SessionContext * sessionContext;
public:
  static ::java::lang::Class class$;
};

#endif // __gnu_javax_net_ssl_provider_SSLSocketFactory__
